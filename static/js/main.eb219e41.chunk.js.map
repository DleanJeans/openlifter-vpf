{"version":3,"sources":["components/lifting/LiftingView.module.scss","components/meet-setup/ColorPicker.module.scss","components/lifting/LiftingHeader.module.scss","components/results/ResultsView.module.scss","components/flight-order/OneFlightOrder.module.scss","components/lifting/BarLoad.module.scss","components/lifting/LiftingTable.module.scss","components/common/ContentArea.module.scss","components/lifting/LiftingFooter.module.scss","serviceWorker.js","translations/index.ts","components/translations/OpenLifterIntlProvider.tsx","components/translations/LanguageSelector.tsx","actions/languageActions.ts","actions/globalActions.ts","types/utils.ts","logic/units.ts","logic/strings.ts","versions.ts","reducers/versionsReducer.ts","logic/date.ts","constants/plateColors.ts","reducers/meetReducer.ts","logic/entry.ts","reducers/registrationReducer.ts","reducers/liftingReducer.ts","reducers/rootReducer.ts","reducers/languageReducer.ts","components/home/NewMeetModal.tsx","components/ErrorModal.tsx","containers/HomeContainer.tsx","components/ValidatedInput.tsx","actions/meetSetupActions.ts","components/meet-setup/MeetDate.tsx","components/common/NumberInput.tsx","components/meet-setup/MeetLength.tsx","components/meet-setup/PlatformCount.tsx","components/meet-setup/PlatformCounts.tsx","components/meet-setup/AutoFillRules.tsx","components/meet-setup/DivisionSelect.tsx","components/meet-setup/WeightClassesSelect.tsx","components/meet-setup/BarAndCollarsWeightKg.tsx","components/meet-setup/ColorPicker.tsx","components/meet-setup/PlateInput.tsx","components/meet-setup/Plates.tsx","components/common/YesNoButton.tsx","components/meet-setup/AttemptHandinTimer.tsx","components/meet-setup/MeetSetup.tsx","containers/MeetSetupContainer.tsx","components/registration/LifterTable.tsx","components/translations/LocalizedString.tsx","validation/iso8601Date.ts","validation/positiveInteger.ts","actions/registrationActions.ts","components/registration/LifterRow.tsx","components/registration/NewButton.tsx","logic/export/csv.ts","logic/parsers.ts","logic/import/registration-csv.ts","logic/export/registrations.ts","components/debug/RandomizeHelpers.ts","components/registration/RegistrationView.tsx","containers/RegistrationContainer.tsx","components/weighins/LifterTable.tsx","actions/liftingActions.ts","components/weighins/WeightInput.tsx","components/weighins/LifterRow.tsx","components/weighins/WeighinsView.tsx","containers/WeighinsContainer.tsx","logic/barLoad.ts","components/lifting/BarLoad.tsx","components/lifting/LeftCard.tsx","components/lifting/AttemptInput.tsx","logic/coefficients/ah.ts","logic/coefficients/dots.ts","logic/coefficients/foster-mcculloch.ts","logic/coefficients/schwartzmalone.ts","logic/coefficients/wilks.ts","logic/coefficients/glossbrenner.ts","logic/coefficients/goodlift.ts","logic/coefficients/ipf.ts","logic/coefficients/reshel.ts","logic/coefficients/wilks2020.ts","logic/coefficients/coefficients.ts","logic/coefficients/bodyweight-multiple.ts","logic/coefficients/nasa.ts","logic/liftingOrder.ts","logic/divisionPlace.ts","components/lifting/LiftingTable.tsx","components/lifting/LiftingFooter.tsx","components/lifting/LiftingHeader.tsx","components/lifting/ColumnWidth.tsx","components/lifting/LiftingView.tsx","containers/LiftingContainer.tsx","components/flight-order/OneFlightOrder.tsx","components/flight-order/FlightOrderView.tsx","containers/FlightOrderContainer.tsx","components/results/ByDivision.tsx","logic/pointsPlace.ts","components/results/ByPoints.tsx","logic/export/oplcsv.ts","logic/export/usapl.ts","components/results/ResultsView.tsx","containers/ResultsContainer.tsx","components/debug/RandomizeMeetSetup.tsx","components/debug/RandomizeRegistration.tsx","components/debug/RandomizeWeighins.tsx","components/debug/StateTools.tsx","containers/DebugContainer.tsx","containers/AboutContainer.tsx","containers/RootContainer.tsx","components/Navigation.tsx","store.ts","App.tsx","index.tsx","components/lifting/LeftCard.module.scss"],"names":["module","exports","liftingView","middleParentContainer","leftCardContainer","rightCardContainer","swatch","color","onTop","header","lifterName","info","controlPanel","dropdown","leftDivider","container","rackInfo","bar","kg50","kg25","kg20","kg15","kg10","kg5","kg2p5","kg1p25","kg1","kg0p75","kg0p5","kg0p25","lbs100","lbs55","lbs45","lbs35","lbs25","lbs10","lbs5","lbs2p5","lbs1p25","lbs0p5","collar","error","liftingtable","textCell","smallCell","spacerCell","activeColumn","attemptInputCell","current","goodlift","nolift","attemptInput","contentArea","footer","leftControls","rightControls","fullscreen","goodLift","noLift","selector","Boolean","window","location","hostname","match","translations","de","el","eo","en","es","fr","hr","it","lt","nl","pt","ru","tr","uk","zh-Hans","OpenLifterIntlProvider","language","this","props","Error","messages","react","provider","locale","defaultLocale","key","children","React","connect","state","languageOptions","react_default","a","createElement","value","LanguageSelector","FormControl_default","as","onChange","changeLanguage","className","Component","dispatch","event","type","currentTarget","overwriteStore","store","isString","assertString","result","concat","assertFlight","flight","kg2lbs","kg","lbs2kg","lbs","string2number","s","Number","replace","displayWeight","weight","lang","undefined","rounded","Math","round","Intl","NumberFormat","useGrouping","maximumFractionDigits","format","displayWeightOnePlace","truncated","trunc","displayPoints","points","minimumFractionDigits","displayNumber","number","displayPlaceOrdinal","entry","sex","getString","id","localizeEquipment","equipment","delocalizeEquipment","text","localizeEvent","delocalizeEvent","localizeFlight","delocalizeFlight","localizeSex","delocalizeSex","localizeWeightClassStr","wtcls","isSHW","endsWith","asNumber","getDefaultLanguage","navigator","languages","i","length","releaseVersion","process","initialState","stateVersion","localDateToIso8601","d","year","getFullYear","month","getMonth","day","getDate","yearStr","String","monthStr","dayStr","PlateColors","PLATE_DEFAULT_BLACK","PLATE_DEFAULT_WHITE","PLATE_DEFAULT_BLUE","PLATE_DEFAULT_GREEN","PLATE_DEFAULT_GRAY","PLATE_DEFAULT_RED","PLATE_DEFAULT_YELLOW","PLATE_DEFAULT_ORANGE","PLATE_DEFAULT_PINK","PLATE_DEFAULT_PURPLE","defaultPlatesKg","weightKg","pairCount","defaultPlatesLbs","name","country","city","federation","date","Date","lengthDays","platformsOnDays","divisions","weightClassesKgMen","weightClassesKgWomen","weightClassesKgMx","formula","ageCoefficients","combineSleevesAndWraps","allow4thAttempts","enableAttemptHandinTimer","attemptHandinTimeout","inKg","showAlternateUnits","squatBarAndCollarsWeightKg","benchBarAndCollarsWeightKg","deadliftBarAndCollarsWeightKg","plates","getWeightClassStr","classes","bodyweightKg","wtclsStrKg2Lbs","kgcls","shw","floor","getWeightClassLbsStr","newDefaultEntry","platform","birthDate","age","intendedWeightClassKg","events","lot","memberId","paid","team","guest","notes","squatRackInfo","benchRackInfo","squatKg","benchKg","deadliftKg","squatStatus","benchStatus","deadliftStatus","getAge","meetDate","_meetDate$split$map","split","map","_meetDate$split$map2","Object","slicedToArray","my","mm","md","_entry$birthDate$spli","_entry$birthDate$spli2","by","bm","bd","years","getBest5SquatKg","best3SquatKg","max","getBest5BenchKg","best3BenchKg","getBest5DeadliftKg","best3DeadliftKg","getProjectedTotalKg","best3Squat","best3Bench","best3Dead","getProjectedEventTotalKg","includes","getBest3SquatKg","getBest3BenchKg","getBest3DeadliftKg","getFinalTotalKg","getFinalEventTotalKg","getLiftersOnDay","entries","filter","liftToAttemptFieldName","lift","liftToStatusFieldName","entryHasLifted","liftingPresentOnPlatform","getWhetherPlatformsHaveLifted","ret","platformsOnDay","acc","push","nextEntryId","lookup","overrideAttempt","overrideEntryId","columnDivisionWidthPx","combineReducers","versions","arguments","action","meet","objectSpread","numDays","diff","newPlatformsOnDays","slice","count","defaultPlates","defaultBar","classesKg","index","findIndex","p","newPlates","changes","newState","assign","registration","obj","overwriteDefaults","newEntry","previousEntry","entryId","item","attemptOneIndexed","field","newEntries","oldEntry","newarray","newfields","status","success","fieldStatus","platformEntries","e","updatedEntries","lotNumbers","lifting","attempt","combined","NewMeetModal","_this","Modal_default","show","onHide","close","Header","closeButton","Title","message","defaultMessage","values","meetName","Body","Footer","Button_default","onClick","variant","lib","to","defaultStore","rootReducer","ErrorModal","title","centerConsole","maxWidth","marginRight","marginLeft","buttonMargin","marginBottom","HomeContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLoadClick","loadhelper","document","getElementById","click","handleNewClick","setState","showNewMeetModal","closeConfirmModal","closeErrorModal","handleLoadFileInput","loadHelper","HTMLInputElement","files","selectedFile","redux","rememberThis","assertThisInitialized","reader","FileReader","onload","errored","JSON","parse","target","err","readAsText","handleSaveClick","meetname","stringify","blob","Blob","saveAs","renderContinueButton","block","style","bind","newMeetButton","betaWarning","wrongVersion","dataReleaseVersion","warning","oldVersion","thisVersion","Card_default","styles","home_NewMeetModal","components_ErrorModal","alt","src","Container_default","Row_default","Col_default","href","otherVersion","translations_LanguageSelector","rel","textAlign","releaseDate","accept","display","BirthDateInput","validate","handleKeyDown","blur","handleChange","handleBlur","initialValue","onSuccess","validation","maybeLabel","label","Form_default","Label","Group","keepMargin","Control","placeholder","disabled","onKeyDown","onBlur","isValid","isInvalid","setDivisions","setLengthDays","setPlatformsOnDays","setWeightClasses","updateMeet","registerLocale","zh_CN","MeetDate","initialDate","_s$split","_s$split2","parseInt","setFullYear","iso8601ToLocalDate","FormGroup_default","react_datepicker_min_default","dateFormat","selected","setMeetDate","inline","NumberInput","num","handleDecrement","handleStep","step","handleIncrement","n","multiple","abs","ceil","InputGroup_default","Prepend","borderRight","onMouseDown","index_es","icon","faMinus","Append","borderLeft","faPlus","MeetLength","isInteger","common_NumberInput","days","PlatformCount","PlatformCounts","createPlatformInputs","inputs","meet_setup_PlatformCount","traditionalDefaults","bpDefaults","gpcDefaults","spfDefaults","upaDefaults","usaplDefaults","uspaDefaults","wabdlDefaults","wpcDefaults","wrpfDefaults","AutoFillRules","handleSelectChange","selectedOption","handleClick","stringTraditional","stringBP","stringGPC","stringSPF","stringUPA","stringUSAPL","stringUSPA","stringWABDL","stringWPC","stringWRPF","width","components","DropdownIndicator","createOption","DivisionSelect","maybeUpdateRedux","objarray","Array","handleInputChange","inputValue","_this$state","preventDefault","newValue","toConsumableArray","division","_this$state2","react_select_browser_esm","isMulti","menuIsOpen","onInputChange","WeightClassesSelect","isNaN","isFinite","sort","b","c","selectClassesBySex","ownProps","BarAndCollarsWeightKg","getInitialBarAndCollarsWeightKg","setBarAndCollarsWeightKg","getLiftLabel","ColorPicker","clearTimeout","timeoutId","displayColorPicker","handleMouseLeave","setTimeout","handleMouseEnter","clientX","hex","toUpperCase","_this2","colors","picker","Popper","placement","_ref","ref","data-placement","react_color_lib","triangle","Manager","onMouseLeave","onMouseEnter","Reference","_ref2","background","PlateInput","meet_setup_ColorPicker","Plates","validateAmountInput","widget","asNum","updateHandler","amount","isNumber","setPlateConfig","renderWeightRow","meet_setup_PlateInput","plateRows","unitId","stringPlate","Table_default","striped","size","hover","margin","YesNoButton","ButtonGroup_default","active","setValue","no","yes","AttemptHandinTimer","validateAttemptHandinTimeout","handleToggleChange","bool","setEnableAttemptHandinTimer","initialEnabled","initialTimeout","stringNo","stringYes","timeoutInput","setAttemptHandinTimeout","common_YesNoButton","seconds","MeetSetup","validateRequiredText","ticker","stringMeetName","stringFederation","stringCountry","stringStateProvince","stringCityTown","stringKilograms","stringPounds","stringMensClasses","stringWomensClasses","stringMxClasses","stringAH","stringBodyweightMultiple","stringDots","stringGlossbrenner","stringIPFGLPoints","stringIPFPoints","stringNASAPoints","stringSchwartzMalone","stringTotal","stringWilks","stringWilks2020","stringNone","stringFosterMcCulloch","stringAlsoKilograms","stringAlsoPounds","ValidatedInput","setMeetName","setFederation","setCountry","setCity","meet_setup_MeetDate","meet_setup_MeetLength","meet_setup_PlatformCounts","meet_setup_AutoFillRules","meet_setup_DivisionSelect","meet_setup_WeightClassesSelect","setFormula","setAgeCoefficients","setCombineSleevesAndWraps","setAllow4thAttempts","meet_setup_AttemptHandinTimer","setInKg","setShowAlternateUnits","meet_setup_BarAndCollarsWeightKg","meet_setup_Plates","fed","assertFormula","coefficient","assertAgeCoefficients","MeetSetupContainer","meet_setup_MeetSetup","LifterTable","LifterRow","rowRenderer","renderRows","LocalizedString","injectIntl","Consumer","intl","validateIso8601Date","pieces","_pieces","onlyNumbers","validatePositiveInteger","inclusiveMax","startsWith","newRegistration","deleteRegistration","updateRegistration","updateRegistrationMemberId","updateRegistrationBirthDate","updateRegistrationAge","updateRegistrationCountry","updateRegistrationState","updateRegistrationGuest","updateRegistrationTeam","updateRegistrationInstagram","instagram","updateRegistrationNotes","validateAge","pos","selectedDay","deleteRegistrationClick","updateRegistrationDay","updateRegistrationPlatform","updateRegistrationFlight","updateRegistrationName","updateRegistrationSex","updateRegistrationLot","updateRegistrationDivisions","updateRegistrationEvents","updateRegistrationEquipment","assertSex","dayOptions","platformOptions","divisionOptions","selectedDivisions","selectedEvents","gridStyle","padding","stringState","stringBirthDatePlaceholder","stringMemberIdPlaceholder","stringSelectPlaceholder","eventOptions","overflow","minWidth","translations_LocalizedString","toString","dist_react_select_browser_esm","menuPlacement","options","isClearable","min","Text","NewButton","csvString","x","trim","csvDate","iso8601","getSpreadsheetColumnName","alphabet","mod","remainder","Csv","fieldnames","rows","createClass","indexOf","namelist","j","splice","removeColumnByIndex","empty","removeEmptyColumns","lines","row","headers","join","strRows","parseInteger","charcode","charCodeAt","parseDate","makeExampleRegistrationsCsv","csv","division1","division2","division3","event1","event2","event3","birthdate","memberid","appendColumns","loadRegistrations","division_template","event_template","col_day","col_platform","col_flight","col_name","col_sex","col_equipment","col_division1","col_division2","col_division3","col_division4","col_division5","col_event1","col_event2","col_event3","col_event4","col_event5","col_birthdate","col_age","col_memberid","col_country","col_state","col_lot","col_guest","col_team","col_instagram","col_notes","MANDATORY_FIELDNAMES","OPTIONAL_FIELDNAMES","colname","allfields","iname","jname","errprefix_template","fieldname","val","rowstr","errprefix","integer","platforms","m","f","mx","bare","sleeves","wraps","single","multi","evt","sbd","sb","sd","boolToYesNo","makeRegistrationsCsv","fill","column","prevIndex","insertColumn","randomString","random","substr","randomInt","randomFixedPoint","fixedPoints","power","pow","shuffle","array","numElements","switchIndex","temp","globalImportKind","RegistrationView","handleDownloadCsvTemplateClick","global","filename","handleExportCsvClick","handleOverwriteClick","handleSequentialLotNumbersClick","updateLotNumbers","handleRandomLotNumbersClick","handleRemoveLotNumbersClick","manipulation","_entry","assignLotNumbers","handleAppendClick","maybeError","fromString","maybeEntries","entryIds","alert","onloadstart","isLoadingFiles","onloadend","numEntries","dropdownIconStyle","faSpinner","spin","vertical","DropdownButton","ButtonGroup","Dropdown","Item","faSort","faRandom","faTimes","registration_LifterTable","registration_NewButton","RegistrationContainer","registration_RegistrationView","inLiftingPage","renderHeader","shortStyle","bodyweightId","squatId","benchId","deadliftId","enterAttempt","WeightInput","weightNum","weightStr","multipleOf","updateRegistrationSquatRackInfo","updateRegistrationBenchRackInfo","validateRack","hasSquat","hasBench","hasDeadlift","disableSquatWeight","disableBenchWeight","disableDeadliftWeight","ageStr","weighins_WeightInput","WeighinsView","getNumDaysFromEntries","max_day","dayCards","lifters","dayNumber","weighins_LifterTable","WeighinsContainer","weighins_WeighinsView","safeKg2Lbs","selectPlates","loadingKg","barAndCollarsWeightKg","loadingAny","barAndCollarsWeightAny","platesAny","sortedPlates","sideWeightKg","loading","weightAny","isAlreadyLoaded","findWeightFrom","startFrom","kgToStyleMap","Map","lbsToStyleMap","weightTextMap","weightAnyToText","get","PlatesDiv","weightLbs","divs","plateCount","showCounter","plate","counter","is_light","backgroundColor","opacity","border","Fragment","RackInfoDiv","_ref3","BarLoad_PlatesDiv","BarLoad_RackInfoDiv","LeftCard","getBarLoadProps","fieldKg","idx","getBarAndCollarsWeightKg","currentEntryId","next","nextAttemptOneIndexed","weightKgText","weightLbsText","currentLoading","nextLoading","relativeTo","finger","loadedPlate","makeLoadingRelative","nextEntryName","nextBarLoad","loadingBar","nextText","lifter","barArea","lifting_BarLoad","attemptTemplate","activeCard","attemptText","AttemptInput","countDown","timeLeft","setToDefault","lastGoodValue","asKg","prevAttemptOneIndexed","prevWeightKg","prevStatus","fixups","lastWeightKg","setInterval","ah","totalKg","adjusted","log10","ahMen","ahWomen","dotsPoly","x2","x3","dots","dotsMen","dotsWomen","AGE_COEFFICIENTS","fosterMcCulloch","schwartz_coefficient","malone_coefficient","wilksPoly","x4","wilksMen","wilksWomen","glossbrenner","glossbrenner_coefficient_men","glossbrenner_coefficient_women","PARAMETERS","M","Sleeves","SBD","B","Single-ply","F","S","D","reshel","normalized","reshelMen","reshelWomen","wilks2020Poly","wilks2020","wilks2020Men","wilks2020Women","getPoints","bodyweight_multiple","normalizedEquipment","normalizedSex","params","denom","exp","glp","bw_log","log","ipfpoints","nasapoints","schwartzmalone","wilks","getAgeAdjustedPoints","getNextAttemptNumberForEntry","weightsKg","statuses","MAX_ATTEMPTS","getMaxAttemptNumberForEntry","compareEntriesByAttempt","aKg","bKg","orderEntriesByAttempt","getLiftingOrder","entriesInFlight","earliestAttemptOneIndexed","latestAttemptOneIndexed","getActiveAttemptNumber","orderedEntries","attemptZeroIndexed","existsNextAttempt","existsPrevAttempt","byNextAttempt","byThisAttempt","byPrevAttempt","notLifting","prototype","orderEntriesForAttempt","getCurrentEntryId","nextEntryInfo","currentEntryIndex","hasAttempt","notTaken","getNextEntryInfo","categoryToKey","category","keyToCategory","getLastSuccessfulLift","getLastSuccessfulAttempt","sortByPlaceInCategory","clonedEntries","aTotal","bTotal","aLastSuccessfulLift","bLastSuccessfulLift","aLastSuccessfulLiftIndex","bLastSuccessfulLiftIndex","aLastSuccessfulAttempt","bLastSuccessfulAttempt","getEventSortOrder","ev","getEquipmentSortOrder","eq","getSexSortOrder","mapSexToClasses","men","women","getAllResults","categoryMap","classesForSex","weightClassStr","numDivisions","dividx","evidx","catEntries","set","results","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","catA","catB","aSex","bSex","aEvent","bEvent","aEquipment","bEquipment","aIsSHW","bIsSHW","sortCategoryResults","getFinalResults","globalFocusAttemptInputId","globalHighestAttemptInputAttempt","LiftingTable","renderBest3AttemptField","columnType","best3","lightestFailed","renderAttemptField","wStr","displayStr","lifting_AttemptInput","maybeNegative","anyPreviousAttemptTaken","currentAndHasPrevious","nextAndTookLast","meetState","renderCell","categoryResults","cell","bw","bwStr","weightClass","firstDiv","ordinal","columns","cells","col","rowClassName","getColumnHeaderLabel","useProjected","highlightColumn","nameCell","divisionCell","LiftingFooter","handleDayChange","setLiftingGroup","handlePlatformChange","handleFlightChange","handleLiftChange","assertLift","handleAttemptChange","handleLifterChange","setFocusAttemptInputTimeout","elem","focus","handleOnMouseEnter","activeElement","HTMLElement","handleGoodLift","markLift","handleNoLift","hasFullscreenElement","doc","fullscreenElement","webkitFullscreenElement","mozFullscreenElement","msFullscreenElement","exitFullscreen","webkitExitFullscreen","mozExitFullscreen","msExitFullscreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullscreen","msRequestFullscreen","handleFullscreen","makeLifterOptions","lifterOptions","numPlatforms","dayTemplate","platformTemplate","liftOptions","flightOptions","flightTemplate","flightsOnPlatform","attemptOptions","toggleReplaceTableWithWeighins","LiftingHeader","infoBuilder","MULTIPLE","ColumnWidth","fieldName","setTableInfo","pattern","LiftingView","replaceTableWithWeighins","now","rightElement","lifting_LiftingTable","lifting_ColumnWidth","lifting_LiftingHeader","lifting_LeftCard","lifting_LiftingFooter","entriesOnPlatform","flights","LiftingContainer","lifting_LiftingView","OneFlightOrder","getOrderBy","entriesForLift","bySquat","byBench","byDeadlift","maxRows","builder","content","getColumnHeader","FlightOrderView","updateDay","updatePlatform","handlePrint","print","selectorStyle","shownEntries","knownFlights","flightOrders","_loop","flight_order_OneFlightOrder","FlightOrderContainer","flight_order_FlightOrderView","ByDivision","renderEntryRow","place","pointsStr","squat","bench","deadlift","weightTemplate","weightString","mapSexToLabel","renderCategoryResults","eqpstr","units","marginTop","categoryCards","panel","sortByFormulaPlaceInCategory","indexMap","memoizedPoints","aIndex","bIndex","aPoints","bPoints","getAllRankings","sortPointsCategoryResults","ByPoints","rank","firstDivision","total","categoryString","agePointsCategory","addEntriesRow","cls","unit","finalEventTotalKg","standardizeEquipment","exportAsOplCsv","meetCsv","makeMeetCsv","entriesCsv","squatFieldnames","benchFieldnames","deadliftFieldnames","meet_date","_results$_i","makeEntriesCsv","versionStr","addDataRow","hasDL","makeBirthDate","translateEvent","exportAsUSAPLCsv","_results$i","assertValidResultsBy","resultsBy","globalMergeDay","globalMergePlatform","ResultsView","makeDayOptions","justDayTemplate","handleByChange","handleExportAsOplCsvClick","handleExportAsUSAPLCsvClick","handleExportPlatformClick","exportname","handleMergePlatformClick","mergePlatform","makePlatformMergeButtons","platformsHaveLifted","combineTemplate","mergeTemplate","exportTemplate","forms","liftedOnDay","buttons","_loop2","lifted","marginStyle","actionTemplate","results_ByDivision","results_ByPoints","daySelector","CardDeck_default","fontWeight","controlCard","ResultsContainer","results_ResultsView","NonsenseFederations","NonsenseDivisions","RandomizeMeetSetupButton","randomizeMeetSetup","numClassesMen","numClassesWomen","classesMen","classesWomen","classesMx","div","age_lower","age_upper","NonsenseFirstNames","NonsenseLastNames","RandomizeRegistrationButton","deleteExistingRegistrations","generateEntries","randomizeRegistration","numLifters","sexes","isGuest","teams","equipmentSelect","divisionsUpperBound","divchooser","choice","FLIGHTCHARS","numFlights","RandomizeWeighinsButton","randomAttempt","randomizeWeighins","height","safety","StateTools","reInitializeRedux","localStorage","clear","reload","RandomizeMeetSetup","RandomizeRegistration","RandomizeWeighins","DebugContainer","debug_StateTools","AboutContainer","RootContainer","search","containers_HomeContainer","containers_MeetSetupContainer","containers_RegistrationContainer","containers_WeighinsContainer","containers_FlightOrderContainer","containers_LiftingContainer","containers_ResultsContainer","containers_DebugContainer","containers_AboutContainer","Navigation","Navbar_default","sticky","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav_default","exact","Link","persistConfig","storage","persistedReducer","persistReducer","App","_configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","integration_react","translations_OpenLifterIntlProvider","react_router_dom","basename","components_Navigation","react_router","path","component","rootElement","ReactDOM","render","src_App","serviceWorker","ready","then","unregister"],"mappings":"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AAQr2B,GACN,IAAK,IACL,IAAK,KACH,OA9BC,SAAiBgF,GAQtB,OAAO0xB,IAPI,QACD,aACC,YACD,YACC,UAEM33B,KAAK8I,IAAI9I,KAAKgnB,IAAI/gB,EAAc,KAAQ,KAuB9C8xB,CAAQ9xB,GAAgBqxB,EACjC,IAAK,IACH,OArBC,SAAmBrxB,GAQxB,OAAO0xB,IAPI,UACD,aACC,YACD,YACC,SAEM33B,KAAK8I,IAAI9I,KAAKgnB,IAAI/gB,EAAc,KAAQ,KAc9C+xB,CAAU/xB,GAAgBqxB,EACnC,QAEE,OAAO,ICxDPW,GAAmB,CAEvB,EACA,EACA,EACA,EACA,EAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAIA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAMA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KAIA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,MACA,MAEA,MACA,MACA,KACA,MACA,MACA,IACA,MACA,MACA,MACA,OAIWC,GAAkB,SAACxxB,GAC9B,OAAKjH,OAAOkY,UAAUjR,IAAQA,GAAO,EAC5B,EAILA,EAAMuxB,GAAiB11B,OAClB,EAGF01B,GAAiBvxB,ICrGbyxB,GAAuB,SAAClyB,GACnC,IAAMsxB,EAAWv3B,KAAKgnB,IAAIhnB,KAAK8I,IAAI7C,EAAc,IAAO,KAExD,GAAIsxB,GAAY,IAAO,CAQrB,OAPW,QACA,QAAWA,EACX,OAAUv3B,KAAK8tB,IAAI,IAAO,GAAK9tB,KAAK8tB,IAAIyJ,EAAU,GAClD,QAAWv3B,KAAK8tB,IAAI,IAAO,GAAK9tB,KAAK8tB,IAAIyJ,EAAU,GACnD,QAAWv3B,KAAK8tB,IAAI,IAAO,GAAK9tB,KAAK8tB,IAAIyJ,EAAU,GACnD,QAAWv3B,KAAK8tB,IAAI,IAAO,GAAK9tB,KAAK8tB,IAAIyJ,EAAU,GACnD,QAAWv3B,KAAK8tB,IAAI,IAAO,IAAM9tB,KAAK8tB,IAAIyJ,EAAU,GAE1D,OAAIA,GAAY,IACd,KAAQ,OAAUA,EAAW,KAC3BA,GAAY,IACd,KAAQ,OAAUA,EAAW,KAC3BA,GAAY,IACd,KAAQ,MAASA,EAAW,KAU5B,MAAS,UAAcA,EAAW,MAKhCa,GAAqB,SAACnyB,GAEjC,IAKMsxB,EAAWv3B,KAAK8I,IAAI7C,EAAc,OAExC,OAPU,iBAOCjG,KAAK8tB,IAAIyJ,GANT,mBACD,kBClEZ,SAASc,GAAUx6B,EAAWsd,EAAWC,EAAWvY,EAAWyK,EAAWgf,EAAWlF,GACnF,IAAMwQ,EAAKxQ,EAAIA,EACTyQ,EAAKD,EAAKxQ,EACVkR,EAAKT,EAAKzQ,EAEhB,OAAO,KAASvpB,EAAIsd,EAAIiM,EAAIhM,EAAIwc,EAAK/0B,EAAIg1B,EAAKvqB,EAAIgrB,EAAKhM,GAD5CgM,EAAKlR,IAIX,SAASmR,GAAStyB,GAEvB,OAAOoyB,IAAW,YAAa,YAAa,YAAc,UAAY,YAAa,SADhEr4B,KAAKgnB,IAAIhnB,KAAK8I,IAAI7C,EAAc,IAAO,QAIrD,SAASuyB,GAAWvyB,GAEzB,OAAOoyB,GACL,iBACC,eACD,cACC,aACD,aACC,SAPgBr4B,KAAKgnB,IAAIhnB,KAAK8I,IAAI7C,EAAc,OAAQ,SAYtD,ICOMwyB,GAAe,SAACx3B,EAAUgF,EAAsBqxB,GAC3D,OAAQr2B,GACN,IAAK,IACL,IAAK,KACH,OAlC+B,SAACgF,GAEpC,GAAIA,EAAe,OACjB,OAAQkyB,GAAqBlyB,GAAgBsyB,GAAStyB,IAAiB,EAKvE,OAAQkyB,GAAqBlyB,IAFlB,iBAEsCA,EADvC,kBAC2D,EA0B5DyyB,CAA6BzyB,GAAgBqxB,EACtD,IAAK,IACH,OAxBiC,SAACrxB,GAEtC,GAAIA,EAAe,MACjB,OAAQmyB,GAAmBnyB,GAAgBuyB,GAAWvyB,IAAiB,EAKvE,OAAQmyB,GAAmBnyB,IAFhB,iBAEoCA,EADrC,kBACyD,EAgB1D0yB,CAA+B1yB,GAAgBqxB,EACxD,QAEE,OAAO,IC9BPsB,GAAoB,CACxBC,EAAG,CACDC,QAAS,CACPC,IAAK,CAAC,WAAY,WAAY,QAC9BC,EAAG,CAAC,UAAW,UAAW,SAE5BC,aAAc,CACZF,IAAK,CAAC,WAAY,WAAY,QAC9BC,EAAG,CAAC,UAAW,UAAW,UAG9BE,EAAG,CACDJ,QAAS,CACPC,IAAK,CAAC,UAAW,WAAY,QAC7BC,EAAG,CAAC,UAAW,UAAW,SAE5BC,aAAc,CACZF,IAAK,CAAC,UAAW,UAAW,QAC5BC,EAAG,CAAC,UAAW,UAAW,WCf1BJ,GAAoB,CACxBC,EAAG,CACDC,QAAS,CACPC,IAAK,CAAC,OAAQ,QAAS,OAAQ,UAC/BI,EAAG,CAAC,MAAO,QAAS,QAAS,SAC7BH,EAAG,CAAC,QAAS,QAAS,SAAU,QAChCI,EAAG,CAAC,SAAU,QAAS,QAAS,UAElCH,aAAc,CACZF,IAAK,CAAC,QAAS,QAAS,QAAS,UACjCI,EAAG,CAAC,QAAS,QAAS,QAAS,UAC/BH,EAAG,CAAC,OAAQ,QAAS,QAAS,UAC9BI,EAAG,CAAC,QAAS,OAAQ,OAAQ,UAGjCF,EAAG,CACDJ,QAAS,CACPC,IAAK,CAAC,SAAU,OAAQ,QAAS,SACjCI,EAAG,CAAC,OAAQ,QAAS,QAAS,SAC9BH,EAAG,CAAC,QAAS,OAAQ,OAAQ,QAC7BI,EAAG,CAAC,OAAQ,OAAQ,OAAQ,QAE9BH,aAAc,CACZF,IAAK,CAAC,OAAQ,QAAS,QAAS,UAChCI,EAAG,CAAC,QAAS,QAAS,QAAS,SAC/BH,EAAG,CAAC,OAAQ,QAAS,OAAQ,SAC7BI,EAAG,CAAC,OAAQ,QAAS,OAAQ,WCd5B,IAAMC,GAAS,SAACp4B,EAAUgF,EAAsBqxB,GACrD,OAAQr2B,GACN,IAAK,IACL,IAAK,KACH,OA1BC,SAAmBgF,GAExB,IAKMqzB,EAAat5B,KAAKgnB,IAAIhnB,KAAK8I,IAAI7C,EAAc,IAAO,QAC1D,OANkB,iBAMPjG,KAAK8tB,IAAIwL,GALD,kBAEA,kBADD,iBAsBPC,CAAUtzB,GAAgBqxB,EACnC,IAAK,IACH,OAjBC,SAAqBrxB,GAE1B,IAKMqzB,EAAat5B,KAAKgnB,IAAIhnB,KAAK8I,IAAI7C,EAAc,IAAO,QAC1D,OANkB,iBAMPjG,KAAK8tB,IAAIwL,GALD,kBAEA,kBADD,iBAaPE,CAAYvzB,GAAgBqxB,EACrC,QAEE,OAAO,ICrCb,SAASmC,GAAc57B,EAAWsd,EAAWC,EAAWvY,EAAWyK,EAAWgf,EAAWlF,GACvF,IAAMwQ,EAAKxQ,EAAIA,EACTyQ,EAAKD,EAAKxQ,EACVkR,EAAKT,EAAKzQ,EAEhB,OAAO,KAASvpB,EAAIsd,EAAIiM,EAAIhM,EAAIwc,EAAK/0B,EAAIg1B,EAAKvqB,EAAIgrB,EAAKhM,GAD5CgM,EAAKlR,IA8BX,IAAMsS,GAAY,SAACz4B,EAAUgF,EAAsBqxB,GACxD,OAAQr2B,GACN,IAAK,IACL,IAAK,KACH,OA9BC,SAAsBgF,GAE3B,OAAOwzB,GACL,iBACA,iBACA,kBACC,mBACD,qBACC,oBAPgBz5B,KAAKgnB,IAAIhnB,KAAK8I,IAAI7C,EAAc,IAAO,SA6B/C0zB,CAAa1zB,GAAgBqxB,EACtC,IAAK,IACH,OAnBC,SAAwBrxB,GAE7B,OAAOwzB,IACJ,iBACD,kBACC,mBACA,kBACD,qBACC,mBAPgBz5B,KAAKgnB,IAAIhnB,KAAK8I,IAAI7C,EAAc,IAAO,SAkB/C2zB,CAAe3zB,GAAgBqxB,EACxC,QAEE,OAAO,IC3BAuC,GAAY,SAAC10B,EAAkBnE,EAAcxC,EAAc84B,EAAiB7xB,GAEvF,IAAMxE,EAAWD,EAAMC,IACjBI,EAAuBL,EAAMK,UAC7B4E,EAAuBjF,EAAMiF,aAEnC,OAAQd,GACN,IAAK,KACH,OAAOkyB,GAAGp2B,EAAKgF,EAAcqxB,GAC/B,IAAK,sBACH,OC1B6B,SAACrxB,EAAsBqxB,GACxD,OAAIrxB,GAAgB,GAAKqxB,GAAW,EAC3B,EAEFA,EAAUrxB,EDsBN6zB,CAAoB7zB,EAAcqxB,GAC3C,IAAK,OACH,OAAOQ,GAAK72B,EAAKgF,EAAcqxB,GACjC,IAAK,eACH,OAAOmB,GAAax3B,EAAKgF,EAAcqxB,GACzC,IAAK,gBACH,OJIkB,SACtBA,EACArxB,EACAhF,EACAI,EACA7C,GAEA,GAAgB,IAAZ84B,EAAe,OAAO,EAC1B,GAAIrxB,EAAe,GAAI,OAAO,EAG9B,IAAI8zB,EAAsB14B,EAM1B,GALkB,SAAdA,GAAsC,UAAdA,EAC1B04B,EAAsB,UACC,cAAd14B,GAA2C,cAAdA,IACtC04B,EAAsB,cAEI,YAAxBA,GAA6D,eAAxBA,EACvC,OAAO,EAIT,IAAIC,EAAgB/4B,EAGpB,GAFY,OAARA,IAAc+4B,EAAgB,KAEpB,QAAVx7B,GAA6B,MAAVA,EAAe,OAAO,EAC7C,GAAsB,MAAlBw7B,GAA2C,MAAlBA,EAAuB,OAAO,EAE3D,IAAMC,EAASrB,GAAWoB,GAAeD,GAAqBv7B,GACxD07B,EAAQD,EAAO,GAAKA,EAAO,GAAKj6B,KAAKm6B,KAAK,EAAMF,EAAO,GAAKh0B,GAC5Dm0B,EAAgB,IAAVF,EAAc,EAAIl6B,KAAK8I,IAAI,EAAc,IAAVwuB,EAAmB4C,GAC9D,OAAIlf,MAAMof,IAAQn0B,EAAe,GACxB,EAEFm0B,EItCIx/B,CAAS08B,EAASrxB,EAAchF,EAAKI,EAAW7C,GACzD,IAAK,aACH,OHamB,SACvB84B,EACArxB,EACAhF,EACAI,EACA7C,GAEA,GAAgB,IAAZ84B,EAAe,OAAO,EAC1B,GAAIrxB,EAAe,GAAI,OAAO,EAG9B,IAAI8zB,EAAsB14B,EAM1B,GALkB,SAAdA,GAAsC,UAAdA,EAC1B04B,EAAsB,UACC,cAAd14B,GAA2C,cAAdA,IACtC04B,EAAsB,cAEI,YAAxBA,GAA6D,eAAxBA,EACvC,OAAO,EAIT,IAAIC,EAAgB/4B,EAGpB,GAFY,OAARA,IAAc+4B,EAAgB,KAEpB,QAAVx7B,GAA6B,MAAVA,GAA2B,MAAVA,GAA2B,MAAVA,EAAe,OAAO,EAC/E,GAAsB,MAAlBw7B,GAA2C,MAAlBA,EAAuB,OAAO,EAE3D,IAAMC,EAASrB,GAAWoB,GAAeD,GAAqBv7B,GACxD67B,EAASr6B,KAAKs6B,IAAIr0B,GAKlBtF,EAAS,IAAO,KAAO22B,GAHhB2C,EAAO,GAAKI,EAASJ,EAAO,MAC7BA,EAAO,GAAKI,EAASJ,EAAO,IAGxC,OAAIjf,MAAMra,IAAWA,EAAS,EACrB,EAEFA,EGnDI45B,CAAUjD,EAASrxB,EAAchF,EAAKI,EAAW7C,GAC1D,IAAK,cACH,OErCoB,SAACyH,EAAsBqxB,GAU/C,OAAIrxB,EAAe,GAAW,EACtBqxB,EAAUrxB,GAJR,UAI6BA,EAH7B,SF6BCu0B,CAAWv0B,EAAcqxB,GAClC,IAAK,SACH,OAAO+B,GAAOp4B,EAAKgF,EAAcqxB,GACnC,IAAK,kBACH,OPsCwB,SAACr2B,EAAUgF,EAAsBqxB,GAC7D,OAAQr2B,GACN,IAAK,IACH,OAAOk3B,GAAqBlyB,GAAgBqxB,EAC9C,IAAK,IACH,OAAOc,GAAmBnyB,GAAgBqxB,EAC5C,QACE,OAAO,GO7CAmD,CAAex5B,EAAKgF,EAAcqxB,GAC3C,IAAK,QACH,OAAO7xB,EAAO6xB,EAAUn4B,EAAOm4B,GACjC,IAAK,QACH,ONjBe,SAACr2B,EAAUgF,EAAsBqxB,GACpD,OAAQr2B,GACN,IAAK,IACL,IAAK,KACH,OAAOs3B,GAAStyB,GAAgBqxB,EAClC,IAAK,IACH,OAAOkB,GAAWvyB,GAAgBqxB,EACpC,QAEE,OAAO,GMQAoD,CAAMz5B,EAAKgF,EAAcqxB,GAClC,IAAK,YACH,OAAOoC,GAAUz4B,EAAKgF,EAAcqxB,GACtC,QAEE,OAAO,IAIAqD,GAAuB,SAClCv1B,EACAwC,EACAzC,EACAnE,EACAxC,EACA84B,EACA7xB,GAEA,IAAM9E,EAASk5B,GAAU10B,EAASnE,EAAOxC,EAAO84B,EAAS7xB,GAEzD,OAAQL,GACN,IAAK,OACH,OAAOzE,EACT,IAAK,kBACH,OAAOu3B,GAAgBvwB,GAAO3G,EAAO4G,IAAajH,EACpD,QAEE,OAAO,IGnEPi6B,GAA+B,SAAC55B,EAAci0B,EAAkB7nB,GAMpE,IALA,IAAMytB,EAAY75B,EAAMi0B,GAClB6F,EAAW95B,EAAMoM,GAId9K,EAAIy4B,EAAkBz4B,GAAK,EAAGA,IACrC,GAAqB,IAAjBu4B,EAAUv4B,IAA4B,IAAhBw4B,EAASx4B,GACjC,OAAOA,EAAI,EAGf,OAAO,GAOH04B,GAA8B,SAACh6B,EAAci0B,EAAkB7nB,GAInE,IAHA,IAAMytB,EAAY75B,EAAMi0B,GAClB6F,EAAW95B,EAAMoM,GAEd9K,EAAIy4B,EAAkBz4B,GAAK,EAAGA,IACrC,GAAqB,IAAjBu4B,EAAUv4B,IAA4B,IAAhBw4B,EAASx4B,GACjC,OAAOA,EAAI,EAGf,OAAO,GAmEI24B,GAA0B,SAA1BA,EAA2Bp9B,EAAUsd,EAAU8Z,EAAkBroB,GAC5E,IAAMsuB,EAAMr9B,EAAEo3B,GAASroB,EAAoB,GACrCuuB,EAAMhgB,EAAE8Z,GAASroB,EAAoB,GAG3C,OAAIsuB,IAAQC,EAAYD,EAAMC,EAGhB,IAAVt9B,EAAEgJ,KAAuB,IAAVsU,EAAEtU,IAAkBhJ,EAAEgJ,IAAMsU,EAAEtU,IAG7C+F,EAAoB,EACfquB,EAAwBp9B,EAAGsd,EAAG8Z,EAASroB,EAAoB,GAIhE/O,EAAEoI,eAAiBkV,EAAElV,aAAqBpI,EAAEoI,aAAekV,EAAElV,aAG7DpI,EAAE0G,KAAO4W,EAAE5W,MAAc,EACzB1G,EAAE0G,KAAO4W,EAAE5W,KAAa,EACrB,GAKI62B,GAAwB,SACnCrxB,EACAkrB,EACAroB,GAEA,OAAO7C,EAAQmR,KAAK,SAACrd,EAAGsd,GACtB,OAAO8f,GAAwBp9B,EAAGsd,EAAG8Z,EAASroB,MA2IrCyuB,GAAkB,SAACC,EAA+B7tB,GAC7D,IAAMb,EAnOuB,SAAC0uB,EAA+B7tB,GAC7D,IAAMvD,EAAOuD,EAAQvD,KACf+qB,EAAUhrB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAG1C,GAAgC,OAA5BuD,EAAQ5C,gBACV,OAAOpL,OAAOgO,EAAQ5C,iBAKxB,IADA,IAAI0wB,EAA4BR,EACvBz4B,EAAI,EAAGA,EAAIg5B,EAAgB/4B,OAAQD,IAAK,CAC/C,IAAMtB,EAAQs6B,EAAgBh5B,GACxB+yB,EAAOuF,GAA6B55B,EAAOi0B,EAAS7nB,GAEtDioB,EAAO,GAAKA,EAAOkG,IACrBA,EAA4BlG,GAKhC,GAAIkG,EAA4BR,EAC9B,OAAOQ,EAKT,IADA,IAAIC,EAA0B,EACrBl5B,EAAI,EAAGA,EAAIg5B,EAAgB/4B,OAAQD,IAAK,CAC/C,IAAMtB,EAAQs6B,EAAgBh5B,GACxBwG,EAAMkyB,GAA4Bh6B,EAAOi0B,EAAS7nB,GAEpDtE,EAAM0yB,IACRA,EAA0B1yB,GAM9B,OAAI0yB,EAA0B,EAGxBA,EAA0B,GAAK,EAC1BA,EAIFA,EAA0B,EAI5B,EAgLmBC,CAAuBH,EAAiB7tB,GAC5DiuB,EAxIuB,SAC7BJ,EACA7tB,EACAb,GAeA,IAbA,IAAM1C,EAAOuD,EAAQvD,KACf+qB,EAAUhrB,GAAuBC,GAEjCyxB,EAAqB/uB,EAAoB,EACzCgvB,EAAoBhvB,EAAoB,G/D/IpB,E+DgJpBivB,EAAoBjvB,EAAoB,EAGxCkvB,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA2B,GAExB35B,EAAI,EAAGA,EAAIg5B,EAAgB/4B,OAAQD,IAAK,CAC/C,IAAMtB,EAAQs6B,EAAgBh5B,GAE1Bs5B,GAAgE,IAA3C56B,EAAMi0B,GAAS0G,EAAqB,GAC3DG,EAAcpxB,KAAK1J,GAC6B,IAAvCA,EAAMi0B,GAAS0G,GACxBI,EAAcrxB,KAAK1J,GACV66B,GAAgE,IAA3C76B,EAAMi0B,GAAS0G,EAAqB,GAClEK,EAActxB,KAAK1J,GAEnBi7B,EAAWvxB,KAAK1J,GAepB,OAVI46B,GACFR,GAAsBU,EAAe7G,EAASroB,EAAoB,GAEpEwuB,GAAsBW,EAAe9G,EAASroB,GAC1CivB,GACFT,GAAsBY,EAAe/G,EAASroB,EAAoB,GAEpEwuB,GAAsBa,EAAYhH,EAASroB,GAGpCsN,MAAMgiB,UAAUl9B,OAAO88B,EAAeC,EAAeC,EAAeC,GA6FpDE,CAAuBb,EAAiB7tB,EAASb,GAClEwoB,EAvFkB,SACxB3nB,EACAiuB,EACA9uB,GAEA,IAAM1C,EAAOuD,EAAQvD,KACf+qB,EAAUhrB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAE1C,GAAgC,OAA5BuD,EAAQ3C,gBACV,OAAOrL,OAAOgO,EAAQ3C,iBAGxB,IAAK,IAAIxI,EAAI,EAAGA,EAAIo5B,EAAen5B,OAAQD,IAAK,CAC9C,IAAMtB,EAAQ06B,EAAep5B,GACvB4yB,EAAMtoB,EAAoB,EAChC,GAA4B,IAAxB5L,EAAMi0B,GAASC,IAA0C,IAA5Bl0B,EAAMoM,GAAa8nB,GAClD,OAAOl0B,EAAMG,GAGjB,OAAO,KAmEgBi7B,CAAkB3uB,EAASiuB,EAAgB9uB,GAC5DyvB,EA3DiB,SACvB5uB,EACA2nB,EACAsG,EACA9uB,GAEA,IAAM1C,EAAOuD,EAAQvD,KACf+qB,EAAUhrB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAE1C,GAAuB,OAAnBkrB,EACF,OAAO,KAIT,IAAMkH,EAAoBZ,EAAe3vB,UAAU,SAACuB,GAAD,OAAOA,EAAEnM,KAAOi0B,IACnE,IAA2B,IAAvBkH,EACF,OAAO,KAIT,IAAK,IAAIh6B,EAAIg6B,EAAoB,EAAGh6B,EAAIo5B,EAAen5B,OAAQD,IAAK,CAClE,IAAMi6B,EAAmE,IAAtDb,EAAep5B,GAAG2yB,GAASroB,EAAoB,GAC5D4vB,EAAqE,IAA1Dd,EAAep5B,GAAG8K,GAAaR,EAAoB,GAEpE,GAAI2vB,GAAcC,EAChB,MAAO,CACL9vB,QAASgvB,EAAep5B,GAAGnB,GAC3ByL,kBAAmBA,GAMzB,GAAIA,EAAoB,E/DvPE,E+DwPxB,OAAO,KAIT,IAFA,IAAM0oB,EAAwB1oB,EAAoB,EAEzCtK,EAAI,EAAGA,EAAIg6B,EAAmBh6B,IAAK,CAC1C,IAAMi6B,EAAuE,IAA1Db,EAAep5B,GAAG2yB,GAASK,EAAwB,GAChEkH,EAAyE,IAA9Dd,EAAep5B,GAAG8K,GAAakoB,EAAwB,GAExE,GAAIiH,GAAcC,EAChB,MAAO,CACL9vB,QAASgvB,EAAep5B,GAAGnB,GAC3ByL,kBAAmB0oB,GAKzB,OAAO,KAQemH,CAAiBhvB,EAAS2nB,EAAgBsG,EAAgB9uB,GAEhF,MAAO,CACL8uB,eAAgBA,EAChB9uB,kBAAmBA,EACnBwoB,eAAgBA,EAChBE,sBAAuB+G,EAAgBA,EAAczvB,kBAAoB,KACzEjC,YAAa0xB,EAAgBA,EAAc3vB,QAAU,OC1PnDgwB,GAAgB,SAACC,GACrB,OAAOtrB,KAAKO,UAAU+qB,IAElBC,GAAgB,SAACt/B,GACrB,OAAO+T,KAAKC,MAAMhU,IASdu/B,GAAwB,SAACr+B,EAAcwC,GAE3C,IAAK,IAAIsB,EAAI9D,EAAM+D,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAE1C,OADa9D,EAAM8D,IAEjB,IAAK,IACH,GAAItB,EAAMwG,YAAYgC,SAAS,GAC7B,MAAO,IAET,MACF,IAAK,IACH,GAAIxI,EAAMyG,YAAY+B,SAAS,GAC7B,MAAO,IAET,MACF,IAAK,IACH,GAAIxI,EAAM0G,eAAe8B,SAAS,GAChC,MAAO,IAET,MACF,QACE,MAAO,KAGb,MAAO,KAUHszB,GAA2B,SAAC5yB,EAAYlJ,GAC5C,IAAI85B,EAAW,KACf,OAAQ5wB,GACN,IAAK,IACH4wB,EAAW95B,EAAMwG,YACjB,MACF,IAAK,IACHszB,EAAW95B,EAAMyG,YACjB,MACF,IAAK,IACHqzB,EAAW95B,EAAM0G,eACjB,MACF,QAEE,OAAO,EAIX,IAAK,IAAIpF,EAAI,EAAGA,GAAK,IAAKA,EACxB,GAAoB,IAAhBw4B,EAASx4B,GAAU,OAAOA,EAEhC,OAAO,GAKHy6B,GAAwB,SAAChzB,EAA+B4yB,EAAoBl+B,GAChF,IAAMD,EAAQm+B,EAASn+B,MAGjBw+B,EAAgBjzB,EAAQ0B,QAoE9B,OAjEAuxB,EAAc9hB,KAAK,SAACrd,EAAGsd,GAErB,GAAItd,EAAEoJ,QAAUkU,EAAElU,MAChB,OAAOxH,OAAO5B,EAAEoJ,OAASxH,OAAO0b,EAAElU,OAGpC,IAAIg2B,EAAS,EAGb,GAAa,cAATx+B,EAAsB,CACxBw+B,EAAS1zB,GAAyB1L,EAAGW,GACrC,IAAM0+B,EAAS3zB,GAAyB4R,EAAG3c,GAC3C,GAAIy+B,IAAWC,EAAQ,OAAOA,EAASD,OAClC,GAAa,UAATx+B,EAAkB,CAC3Bw+B,EAASpzB,GAAqBhM,EAAGW,GACjC,IAAM0+B,EAASrzB,GAAqBsR,EAAG3c,GACvC,GAAIy+B,IAAWC,EAAQ,OAAOA,EAASD,EAIzC,GAAIp/B,EAAEoI,eAAiBkV,EAAElV,aAAc,OAAOpI,EAAEoI,aAAekV,EAAElV,aAIjE,GAAe,IAAXg3B,EACF,OAAIp/B,EAAE0G,KAAO4W,EAAE5W,MAAc,EACzB1G,EAAE0G,KAAO4W,EAAE5W,KAAa,EACrB,EAeT,IAAM44B,EAAsBN,GAAsBr+B,EAAOX,GACnDu/B,EAAsBP,GAAsBr+B,EAAO2c,GACnDkiB,EAA2B,CAAC,IAAK,IAAK,KAAKrV,QAAQmV,GACnDG,EAA2B,CAAC,IAAK,IAAK,KAAKtV,QAAQoV,GACzD,GAAIC,IAA6BC,EAC/B,OAAOD,EAA2BC,EAKpC,IAAMpzB,EAAaizB,EACbI,EAAiCT,GAAyB5yB,EAAMrM,GAChE2/B,EAAiCV,GAAyB5yB,EAAMiR,GACtE,GAAIoiB,IAA2BC,EAC7B,OAAOD,EAAyBC,EAKlC,IAAM9vB,EAAU6vB,EAChB,OAAOtC,GAAwBp9B,EAAGsd,EAAGlR,GAAuBC,GAAOwD,KAG9DsvB,GAIHS,GAAoB,SAACC,GACzB,MAAO,CAAC,MAAO,KAAM,KAAM,KAAM,IAAK,IAAK,KAAK1V,QAAQ0V,IAIpDC,GAAwB,SAACC,GAC7B,MAAO,CAAC,OAAQ,UAAW,QAAS,aAAc,YAAa,aAAa5V,QAAQ4V,IAIhFC,GAAkB,SAAC58B,GACvB,OAAQA,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,IAAK,KACH,OAAO,EACT,QAEE,OAAO,IA2CP68B,GAAkB,SACtB78B,EACA88B,EACAC,EACAzR,GAEA,OAAQtrB,GACN,IAAK,IACH,OAAO88B,EACT,IAAK,IACH,OAAOC,EACT,IAAK,KACH,OAAOzR,EACT,QAEE,OAAOwR,IAQPE,GAAgB,SACpBl0B,EACA/E,EACAC,EACAC,EACAG,EACA5G,GAMA,IADA,IAAMy/B,EAAc,IAAIxK,IACfpxB,EAAI,EAAGA,EAAIyH,EAAQxH,OAAQD,IAAK,CACvC,IAAMgL,EAAIvD,EAAQzH,GAGZrB,EAAMqM,EAAErM,IACRk9B,EAAgBL,GAAgB78B,EAAK+D,EAAoBC,EAAsBC,GAC/Ek5B,EAAiBr4B,GAAkBo4B,EAAe7wB,EAAErH,cAGtD5E,EAAYiM,EAAEjM,UACdgE,GAAwC,YAAdhE,IAC5BA,EAAY,SAWd,IAAMg9B,EAAe/wB,EAAEvI,UAAUxC,OAC7B+7B,EAAiB,EACrB,GAGE,IAFA,IAAM7jB,EAAW4jB,EAAe,EAAI/wB,EAAEvI,UAAUu5B,GAAU,GAEjDC,EAAQ,EAAGA,EAAQjxB,EAAE1G,OAAOrE,OAAQg8B,IAAS,CACpD,IAAM//B,EAAQ8O,EAAE1G,OAAO23B,GAEjBjhC,EAAMo/B,GADK,CAAEz7B,MAAKzC,QAAO6C,YAAWoZ,WAAU2jB,mBAG9CI,EAAaN,EAAYpK,IAAIx2B,QACpBwC,IAAf0+B,EAA2BN,EAAYO,IAAInhC,EAAK,CAACgQ,IAAMkxB,EAAW9zB,KAAK4C,YAEhEgxB,EAASD,GAItB,IAAMK,EAAU,GA5CWC,GAAA,EAAAC,GAAA,EAAAC,OAAA/+B,EAAA,IA6C3B,QAAAg/B,EAAAC,EAAgCb,EAAhCc,OAAAC,cAAAN,GAAAG,EAAAC,EAAA1J,QAAA6J,MAAAP,GAAA,EAA6C,KAAA/J,EAAAkK,EAAA/gC,MAAAof,EAAAlV,OAAAC,GAAA,EAAAD,CAAA2sB,EAAA,GAAjCt3B,EAAiC6f,EAAA,GAA5BqhB,EAA4BrhB,EAAA,GACrCwf,EAAWC,GAAct/B,GACzBo+B,EAAiBqB,GAAsByB,EAAY7B,EAAUl+B,GACnEigC,EAAQh0B,KAAK,CAAEiyB,WAAUjB,oBAhDA,MAAAlqB,GAAAotB,GAAA,EAAAC,EAAArtB,EAAA,YAAAmtB,GAAA,MAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,MAAAC,GAoD3B,OAvHiC,SAACH,GAClCA,EAAQxjB,KAAK,SAACrd,EAAGsd,GACf,IAAMikB,EAAOvhC,EAAE8+B,SACT0C,EAAOlkB,EAAEwhB,SAGT2C,EAAOzB,GAAgBuB,EAAKn+B,KAC5Bs+B,EAAO1B,GAAgBwB,EAAKp+B,KAClC,GAAIq+B,IAASC,EAAM,OAAOD,EAAOC,EAGjC,IAAMC,EAAS/B,GAAkB2B,EAAK5gC,OAChCihC,EAAShC,GAAkB4B,EAAK7gC,OACtC,GAAIghC,IAAWC,EAAQ,OAAOD,EAASC,EAGvC,IAAMC,EAAa/B,GAAsByB,EAAK/9B,WACxCs+B,EAAahC,GAAsB0B,EAAKh+B,WAC9C,GAAIq+B,IAAeC,EAAY,OAAOD,EAAaC,EAGnD,GAAIP,EAAK3kB,SAAW4kB,EAAK5kB,SAAU,OAAQ,EAC3C,GAAI2kB,EAAK3kB,SAAW4kB,EAAK5kB,SAAU,OAAO,EAI1C,IAAMmlB,EAAkBR,EAAKhB,eAAe50B,SAAS,KAC/Cq2B,EAAkBR,EAAKjB,eAAe50B,SAAS,KACrD,OAAIo2B,IAAWC,EAAe,GACzBD,GAAUC,GAAgB,GAEc,KAAxBT,EAAKhB,eAAwB,EAAIvoB,SAASupB,EAAKhB,kBACvB,KAAxBiB,EAAKjB,eAAwB,EAAIvoB,SAASwpB,EAAKjB,mBAsFtE0B,CAAoBpB,GACbA,GAoBIqB,GAAkB,SAC7Bh2B,EACA/E,EACAC,EACAC,EACAG,GAEA,OAAO44B,GACLl0B,EACA/E,EACAC,EACAC,EACAG,EACA,UC9RO26B,GAA2C,KAIlDC,GAA2C,EAEzCC,eACJ,SAAAA,EAAYnjC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAAojC,IACxBryB,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAAi4B,GAAApwB,KAAAhT,KAAMC,KAORojC,wBAA0B,SAACn/B,EAAckJ,EAAYk2B,GAQnD,IAPA,IAAMnL,EAAUhrB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAGtCm2B,EAAQ,EACRC,EAAiB,EAEZh+B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMlD,EAAK4B,EAAMi0B,GAAS3yB,GAEI,IAA1BtB,EAAMoM,GAAa9K,GACrB+9B,EAAQrgC,KAAK8I,IAAIu3B,EAAOjhC,IACY,IAA3B4B,EAAMoM,GAAa9K,KAC5Bg+B,EAAoC,IAAnBA,EAAuBlhC,EAAKY,KAAKgnB,IAAIsZ,EAAgBlhC,IAK1E,GAAc,IAAVihC,EAAa,CACf,IAAMn+B,EAAW2L,EAAK9Q,MAAMqO,KAAK3F,KAAO46B,EAAQlhC,EAAOkhC,GACvD,OACEziC,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAOhY,UACpC+E,EAAcuC,EAAU2L,EAAK9Q,MAAMF,WAI1C,GAAuB,IAAnByjC,EAAsB,CACxB,IAAMp+B,EAAW2L,EAAK9Q,MAAMqO,KAAK3F,KAAO66B,EAAiBnhC,EAAOmhC,GAChE,OACE1iC,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAO/X,QACpC8E,EAAcuC,EAAU2L,EAAK9Q,MAAMF,WAM1C,OAAOe,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,KA7CQvyB,EAgD1B0yB,mBAAqB,SAACv/B,EAAckJ,EAAY0C,EAA2BwzB,GACzE,IAAMnL,EAAUhrB,GAAuBC,GACjCkD,EAAcjD,GAAsBD,GAEpC9K,EAAK4B,EAAMi0B,GAASroB,EAAoB,GACxCM,EAASlM,EAAMoM,GAAaR,EAAoB,GAChD4zB,EAAO7gC,EAAckO,EAAK9Q,MAAMqO,KAAK3F,KAAOrG,EAAKD,EAAOC,GAAKyO,EAAK9Q,MAAMF,UACxE4jC,EAAoB,IAAPrhC,EAAW,GAAKohC,EAK7Br/B,EAAK,gBAAkBH,EAAMG,GAAK,IAAM+I,EAAO0C,EAKrD,GAAIiB,EAAK9Q,MAAM0Q,QAAQ3C,kBAAoB9J,EAAMG,IAAMyL,IAAsBiB,EAAK9Q,MAAM6P,kBAOtF,OALIA,GAAqBqzB,KACvBA,GAAmCrzB,EACnCozB,GAA4B7+B,GAI5BvD,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAOlY,kBACrCkD,EAAAC,EAAAC,cAAC4iC,GAAD,CAAcv/B,GAAIA,EAAIH,MAAOA,EAAOkJ,KAAMA,EAAM0C,kBAAmBA,KAOzE,GAAe,IAAXM,EAAc,CAChB,IAAM7O,EAAuB,IAAX6O,EAAe0F,KAAOhY,SAAWgY,KAAO/X,OACpD8lC,EAA2B,IAAXzzB,EAAe,GAAK,IAC1C,OACEtP,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWA,GAC7BsiC,EACAF,GAMP,GAAIv2B,IAAS2D,EAAK9Q,MAAM0Q,QAAQvD,KAC9B,OAAOtM,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAaK,GAK/B,IADA,IAAIG,GAA0B,EACrBt+B,EAAI,EAAGA,EAAIsK,EAAmBtK,IACrC,GAAkC,IAA9BtB,EAAMoM,GAAa9K,EAAI,GAAU,CACnCs+B,GAA0B,EAC1B,MAQJ,IAAMC,EAAwBj0B,IAAsBiB,EAAK9Q,MAAM6P,mBAAqBg0B,EAC9EE,EACJl0B,IAAsBiB,EAAK9Q,MAAM6P,kBAAoB,GACI,IAAzD5L,EAAMoM,GAAaS,EAAK9Q,MAAM6P,kBAAoB,GAEpD,OAAW,IAAPxN,GAAYyhC,GAAyBC,GAEnCl0B,GAAqBqzB,KACvBA,GAAmCrzB,EACnCozB,GAA4B7+B,GAI5BvD,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAOlY,kBACrCkD,EAAAC,EAAAC,cAAC4iC,GAAD,CAAcv/B,GAAIA,EAAIH,MAAOA,EAAOkJ,KAAMA,EAAM0C,kBAAmBA,MAMlEhP,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAaK,IAlIL5yB,EAqI1BiwB,gBAAkB,SAAC78B,EAAU8/B,GAC3B,OAAQ9/B,GACN,IAAK,IACH,OAAO8/B,EAAU/7B,mBACnB,IAAK,IACH,OAAO+7B,EAAU97B,qBACnB,IAAK,KACH,OAAO87B,EAAU77B,kBACnB,QAEE,OAAO67B,EAAU/7B,qBA/IG6I,EAmJ1BmzB,WAAa,SAAChgC,EAAco/B,EAAwBa,GAClD,OAAQb,GACN,IAAK,SACH,IAAIc,EAA6BlgC,EAAMuD,KAOvC,OAJIsJ,EAAK9Q,MAAMq4B,iBAAmBp0B,EAAMG,KACtC+/B,EAAOtjC,EAAAC,EAAAC,cAAA,SAAIkD,EAAMuD,OAIjB3G,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAOtY,UACpC4mC,GAIP,IAAK,aACH,IAAMC,EAAKngC,EAAMiF,aACXm7B,EAAQzhC,EAAckO,EAAK9Q,MAAMqO,KAAK3F,KAAO07B,EAAKhiC,EAAOgiC,GAAKtzB,EAAK9Q,MAAMF,UAC/E,OAAOe,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAoB,IAAPe,EAAW,KAAOC,GAEjD,IAAK,cACH,IAAMD,EAAKngC,EAAMiF,aACXk4B,EAAgBtwB,EAAKiwB,gBAAgB98B,EAAMC,IAAK4M,EAAK9Q,MAAMqO,MAC3Di2B,EAAcxzB,EAAK9Q,MAAMqO,KAAK3F,KAChCM,GAAkBo4B,EAAegD,EAAItzB,EAAK9Q,MAAMF,UAChDyJ,GAAqB63B,EAAegD,GACxC,OAAOvjC,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAoB,IAAPe,EAAW,KAAOE,GAEjD,IAAK,WAGH,IAAMC,EAAWtgC,EAAM+D,UAAUxC,OAAS,EAAIvB,EAAM+D,UAAU,GAAK,KACnE,OACEnH,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAOtY,UACpCgnC,GAIP,IAAK,MACH,OACE1jC,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAOtY,UACtB,IAAd0G,EAAM6F,IAAY,GAAK7F,EAAM6F,KAIpC,IAAK,YAEH,IAAIxF,EAAgCL,EAAMK,UAG1C,MAFkB,eAAdA,IAA4BA,EAAY,UAC1B,cAAdA,IAA2BA,EAAY,SACpCzD,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAa/+B,GAE/B,IAAK,MACH,OAAOzD,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAap/B,EAAM0F,KACrC,IAAK,KACH,OAAOmH,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,KACH,OAAOvyB,EAAK0yB,mBAAmBv/B,EAAO,IAAK,EAAGo/B,GAChD,IAAK,YACH,OAAOvyB,EAAKsyB,wBAAwBn/B,EAAO,IAAKo/B,GAClD,IAAK,YACH,OAAOvyB,EAAKsyB,wBAAwBn/B,EAAO,IAAKo/B,GAClD,IAAK,UACL,IAAK,UACH,OAAOxiC,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,EAAY/hC,UAAWuU,KAAOpY,aAChD,IAAK,iBACH,IAAM88B,EAAUnuB,GAAoBnI,GAC9BkB,EAAW2L,EAAK9Q,MAAMqO,KAAK3F,KAAO6xB,EAAUn4B,EAAOm4B,GACzD,OAAO15B,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAyB,IAAZ9I,EAAgB,KAAO33B,EAAcuC,EAAU2L,EAAK9Q,MAAMF,WAEzF,IAAK,kBACH,IAAMy6B,EAAkBnuB,GAAoBnI,GACtCxC,EAAQwC,EAAM4F,OAAOrE,OAAS,EAAIvB,EAAM4F,OAAO,GAAK,MACpDjG,EAAiBk5B,GAAUhsB,EAAK9Q,MAAMqO,KAAKjG,QAASnE,EAAOxC,EAAO84B,EAASzpB,EAAK9Q,MAAMqO,KAAK3F,MAGjG,MAAgC,UAA5BoI,EAAK9Q,MAAMqO,KAAKjG,QACXvH,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAwB,IAAXz/B,EAAehB,EAAcgB,EAAQkN,EAAK9Q,MAAMF,UAAY,MAEpFe,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAwB,IAAXz/B,EAAeD,EAAcC,EAAQkN,EAAK9Q,MAAMF,UAAY,MAE3F,IAAK,aACH,IAAMy6B,EAAU1tB,GAAgB5I,GAC1BkB,EAAW2L,EAAK9Q,MAAMqO,KAAK3F,KAAO6xB,EAAUn4B,EAAOm4B,GACzD,OAAO15B,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAyB,IAAZ9I,EAAgB,KAAO33B,EAAcuC,EAAU2L,EAAK9Q,MAAMF,WAEzF,IAAK,cACH,IAAMy6B,EAAkB1tB,GAAgB5I,GAClCxC,EAAQwC,EAAM4F,OAAOrE,OAAS,EAAIvB,EAAM4F,OAAO,GAAK,MACpDjG,EAAiBk5B,GAAUhsB,EAAK9Q,MAAMqO,KAAKjG,QAASnE,EAAOxC,EAAO84B,EAASzpB,EAAK9Q,MAAMqO,KAAK3F,MAGjG,MAAgC,UAA5BoI,EAAK9Q,MAAMqO,KAAKjG,QACXvH,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAwB,IAAXz/B,EAAehB,EAAcgB,EAAQkN,EAAK9Q,MAAMF,UAAY,MAEpFe,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAwB,IAAXz/B,EAAeD,EAAcC,EAAQkN,EAAK9Q,MAAMF,UAAY,MAE3F,IAAK,QAEH,GAA+B,IAA3B+M,GAAgB5I,GAAc,OAAOpD,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,IAGlD,GAAIp/B,EAAMiG,MAAO,OAAOrJ,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAal/B,GAAU,uBAAwB2M,EAAK9Q,MAAMF,WAI3F,GAA+B,IAA3BmE,EAAM+D,UAAUxC,OAAc,OAAO3E,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,IAMlD,IALA,IAAMkB,EAAWtgC,EAAM+D,UAAU,GAKxBzC,EAAI,EAAGA,EAAI2+B,EAAgB1+B,OAAQD,IAAK,CAC/C,IAAMvD,EAASkiC,EAAgB3+B,GAC/B,GAAIvD,EAAO49B,SAASliB,WAAa6mB,EAKjC,IADA,IAAM9C,EAAaz/B,EAAO28B,eACjBxT,EAAI,EAAGA,EAAIsW,EAAWj8B,OAAQ2lB,IAAK,CAG1C,GAFiBsW,EAAWtW,GAEf/mB,KAAOH,EAAMG,GAAI,CAE5B,IAAMogC,EAAUxgC,EAAoBmnB,EAAI,EAAGlnB,EAAO6M,EAAK9Q,MAAMF,UAC7D,OAAOe,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,GAAamB,KAKnC,OAAO3jC,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,IAElB,QAEE,OAAOxiC,EAAAC,EAAAC,cAAA,MAAIR,IAAK8iC,MA9SIvyB,EAkT1BwV,WAAa,SAACme,EAA4BP,GAKxC,IAJA,IAAMvF,EAAiB7tB,EAAK9Q,MAAM2+B,eAC5BtG,EAAiBvnB,EAAK9Q,MAAMq4B,eAE5BtN,EAAO,GACJxlB,EAAI,EAAGA,EAAIo5B,EAAen5B,OAAQD,IAAK,CAK9C,IAJA,IAAMtB,EAAQ06B,EAAep5B,GAGvBm/B,EAAQ,GACLC,EAAM,EAAGA,EAAMF,EAAQj/B,OAAQm/B,IAAO,CAC7C,IAAMtB,EAAaoB,EAAQE,GAC3BD,EAAM/2B,KAAKmD,EAAKmzB,WAAWhgC,EAAOo/B,EAAYa,IAGhD,IACMU,EADY3gC,EAAMG,KAAOi0B,EACExiB,KAAOjY,QAAU,GAClDmtB,EAAKpd,KACH9M,EAAAC,EAAAC,cAAA,MAAIR,IAAK0D,EAAMG,GAAI9C,UAAWsjC,GAC3BF,IAIP,OAAO3Z,GAzUiBja,EA4U1B+zB,qBAAuB,SAACxB,GACtB,OAAQA,GACN,IAAK,SACH,OAAOxiC,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,0BAC7B,IAAK,aACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,8BAC7B,IAAK,cACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,+BAC7B,IAAK,WACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,4BAC7B,IAAK,MACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,uBAC7B,IAAK,YACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,6BAC7B,IAAK,MACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,uBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,KACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,sBAC7B,IAAK,YACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,6BAC7B,IAAK,YACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,6BAC7B,IAAK,UACL,IAAK,UACH,MAAO,GACT,IAAK,iBACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,kCAC7B,IAAK,kBACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,mCAC7B,IAAK,aACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,kCAC7B,IAAK,cACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,+BAC7B,IAAK,QACH,OAAOvD,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,yBAC7B,QAEE,MAAO,KArYX0M,EAAKwV,WAAaxV,EAAKwV,WAAWlR,KAAhBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAClBA,EAAKsyB,wBAA0BtyB,EAAKsyB,wBAAwBhuB,KAA7BlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAC/BA,EAAK0yB,mBAAqB1yB,EAAK0yB,mBAAmBpuB,KAAxBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAC1BA,EAAKmzB,WAAanzB,EAAKmzB,WAAW7uB,KAAhBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IALMA,wEA6YxBoyB,GAAmC,EAGnC,IAAMuB,EAA6B,CAAC,UAEa,IAA7C1kC,KAAKC,MAAM0Q,QAAQ1C,uBACrBy2B,EAAQ92B,KAAK,YAEf82B,EAAQ92B,KAAK,aAAc,eAG3B,IAAK,IAAIpI,EAAI,EAAGA,EAAIxF,KAAKC,MAAM2+B,eAAen5B,SAAUD,EACtD,GAAyC,IAArCxF,KAAKC,MAAM2+B,eAAep5B,GAAGuE,IAAW,CAC1C26B,EAAQ92B,KAAK,OACb,MAK4B,MAA5B5N,KAAKC,MAAM0Q,QAAQvD,MACrBs3B,EAAQ92B,KAAK,WACb82B,EAAQ92B,KAAK,KAAM,KAAM,MACY,IAAjC5N,KAAKC,MAAM6P,mBACb40B,EAAQ92B,KAAK,MAEf82B,EAAQ92B,KAAK,WACb82B,EAAQ92B,KAAK,KAAM,OACkB,MAA5B5N,KAAKC,MAAM0Q,QAAQvD,MAC5Bs3B,EAAQ92B,KAAK,YAAa,UAAW,KAAM,KAAM,MACZ,IAAjC5N,KAAKC,MAAM6P,mBACb40B,EAAQ92B,KAAK,MAEf82B,EAAQ92B,KAAK,UAAW,OACa,MAA5B5N,KAAKC,MAAM0Q,QAAQvD,OAC5Bs3B,EAAQ92B,KAAK,YAAa,YAAa,UAAW,KAAM,KAAM,MACzB,IAAjC5N,KAAKC,MAAM6P,mBACb40B,EAAQ92B,KAAK,MAEf82B,EAAQ92B,KAAK,YAIf,IAAMm3B,EAA2C,MAA5B/kC,KAAKC,MAAM0Q,QAAQvD,MAAgBpN,KAAKC,MAAM6P,kBAAoB,EACvF40B,EAAQ92B,KAAKm3B,EAAe,iBAAmB,cACf,UAA5B/kC,KAAKC,MAAMqO,KAAKjG,SAClBq8B,EAAQ92B,KAAKm3B,EAAe,kBAAoB,eAElDL,EAAQ92B,KAAK,SAKb,IAFA,IAAM+d,EAAU,GACVqZ,EAAkBhlC,KAAKC,MAAM0Q,QAAQvD,KAAO7G,OAAOvG,KAAKC,MAAM6P,mBAC3DtK,EAAI,EAAGA,EAAIk/B,EAAQj/B,OAAQD,IAAK,CACvC,IAAM8qB,EAASoU,EAAQl/B,GACnBjE,EAAYuU,KAAOrY,UACnB2X,OAAgC,EAErB,WAAXkb,EACF/uB,EAAYuU,KAAOmvB,SACC,aAAX3U,GACT/uB,EAAYuU,KAAOovB,aACfllC,KAAKC,MAAM0Q,QAAQ1C,wBACrBmH,EAAQ,CAAEyH,MAAO7c,KAAKC,MAAM0Q,QAAQ1C,sBAAwB,QAE1C,YAAXqiB,GAAmC,YAAXA,EACjC/uB,EAAYuU,KAAOpY,WACV4yB,IAAW0U,IACpBzjC,EAAYuU,KAAOnY,cAGrBguB,EAAQ/d,KACN9M,EAAAC,EAAAC,cAAA,MAAIR,IAAK8vB,EAAQ/uB,UAAWA,EAAW6T,MAAOA,GAC3CpV,KAAK8kC,qBAAqBxU,KAMjC,IDjOFrjB,EACA/E,EACAC,EACAC,EACAG,EC6NQ47B,EAAkBY,GDjO1B93B,ECmOQjN,KAAKC,MAAM2+B,eDlOnB12B,ECmOQlI,KAAKC,MAAMqO,KAAKpG,mBDlOxBC,ECmOQnI,KAAKC,MAAMqO,KAAKnG,qBDlOxBC,ECmOQpI,KAAKC,MAAMqO,KAAKlG,kBDlOxBG,ECmOQvI,KAAKC,MAAMqO,KAAK/F,uBDjOjB44B,GACLl0B,EACA/E,EACAC,EACAC,EACAG,EACA,cC6NI06B,GACEjjC,KAAKC,MAAM2+B,eACX5+B,KAAKC,MAAMqO,KAAKpG,mBAChBlI,KAAKC,MAAMqO,KAAKnG,qBAChBnI,KAAKC,MAAMqO,KAAKlG,kBAChBpI,KAAKC,MAAMqO,KAAK/F,wBAGtB,OACEzH,EAAAC,EAAAC,cAAA,SAAOO,UAAWuU,KAAOvY,cACvBuD,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAK2qB,IAEP7qB,EAAAC,EAAAC,cAAA,aAAQhB,KAAKumB,WAAWme,EAASP,YAjfdzjC,IAAMc,WA+flBb,eARS,SAACC,GACvB,MAAO,CACL0N,KAAM1N,EAAM0N,KACZqC,QAAS/P,EAAM+P,QACf5Q,SAAUa,EAAMb,WAILY,CAAyByiC,wBC/hBlC+B,eACJ,SAAAA,EAAYllC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAAmlC,IACxBp0B,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAAg6B,GAAAnyB,KAAAhT,KAAMC,KAmBRmlC,gBAAkB,SAAC1jC,GACjB,IAAM0E,EAAMzD,OAAOjB,EAAME,cAAcX,OACjCmB,EAAS2O,EAAK9Q,MAAM0Q,QAAQvO,OAC5BgL,EAAO2D,EAAK9Q,MAAM0Q,QAAQvD,KAG5B1D,EAAWqH,EAAK9Q,MAAM0Q,QAAQjH,SAC9BA,EAAWqH,EAAK9Q,MAAM+H,gBAAgB5B,EAAM,KAC9CsD,EAAW,GAGbqH,EAAK9Q,MAAMolC,gBAAgBj/B,EAAKsD,EAAUtH,EAAQgL,IA/B1B2D,EAkC1Bu0B,qBAAuB,SAAC5jC,GACtB,IAAM0E,EAAM2K,EAAK9Q,MAAM0Q,QAAQvK,IACzBsD,EAAW/G,OAAOjB,EAAME,cAAcX,OACtCmB,EAAS2O,EAAK9Q,MAAM0Q,QAAQvO,OAC5BgL,EAAO2D,EAAK9Q,MAAM0Q,QAAQvD,KAChC2D,EAAK9Q,MAAMolC,gBAAgBj/B,EAAKsD,EAAUtH,EAAQgL,IAvC1B2D,EA0C1Bw0B,mBAAqB,SAAC7jC,GACpB,IAAM0E,EAAM2K,EAAK9Q,MAAM0Q,QAAQvK,IACzBsD,EAAWqH,EAAK9Q,MAAM0Q,QAAQjH,SAC9BtH,EAASV,EAAME,cAAcX,MAC7BmM,EAAO2D,EAAK9Q,MAAM0Q,QAAQvD,KAC5BpL,EAAaI,IAAWD,EAAaC,IACvC2O,EAAK9Q,MAAMolC,gBAAgBj/B,EAAKsD,EAAUtH,EAAQgL,IAhD5B2D,EAoD1By0B,iBAAmB,SAAC9jC,GAClB,IAAM0E,EAAM2K,EAAK9Q,MAAM0Q,QAAQvK,IACzBsD,EAAWqH,EAAK9Q,MAAM0Q,QAAQjH,SAE9B0D,EAAO1L,EAAME,cAAcX,MAC7Be,EAAaoL,I1E1Bd,SAAoBnM,GACzB,IAAMmM,EAAOnM,EACb,OAAQmM,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACH,OAAO,EACT,QAEE,MAAM,IAAIlN,MAAJ,uDAAAgC,OAAiEjB,EAAjE,O0EiBkBwkC,CAAWr4B,IACnC2D,EAAK9Q,MAAMolC,gBAAgBj/B,EAAKsD,EAHnB,IAGqC0D,IA1D5B2D,EA8D1B20B,oBAAsB,SAAChkC,GACrB,IAAMkP,EAAUjO,OAAOjB,EAAME,cAAcX,OAC3C8P,EAAK9Q,MAAM8N,gBAAgB6C,IAhEHG,EAmE1B40B,mBAAqB,SAACjkC,GACpB,IAAMkO,EAAUjN,OAAOjB,EAAME,cAAcX,OAC3C8P,EAAK9Q,MAAM+N,gBAAgB4B,IArEHmB,EA0E1B60B,4BAA8B,WACM,OAA9B1C,KAKAnyB,EAAK9Q,MAAM6P,mBAAqB,GAIpCoP,WAAW,WACT,GAAkC,OAA9BgkB,GAAJ,CAIA,IAAM2C,EAAO1yB,SAASC,eAAe8vB,IACjC2C,GACFA,EAAKC,UAEN,OA7FqB/0B,EA0G1Bg1B,mBAAqB,WACnB,IAAMC,EAAgB7yB,SAAS6yB,cAC3BA,aAAyBC,aAC3BD,EAAc/uB,QA7GQlG,EAiH1Bm1B,eAAiB,WAEf,GAAkC,OAA9Bn1B,EAAK9Q,MAAMq4B,eAAf,CAIA,IAAM1oB,EAAUjN,OAAOoO,EAAK9Q,MAAMq4B,gBAC5BlrB,EAAO2D,EAAK9Q,MAAM0Q,QAAQvD,KAC1BwD,EAAUG,EAAK9Q,MAAM6P,kBAC3BiB,EAAK9Q,MAAMkmC,SAASv2B,EAASxC,EAAMwD,GAAS,GAC5CG,EAAK60B,gCA3HmB70B,EA8H1Bq1B,aAAe,WAEb,GAAkC,OAA9Br1B,EAAK9Q,MAAMq4B,eAAf,CAIA,IAAM1oB,EAAUjN,OAAOoO,EAAK9Q,MAAMq4B,gBAC5BlrB,EAAO2D,EAAK9Q,MAAM0Q,QAAQvD,KAC1BwD,EAAUG,EAAK9Q,MAAM6P,kBAC3BiB,EAAK9Q,MAAMkmC,SAASv2B,EAASxC,EAAMwD,GAAS,GAC5CG,EAAK60B,gCAxImB70B,EA4I1Bs1B,qBAAuB,WACrB,IAAMC,EAAWnzB,SACjB,QAAImzB,EAAIC,sBACJD,EAAIE,4BACJF,EAAIG,wBACJH,EAAII,uBAjJgB31B,EAsJ1B41B,eAAiB,WACf,IAAML,EAAWnzB,SACiB,oBAAvBmzB,EAAIK,eAA+BL,EAAIK,iBACL,oBAA7BL,EAAIM,qBAAqCN,EAAIM,uBACnB,oBAA1BN,EAAIO,kBAAkCP,EAAIO,oBACjB,oBAAzBP,EAAIQ,kBAAiCR,EAAIQ,oBA3JjC/1B,EA+J1Bg2B,kBAAoB,SAACv2B,GACgB,oBAAxBA,EAAEu2B,kBAAkCv2B,EAAEu2B,oBACH,oBAA9Bv2B,EAAEw2B,wBAAwCx2B,EAAEw2B,0BACjB,oBAA3Bx2B,EAAEy2B,qBAAqCz2B,EAAEy2B,uBACf,oBAA1Bz2B,EAAE02B,qBAAoC12B,EAAE02B,uBAnKhCn2B,EAuK1Bo2B,iBAAmB,WAGjB,IAAoC,IAAhCp2B,EAAKs1B,uBACPt1B,EAAK41B,qBACA,CACL,IAAM5rC,EAAcoY,SAASC,eAAe,eACxB,OAAhBrY,GACFgW,EAAKg2B,kBAAkBhsC,KA/KHgW,EAoL1Bq2B,kBAAoB,WAClB,IAAMxI,EAAiB7tB,EAAK9Q,MAAM2+B,eAElC,GAA8B,IAA1BA,EAAen5B,OACjB,OACE3E,EAAAC,EAAAC,cAAA,UAAQC,MAAO,EAAGT,IAAK,GACpB4D,GAAU,4BAA6B2M,EAAK9Q,MAAMF,WAMzD,IADA,IAAMsnC,EAAgB,GACb7hC,EAAI,EAAGA,EAAIo5B,EAAen5B,OAAQD,IAAK,CAC9C,IAAMtB,EAAQ06B,EAAep5B,GAC7B6hC,EAAcz5B,KACZ9M,EAAAC,EAAAC,cAAA,UAAQC,MAAOiD,EAAMG,GAAI7D,IAAK0D,EAAMG,IACjCH,EAAMuD,OAIb,OAAO4/B,GArMPt2B,EAAKq0B,gBAAkBr0B,EAAKq0B,gBAAgB/vB,KAArBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACvBA,EAAKu0B,qBAAuBv0B,EAAKu0B,qBAAqBjwB,KAA1BlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAC5BA,EAAKw0B,mBAAqBx0B,EAAKw0B,mBAAmBlwB,KAAxBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAC1BA,EAAKy0B,iBAAmBz0B,EAAKy0B,iBAAiBnwB,KAAtBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAExBA,EAAKg1B,mBAAqBh1B,EAAKg1B,mBAAmB1wB,KAAxBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAC1BA,EAAKm1B,eAAiBn1B,EAAKm1B,eAAe7wB,KAApBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACtBA,EAAKq1B,aAAer1B,EAAKq1B,aAAa/wB,KAAlBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAEpBA,EAAK20B,oBAAsB30B,EAAK20B,oBAAoBrwB,KAAzBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAC3BA,EAAK40B,mBAAqB50B,EAAK40B,mBAAmBtwB,KAAxBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAE1BA,EAAK60B,4BAA8B70B,EAAK60B,4BAA4BvwB,KAAjClK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAEnCA,EAAKq2B,kBAAoBr2B,EAAKq2B,kBAAkB/xB,KAAvBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAjBDA,wEAiNxB,IALA,IAAMhR,EAAWC,KAAKC,MAAMF,SACtBunC,EAAetnC,KAAKC,MAAM+H,gBAAgBhI,KAAKC,MAAM0Q,QAAQvK,IAAM,GAEnE0iB,EAAa,GACbye,EAAcnjC,GAAU,8BAA+BrE,GACpDyF,EAAI,EAAGA,GAAKxF,KAAKC,MAAM8H,WAAYvC,IAC1CsjB,EAAWlb,KACT9M,EAAAC,EAAAC,cAAA,UAAQC,MAAOuE,EAAGhF,IAAKgF,GACpB+hC,EAAY3kC,QAAQ,MAAOmB,EAAcyB,EAAGzF,MAOnD,IAFA,IAAMgpB,EAAkB,GAClBye,EAAmBpjC,GAAU,mCAAoCrE,GAC9DyF,EAAI,EAAGA,GAAK8hC,EAAc9hC,IACjCujB,EAAgBnb,KACd9M,EAAAC,EAAAC,cAAA,UAAQC,MAAOuE,EAAGhF,IAAKgF,GACpBgiC,EAAiB5kC,QAAQ,MAAOmB,EAAcyB,EAAGzF,MAmBxD,IAdA,IAAM0nC,EAAc,CAClB3mC,EAAAC,EAAAC,cAAA,UAAQR,IAAK,IAAKS,MAAO,KACtBmD,GAAU,uBAAwBrE,IAErCe,EAAAC,EAAAC,cAAA,UAAQR,IAAK,IAAKS,MAAO,KACtBmD,GAAU,uBAAwBrE,IAErCe,EAAAC,EAAAC,cAAA,UAAQR,IAAK,IAAKS,MAAO,KACtBmD,GAAU,0BAA2BrE,KAIpC2nC,EAAgB,GAChBC,EAAiBvjC,GAAU,iCAAkCrE,GAC1DyF,EAAI,EAAGA,EAAIxF,KAAKC,MAAM2nC,kBAAkBniC,OAAQD,IAAK,CAC5D,IAAMpD,EAASpC,KAAKC,MAAM2nC,kBAAkBpiC,GACtChF,EAAMR,KAAKC,MAAM0Q,QAAQvK,IAAM,IAAMpG,KAAKC,MAAM0Q,QAAQjH,SAAW,IAAMlE,EAC/EkiC,EAAc95B,KACZ9M,EAAAC,EAAAC,cAAA,UAAQC,MAAOmB,EAAQ5B,IAAKA,GACzBmnC,EAAe/kC,QAAQ,WAAYgC,GAAexC,EAAQrC,MAIpC,IAAzB2nC,EAAcjiC,QAChBiiC,EAAc95B,KAAK9M,EAAAC,EAAAC,cAAA,UAAQR,IAAI,QAAQ4D,GAAU,4BAA6BrE,KAKhF,IAFA,IAAM8nC,EAAiB,GACjBrO,EAAkBp1B,GAAU,kCAAmCrE,GAC5DyF,EAAI,EAAGA,GAAK,EAAGA,IACtBqiC,EAAej6B,KACb9M,EAAAC,EAAAC,cAAA,UAAQR,IAAKgF,EAAGvE,MAAOuE,GACpBg0B,EAAgB52B,QAAQ,MAAOmB,EAAcyB,EAAGzF,OAInB,IAAhCC,KAAKC,MAAMuI,kBACbq/B,EAAej6B,KACb9M,EAAAC,EAAAC,cAAA,UAAQR,IAAK,EAAGS,MAAO,GACpBu4B,EAAgB52B,QAAQ,MAAOmB,EAAc,EAAGhE,MAKvD,IAAMu4B,EAA+C,OAA9Bt4B,KAAKC,MAAMq4B,oBAA0Bt1B,EAAYhD,KAAKC,MAAMq4B,eAAezO,WAElG,OACE/oB,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO5X,QACrB4C,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO3X,cACrB2C,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK8W,QAAN,CACEzW,GAAG,SACHH,MAAOjB,KAAKC,MAAM0Q,QAAQvK,IAAIyjB,WAC9BxoB,SAAUrB,KAAKolC,gBACf7jC,UAAS,iBAAAW,OAAmB4T,KAAOtX,WAElCsqB,GAEHhoB,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK8W,QAAN,CACEzW,GAAG,SACHH,MAAOjB,KAAKC,MAAM0Q,QAAQjH,SAASmgB,WACnCxoB,SAAUrB,KAAKslC,qBACf/jC,UAAS,iBAAAW,OAAmB4T,KAAOtX,WAElCuqB,GAEHjoB,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK8W,QAAN,CACEzW,GAAG,SACHH,MAAOjB,KAAKC,MAAM0Q,QAAQvD,KAC1B/L,SAAUrB,KAAKwlC,iBACfjkC,UAAS,iBAAAW,OAAmB4T,KAAOtX,WAElCipC,GAEH3mC,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK8W,QAAN,CACErX,IAAK,UAAYR,KAAKC,MAAM0Q,QAAQvO,OACpChB,GAAG,SACHH,MAAOjB,KAAKC,MAAM0Q,QAAQvO,OAC1Bf,SAAUrB,KAAKulC,mBACfhkC,UAAS,iBAAAW,OAAmB4T,KAAOtX,WAElCkpC,GAEH5mC,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK8W,QAAN,CACE5W,MAAOjB,KAAKC,MAAM6P,kBAAkB+Z,WACpCzoB,GAAG,SACHC,SAAUrB,KAAK0lC,oBACfnkC,UAAS,iBAAAW,OAAmB4T,KAAOtX,WAElCqpC,GAEH/mC,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK8W,QAAN,CACE5W,MAAOq3B,EACPl3B,GAAG,SACHC,SAAUrB,KAAK2lC,mBACfpkC,UAAS,iBAAAW,OAAmB4T,KAAOtX,WAElCwB,KAAKonC,sBAIVtmC,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO1X,eACrB0C,EAAAC,EAAAC,cAAC4gB,GAAA7gB,EAAD,KACED,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CAAQgR,QAAQ,kBAAkBD,QAAS9R,KAAKC,MAAM6nC,gCACpDhnC,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,kCAAkCmN,eAAe,sBAExE1Q,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CAAQgR,QAAQ,oBAAoBD,QAAS9R,KAAKmnC,iBAAkB5lC,UAAWuU,KAAOzX,YACpFyC,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,mCAAmCmN,eAAe,wBAG3E1Q,EAAAC,EAAAC,cAAA,UACEW,KAAK,SACLwe,aAAcngB,KAAK+lC,mBACnB1rB,YAAara,KAAKomC,aAClB7kC,UAAWuU,KAAOvX,QAElBuC,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,yBAAyBmN,eAAe,aAE/D1Q,EAAAC,EAAAC,cAAA,UACEW,KAAK,SACLwe,aAAcngB,KAAK+lC,mBACnB1rB,YAAara,KAAKkmC,eAClB3kC,UAAWuU,KAAOxX,UAElBwC,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,2BAA2BmN,eAAe,wBA/V/C9Q,IAAMc,WA4XnBb,eArBS,SAACC,GACvB,MAAO,CACLmH,WAAYnH,EAAM0N,KAAKvG,WACvBC,gBAAiBpH,EAAM0N,KAAKtG,gBAC5BQ,iBAAkB5H,EAAM0N,KAAK9F,iBAC7BmI,QAAS/P,EAAM+P,QACf5Q,SAAUa,EAAMb,WAIO,SAAC0B,GAC1B,MAAO,CACL4jC,gBAAiB,SAACj/B,EAAasD,EAAkBtH,EAAgBgL,GAAhD,OACf3L,EzBzXyB,SAAC2E,EAAasD,EAAkBtH,EAAgBgL,GAC7E,MAAO,CACLzL,KAAM,oBACNyE,IAAKA,EACLsD,SAAUA,EACVtH,OAAQA,EACRgL,KAAMA,GyBmXKi4B,CAAgBj/B,EAAKsD,EAAUtH,EAAQgL,KAClDW,gBAAiB,SAAC6C,GAAD,OAAqBnP,EzB9WX,SAACmP,GAC9B,MAAO,CACLjP,KAAM,mBACNiP,QAASA,GyB2WsC7C,CAAgB6C,KAC/D5C,gBAAiB,SAAC4B,GAAD,OAAqBnO,EzBtWX,SAACmO,GAC9B,MAAO,CACLjO,KAAM,oBACNiO,QAASA,GyBmWsC5B,CAAgB4B,KAC/Du2B,SAAU,SAACv2B,EAAiBxC,EAAYwD,EAAiBP,GAA/C,OACR5O,EzBzYkB,SAACmO,EAAiBxC,EAAY0C,EAA2BO,GAC/E,MAAO,CACL1O,KAAM,YACNiO,QAASA,EACTxC,KAAMA,EACN0C,kBAAmBA,EACnBO,QAASA,GyBmYE81B,CAASv2B,EAASxC,EAAMwD,EAASP,OAIjC1P,CAA6CwkC,yBCnZtD4C,oLAGF,IAAIxsC,EAAauF,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,4BACjC7I,EAAO,GAGX,GAAkC,OAA9BwE,KAAKC,MAAMq4B,qBAAyDt1B,IAA9BhD,KAAKC,MAAMq4B,eAA8B,CACjF,IAAMF,EAAMp4B,KAAKC,MAAMsP,aAAazB,OAAO9N,KAAKC,MAAMq4B,gBAChDp0B,EAAQlE,KAAKC,MAAMsP,aAAatC,QAAQmrB,GAC9C78B,EAAauF,EAAAC,EAAAC,cAAA,YAAOkD,EAAMuD,MAE1B,IAAMugC,EAA6B,GAEJ,kBAApB9jC,EAAM4jB,WAA8C,KAApB5jB,EAAM4jB,UAC/CkgB,EAAYp6B,KAAK,IAAM1J,EAAM4jB,WAE7BkgB,EAAYp6B,KAAK,IAEf1J,EAAM0F,IAAM,GACdo+B,EAAYp6B,KAAK7J,EAAcG,EAAM0F,IAAK5J,KAAKC,MAAMF,WAEvDioC,EAAYp6B,KAAKtJ,GAAkBJ,EAAMK,UAAWvE,KAAKC,MAAMF,WAC3DmE,EAAM+D,UAAUxC,OAAS,GAC3BuiC,EAAYp6B,KAAK1J,EAAM+D,UAAU2jB,KAAK,OAGxCpwB,EAAOwsC,EAAYpc,KAAK,UAG1B,OACE9qB,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAOxa,QACrBwF,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAOva,YAAaA,GACpCuF,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAOta,MAAOA,WAjCVkF,IAAMc,WA8CnBb,eAPS,SAACC,GACvB,MAAO,CACL2O,aAAc3O,EAAM2O,aACpBxP,SAAUa,EAAMb,WAILY,CAAyBonC,IC/BlCE,GAAmB,EAEnBC,eACJ,SAAAA,EAAYjoC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAAkoC,IACxBn3B,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAA+8B,GAAAl1B,KAAAhT,KAAMC,KAUR8W,SAAW,WAAkB,IACnB9V,EAAU8P,EAAKnQ,MAAfK,MACFmE,EAAWzC,OAAO1B,GAExB,OAAIid,MAAM9Y,IAAaA,EAAW,GAAKA,EAAW,IACzC,QAEF,WAlBiB2L,EAqB1BmG,aAAe,SAACxV,GACd,IAAMT,EAAQS,EAAME,cAAcX,MAClC,IAAK8f,oBAAS9f,KAAWc,EAASd,GAChC,MAAM,IAAIf,MAAJ,kDAAAgC,OAA4DjB,EAA5D,MAGR8P,EAAKwC,SAAS,CAAEtS,MAAOA,GAAS,WAE9B,GAAwB,UAApB8P,EAAKgG,WAAwB,CAE/B,IAAM3H,EAAe,GACrBA,EAAQ2B,EAAK9Q,MAAMkoC,WAAajlC,KAAKqG,MAAM5G,OAAO1B,GAASgnC,IAC3Dl3B,EAAK9Q,MAAMmoC,aAAah5B,OA9B5B2B,EAAKgG,SAAWhG,EAAKgG,SAAS1B,KAAdlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAChBA,EAAKmG,aAAenG,EAAKmG,aAAa7B,KAAlBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAEpBA,EAAKnQ,MAAQ,CACXK,MAAOiC,KAAK+W,KAAKlJ,EAAK9Q,MAAM0Q,QAAQI,EAAK9Q,MAAMkoC,WAAaF,KAPtCl3B,wEAuCxB,IAAMuG,EAAyBtX,KAAK+W,WAEpC,OACEjW,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK4W,MAAN,KACE7W,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK2W,MAAN,KAAa1X,KAAKC,MAAMuX,OACxB1W,EAAAC,EAAAC,cAACyW,GAAA1W,EAAK8W,QAAN,CACElW,KAAK,SACL0mC,QAAQ,SACRne,IAAI,IACJtQ,KAAK,IACL3Y,MAAOjB,KAAKY,MAAMK,MAAM4oB,WACxBxoB,SAAUrB,KAAKkX,aACfgB,QAAwB,YAAfZ,EACTa,UAA0B,UAAfb,EACX/V,UAA0B,YAAf+V,EAA2B,kBAAetU,YAtDrCtC,IAAMc,WAuEjBb,eAVS,SAACC,GAAD,MAAqC,CAC3D+P,QAAS/P,EAAM+P,UAGU,SAAClP,GAC1B,MAAO,CACL2mC,aAAc,SAACh5B,GAAD,OAAoC3N,E3B9B7C,CACLE,KAAM,iBACNyN,Q2B4BwEA,OAI7DzO,CAA6CunC,yBCrEtDI,eACJ,SAAAA,EAAYroC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAAsoC,IACxBv3B,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAAm9B,GAAAt1B,KAAAhT,KAAMC,KAOR6nC,+BAAiC,WAC/B/2B,EAAKwC,SAAS,CACZg1B,0BAA2Bx3B,EAAKnQ,MAAM2nC,4BARxCx3B,EAAK+2B,+BAAiC/2B,EAAK+2B,+BAA+BzyB,KAApClK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACtCA,EAAKnQ,MAAQ,CACX2nC,0BAA0B,GAJJx3B,wEAexB,IAAMy3B,EAAMjK,GAAgBv+B,KAAKC,MAAMu+B,gBAAiBx+B,KAAKC,MAAM0Q,SAE/D83B,EAAe,KAenB,OAbEA,GAD0C,IAAxCzoC,KAAKY,MAAM2nC,yBAEXznC,EAAAC,EAAAC,cAAC0nC,GAAD,CACE54B,kBAAmB04B,EAAI14B,kBACvB8uB,eAAgB4J,EAAI5J,eACpBtG,eAAgBkQ,EAAIlQ,iBAKtBx3B,EAAAC,EAAAC,cAAC40B,GAAD,CAAcxvB,IAAKpG,KAAKC,MAAM0Q,QAAQvK,IAAKsD,SAAU1J,KAAKC,MAAM0Q,QAAQjH,SAAUmqB,eAAe,IAKnG/yB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,CAAMqU,MAAO,CAAEsM,OAAQ,cACrB5gB,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,KACE7Q,EAAAC,EAAAC,cAAA,OAAKoU,MAAO,CAAEyH,MAAO,UACnB/b,EAAAC,EAAAC,cAAC2nC,GAAD,CACEnxB,MAAOpT,GAAU,sCAAuCpE,KAAKC,MAAMF,UACnEooC,UAAU,2BAGdrnC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CACElN,GAAG,8BACHmN,eAAe,0FAKvB1Q,EAAAC,EAAAC,cAAA,OAAKqD,GAAG,cAAc9C,UAAWuU,KAAO/a,aACtC+F,EAAAC,EAAAC,cAAC4nC,GAAD,CACE94B,kBAAmB04B,EAAI14B,kBACvB8uB,eAAgB4J,EAAI5J,eACpBtG,eAAgBkQ,EAAIlQ,iBAGtBx3B,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO9a,uBACrB8F,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO7a,mBACrB6F,EAAAC,EAAAC,cAAC6nC,GAAD,CACE/4B,kBAAmB04B,EAAI14B,kBACvB8uB,eAAgB4J,EAAI5J,eACpBtG,eAAgBkQ,EAAIlQ,eACpBzqB,YAAa26B,EAAI36B,YACjB2qB,sBAAuBgQ,EAAIhQ,yBAI/B13B,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO5a,oBAAqButC,IAG9C3nC,EAAAC,EAAAC,cAAC8nC,GAAD,CACEh5B,kBAAmB04B,EAAI14B,kBACvB8uB,eAAgB4J,EAAI5J,eACpBtG,eAAgBkQ,EAAIlQ,eACpBsP,kBAAmB5nC,KAAKC,MAAM2nC,kBAC9BE,+BAAgC9nC,KAAK8nC,0CA7EvBpnC,IAAMc,WAoHjBb,eA/BS,SAACC,GAWvB,IAVA,IAAMwF,EAAMxF,EAAM+P,QAAQvK,IACpBsD,EAAW9I,EAAM+P,QAAQjH,SACzBtH,EAASxB,EAAM+P,QAAQvO,OAEvB2mC,EAAoBnoC,EAAM2O,aAAatC,QAAQC,OACnD,SAAChJ,GAAD,OAAWA,EAAMkC,MAAQA,GAAOlC,EAAMwF,WAAaA,IAI/Cs/B,EAAyB,GACtBxjC,EAAI,EAAGA,EAAIujC,EAAkBtjC,OAAQD,IAAK,CACjD,IAAMtB,EAAQ6kC,EAAkBvjC,IACO,IAAnCwjC,EAAQ9d,QAAQhnB,EAAM9B,SACxB4mC,EAAQp7B,KAAK1J,EAAM9B,QAGvB4mC,EAAQ5qB,OAGR,IAAMogB,EAAkBuK,EAAkB77B,OAAO,SAAChJ,GAAD,OAAWA,EAAM9B,SAAWA,IAE7E,MAAO,CACLkM,KAAM1N,EAAM0N,KACZqC,QAAS/P,EAAM+P,QACfi3B,kBAAmBoB,EACnBxK,gBAAiBA,EACjBz+B,SAAUa,EAAMb,WAILY,CAAyB2nC,ICvJzBW,oLAJX,OAAOnoC,EAAAC,EAAAC,cAACkoC,GAAD,aAFoBxoC,IAAMc,gCCyC/B2nC,8MACJC,WAAa,SAACh8B,GACZ,IAAM+qB,EAAUhrB,GAAuBC,GAGjCi8B,EAAiBt4B,EAAK9Q,MAAMu+B,gBAAgBtxB,OAAO,SAACsD,GACxD,OAAyB,IAAlBA,EAAE2nB,GAAS,KAIpB,OAAOmG,GAAsB+K,EAAgBlR,EAAS,mFAGxC7H,EAAgBvwB,GAC9B,OAAQuwB,GACN,IAAK,YACH,OAAOlsB,GAAU,mCAAoCrE,GACvD,IAAK,UACH,OAAOqE,GAAU,gCAAiCrE,GACpD,IAAK,WACH,OAAOqE,GAAU,6BAA8BrE,GACjD,IAAK,iBACH,MAAO,GACT,IAAK,YACH,OAAOqE,GAAU,mCAAoCrE,GACvD,IAAK,UACH,OAAOqE,GAAU,gCAAiCrE,GACpD,IAAK,WACH,OAAOqE,GAAU,6BAA8BrE,GACjD,IAAK,oBACH,MAAO,GACT,IAAK,eACH,OAAOqE,GAAU,sCAAuCrE,GAC1D,IAAK,aACH,OAAOqE,GAAU,gCAAiCrE,GACpD,IAAK,cACH,OAAOqE,GAAU,6BAA8BrE,GACjD,QAEE,MAAO,qCAKX,IAAMA,EAAWC,KAAKC,MAAMF,SAEtBupC,EAAUtpC,KAAKopC,WAAW,KAC1BG,EAAUvpC,KAAKopC,WAAW,KAC1BI,EAAaxpC,KAAKopC,WAAW,KAE7BxU,EAA8B,IAAnB0U,EAAQ7jC,OACnBovB,EAA8B,IAAnB0U,EAAQ9jC,OACnBqvB,EAAoC,IAAtB0U,EAAW/jC,OAEzBgkC,EAAUvmC,KAAK8I,IAAIs9B,EAAQ7jC,OAAQ8jC,EAAQ9jC,OAAQ+jC,EAAW/jC,QAG9Di/B,EAAyB,GAC3B9P,IACF8P,EAAQ92B,KAAK,aACb82B,EAAQ92B,KAAK5N,KAAKC,MAAM0I,KAAO,UAAY,YACvC3I,KAAKC,MAAM2I,oBACb87B,EAAQ92B,KAAK5N,KAAKC,MAAM0I,KAAO,WAAa,YAG5CksB,IACED,GACF8P,EAAQ92B,KAAK,kBAEf82B,EAAQ92B,KAAK,aACb82B,EAAQ92B,KAAK5N,KAAKC,MAAM0I,KAAO,UAAY,YACvC3I,KAAKC,MAAM2I,oBACb87B,EAAQ92B,KAAK5N,KAAKC,MAAM0I,KAAO,WAAa,YAG5CmsB,KACEF,GAAYC,IACd6P,EAAQ92B,KAAK,qBAEf82B,EAAQ92B,KAAK,gBACb82B,EAAQ92B,KAAK5N,KAAKC,MAAM0I,KAAO,aAAe,eAC1C3I,KAAKC,MAAM2I,oBACb87B,EAAQ92B,KAAK5N,KAAKC,MAAM0I,KAAO,cAAgB,eAMnD,IADA,IAAMqiB,EAAO,GACJxlB,EAAI,EAAGA,EAAIikC,IAAWjkC,EAAG,CAGhC,IAFA,IAAMkkC,EAAU,GAEPte,EAAI,EAAGA,EAAIsZ,EAAQj/B,SAAU2lB,EAAG,CACvC,IAAMkF,EAASoU,EAAQtZ,GACjB5qB,EAAc8vB,EAAS/pB,OAAOf,GAEhCmkC,EAAkB,GAClBpoC,OAAYyB,EAEhB,OAAQstB,GACN,IAAK,YACH,GAAI9qB,EAAI8jC,EAAQ7jC,OAAQ,CACtB,IAAMvB,EAAQolC,EAAQ9jC,GACtBmkC,EAAU5lC,EAAcyB,EAAI,EAAGzF,GAAY,KAAOmE,EAAMuD,KAE1D,MAEF,IAAK,UACH,GAAIjC,EAAI8jC,EAAQ7jC,OAAQ,CACtB,IAAMvB,EAAQolC,EAAQ9jC,GACtBmkC,EAAU9mC,EAAcqB,EAAMqG,QAAQ,GAAIxK,GAE5C,MAEF,IAAK,WACH,GAAIyF,EAAI8jC,EAAQ7jC,OAAQ,CACtB,IAAMvB,EAAQolC,EAAQ9jC,GACtBmkC,EAAU9mC,EAAcR,EAAO6B,EAAMqG,QAAQ,IAAKxK,GAEpD,MAEF,IAAK,iBACHwB,EAAYuU,KAAOna,YACnB,MACF,IAAK,YACH,GAAI6J,EAAI+jC,EAAQ9jC,OAAQ,CACtB,IAAMvB,EAAQqlC,EAAQ/jC,GACtBmkC,EAAU5lC,EAAcyB,EAAI,EAAGzF,GAAY,KAAOmE,EAAMuD,KAE1D,MAEF,IAAK,UACH,GAAIjC,EAAI+jC,EAAQ9jC,OAAQ,CACtB,IAAMvB,EAAQqlC,EAAQ/jC,GACtBmkC,EAAU9mC,EAAcqB,EAAMsG,QAAQ,GAAIzK,GAE5C,MAEF,IAAK,WACH,GAAIyF,EAAI+jC,EAAQ9jC,OAAQ,CACtB,IAAMvB,EAAQqlC,EAAQ/jC,GACtBmkC,EAAU9mC,EAAcR,EAAO6B,EAAMsG,QAAQ,IAAKzK,GAEpD,MAEF,IAAK,oBACHwB,EAAYuU,KAAOna,YACnB,MACF,IAAK,eACH,GAAI6J,EAAIgkC,EAAW/jC,OAAQ,CACzB,IAAMvB,EAAQslC,EAAWhkC,GACzBmkC,EAAU5lC,EAAcyB,EAAI,EAAGzF,GAAY,KAAOmE,EAAMuD,KAE1D,MAEF,IAAK,aACH,GAAIjC,EAAIgkC,EAAW/jC,OAAQ,CACzB,IAAMvB,EAAQslC,EAAWhkC,GACzBmkC,EAAU9mC,EAAcqB,EAAMuG,WAAW,GAAI1K,GAE/C,MAEF,IAAK,cACH,GAAIyF,EAAIgkC,EAAW/jC,OAAQ,CACzB,IAAMvB,EAAQslC,EAAWhkC,GACzBmkC,EAAU9mC,EAAcR,EAAO6B,EAAMuG,WAAW,IAAK1K,IAM3D2pC,EAAQ97B,KACN9M,EAAAC,EAAAC,cAAA,MAAIR,IAAKA,EAAKe,UAAWA,GACtBooC,IAKP3e,EAAKpd,KAAK9M,EAAAC,EAAAC,cAAA,MAAIR,IAAKgF,GAAIkkC,IAKzB,IADA,IAAMpuC,EAAS,GACNkK,EAAI,EAAGA,EAAIk/B,EAAQj/B,SAAUD,EAAG,CACvC,IAAM8qB,EAASoU,EAAQl/B,GACjB6M,EAAQrS,KAAK4pC,gBAAgBtZ,EAAQtwB,KAAKC,MAAMF,UACtDzE,EAAOsS,KAAK9M,EAAAC,EAAAC,cAAA,MAAIR,IAAK8vB,GAASje,IAGhC,OACEvR,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,KACED,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAKqQ,OAAN,KACEtQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CACElN,GAAG,2BACHmN,eAAe,gCACfC,OAAQ,CAAErP,OAAQwC,GAAe5E,KAAKC,MAAMmC,OAAQpC,KAAKC,MAAMF,cAGnEe,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,KACE7Q,EAAAC,EAAAC,cAACsgB,GAAAvgB,EAAD,CAAOwgB,SAAO,EAACE,OAAK,EAACD,KAAK,KAAKpM,MAAO,CAAEsM,OAAQ,QAC9C5gB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAK1F,IAEPwF,EAAAC,EAAAC,cAAA,aAAQgqB,aA1MStqB,IAAMc,WA0NpBb,eARS,SAACC,GACvB,MAAO,CACL+H,KAAM/H,EAAM0N,KAAK3F,KACjBC,mBAAoBhI,EAAM0N,KAAK1F,mBAC/B7I,SAAUa,EAAMb,WAILY,CAAyBwoC,ICxOlCU,eACJ,SAAAA,EAAY5pC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAA6pC,IACxB94B,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAA0+B,GAAA72B,KAAAhT,KAAMC,KAYR6pC,UAAY,SAACpoC,GACX,IAAM0E,EAAMzD,OAAOjB,EAAME,cAAcX,OACnC8P,EAAKnQ,MAAMwF,MAAQA,IAEjB2K,EAAKnQ,MAAM8I,SAAWqH,EAAK9Q,MAAMqO,KAAKtG,gBAAgB5B,EAAM,GAC9D2K,EAAKwC,SAAS,CAAEnN,IAAKA,EAAKsD,SAAU,IAEpCqH,EAAKwC,SAAS,CAAEnN,IAAKA,MApBD2K,EAyB1Bg5B,eAAiB,SAACroC,GAChB,IAAMgI,EAAW/G,OAAOjB,EAAME,cAAcX,OACxC8P,EAAKnQ,MAAM8I,WAAaA,GAC1BqH,EAAKwC,SAAS,CAAE7J,SAAUA,KA5BJqH,EAgC1Bi5B,YAAc,WACZtrC,OAAOurC,SA9BPl5B,EAAK+4B,UAAY/4B,EAAK+4B,UAAUz0B,KAAflK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACjBA,EAAKg5B,eAAiBh5B,EAAKg5B,eAAe10B,KAApBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACtBA,EAAKi5B,YAAcj5B,EAAKi5B,YAAY30B,KAAjBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAEnBA,EAAKnQ,MAAQ,CACXwF,IAAK,EACLsD,SAAU,GATYqH,wEA2CxB,IAPO,IAAAwO,EAAAvf,KACDD,EAAWC,KAAKC,MAAMF,SACtBmqC,EAAgB,CAAErtB,MAAO,QAASrK,YAAa,QAG/CsW,EAAa,GACbye,EAAcnjC,GAAU,8BAA+BrE,GACpDyF,EAAI,EAAGA,GAAKxF,KAAKC,MAAMqO,KAAKvG,WAAYvC,IAC/CsjB,EAAWlb,KACT9M,EAAAC,EAAAC,cAAA,UAAQC,MAAOuE,EAAGhF,IAAKgF,GACpB+hC,EAAY3kC,QAAQ,MAAOmB,EAAcyB,EAAGzF,MASnD,IAHA,IAAMgpB,EAAkB,GAClBye,EAAmBpjC,GAAU,mCAAoCrE,GACjEunC,EAAetnC,KAAKC,MAAMqO,KAAKtG,gBAAgBhI,KAAKY,MAAMwF,IAAM,GAC7DZ,EAAI,EAAGA,GAAK8hC,EAAc9hC,IACjCujB,EAAgBnb,KACd9M,EAAAC,EAAAC,cAAA,UAAQC,MAAOuE,EAAGhF,IAAKgF,GACpBgiC,EAAiB5kC,QAAQ,MAAOmB,EAAcyB,EAAGzF,MAYxD,IANA,IAAMoqC,EAAenqC,KAAKC,MAAMgN,QAAQC,OAAO,SAACsD,GAC9C,OAAOA,EAAEpK,MAAQmZ,EAAK3e,MAAMwF,KAAOoK,EAAE9G,WAAa6V,EAAK3e,MAAM8I,WAIzD0gC,EAAyB,GACtB5kC,EAAI,EAAGA,EAAI2kC,EAAa1kC,OAAQD,IAAK,CAC5C,IAAMtB,EAAQimC,EAAa3kC,IACiB,IAAxC4kC,EAAalf,QAAQhnB,EAAM9B,SAC7BgoC,EAAax8B,KAAK1J,EAAM9B,QAG5BgoC,EAAahsB,OAIb,IADA,IAAMisB,EAAe,GA3CdC,EAAA,SA4CE9kC,GACP,IAAMpD,EAASgoC,EAAa5kC,GACtBg5B,EAAkB2L,EAAaj9B,OAAO,SAACsD,GAAD,OAAOA,EAAEpO,SAAWA,IAC1DiC,EAAUkb,EAAK3e,MAAMwF,IAAM,IAAMmZ,EAAK3e,MAAM8I,SAAW,IAAMtH,EACnEioC,EAAaz8B,KAAK9M,EAAAC,EAAAC,cAACupC,GAAD,CAAgB/pC,IAAK6D,EAAIjC,OAAQA,EAAQo8B,gBAAiBA,MAJrEh5B,EAAI,EAAGA,EAAI4kC,EAAa3kC,OAAQD,IAAK8kC,EAArC9kC,GA0BT,OACE1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,CAAMqU,MAAO,CAAEzC,aAAc,SAC3B7R,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,CAAWyD,MAAO,CAAEyB,QAAS,SAC3B/V,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEE,MAAOjB,KAAKY,MAAMwF,IAAIyjB,WACtBzoB,GAAG,SACHC,SAAUrB,KAAK8pC,UACf10B,MAAO80B,EACP3oC,UAAU,iBAETunB,GAGHhoB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEE,MAAOjB,KAAKY,MAAM8I,SAASmgB,WAC3BzoB,GAAG,SACHC,SAAUrB,KAAK+pC,eACf30B,MAAO80B,EACP3oC,UAAU,iBAETwnB,GAGHjoB,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CAAQgR,QAAQ,OAAOD,QAAS9R,KAAKgqC,aACnClpC,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,4BAA4BmN,eAAe,kBAKrE64B,UAzIqB3pC,IAAMc,WAuJrBb,eARS,SAACC,GACvB,MAAO,CACL0N,KAAM1N,EAAM0N,KACZrB,QAASrM,EAAM2O,aAAatC,QAC5BlN,SAAUa,EAAMb,WAILY,CAAyBkpC,ICtKzBW,oLARX,OACE1pC,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO7X,aACrB6C,EAAAC,EAAAC,cAACypC,GAAD,cAJ2B/pC,IAAMc,gCCwCnCw/B,GAAkB,SAAC78B,EAAUlE,GACjC,OAAQkE,GACN,IAAK,IACH,OAAOlE,EAAMiI,mBACf,IAAK,IACH,OAAOjI,EAAMkI,qBACf,IAAK,KACH,OAAOlI,EAAMmI,kBACf,QAEE,OAAOnI,EAAMiI,qBAIbwiC,8MACJC,eAAiB,SAACzmC,EAAc27B,EAAoBr/B,GAElD,IAAK8M,GAAepJ,GAAQ,OAAO,KAInC,IAAMs2B,EAAUztB,GAAqB7I,EAAO27B,EAASn+B,OACrD,GAAgB,IAAZ84B,EAAe,OAAO,KAE1B,IAAM7xB,EAAOoI,EAAK9Q,MAAM0I,KAClB5I,EAAWgR,EAAK9Q,MAAMF,SAGtB6qC,EAAQ1mC,EAAMiG,MAChB/F,GAAU,uBAAwBrE,GAClCkE,EAAoBzD,EAAM,EAAG0D,EAAO6M,EAAK9Q,MAAMF,UAE7C8D,EAAiBk5B,GAAUhsB,EAAK9Q,MAAMoI,QAASnE,EAAO27B,EAASn+B,MAAO84B,EAAS7xB,GAEjFkiC,EAAY,GACA,IAAZrQ,GAA4B,IAAX32B,EACnBgnC,EAAYzmC,GAAU,+BAAgCrE,GACjC,IAAZy6B,GAA4B,IAAX32B,IAC1BgnC,EAAYjnC,EAAcC,EAAQ9D,IAGpC,IAAMmJ,EAAU83B,GAAgB98B,EAAMC,IAAK4M,EAAK9Q,OAC1CgF,EAAQ0D,EACVM,GAAkBC,EAAShF,EAAMiF,aAAcpJ,GAC/CyJ,GAAqBN,EAAShF,EAAMiF,cAClCk7B,EAAK17B,EAAOzE,EAAMiF,aAAe9G,EAAO6B,EAAMiF,cAE9CoB,EAAUuB,GAAgB5H,GAC1B4mC,EAAQniC,EAAO4B,EAAUlI,EAAOkI,GAEhCC,EAAUyB,GAAgB/H,GAC1B6mC,EAAQpiC,EAAO6B,EAAUnI,EAAOmI,GAEhCC,EAAa0B,GAAmBjI,GAChC8mC,EAAWriC,EAAO8B,EAAapI,EAAOoI,GAExCwgC,EAAiB,GAGjBA,EAFAtiC,GACoC,IAAlCoI,EAAK9Q,MAAM2I,mBACIxE,GAAU,gCAAiCrE,GAE3CqE,GAAU,4BAA6BrE,IAGpB,IAAlCgR,EAAK9Q,MAAM2I,mBACIxE,GAAU,gCAAiCrE,GAE3CqE,GAAU,6BAA8BrE,GAI7D,IAAImrC,EAA8B,KAOlC,OANI1Q,EAAU,IACZ0Q,EAAeD,EACZroC,QAAQ,OAAQC,EAAc23B,EAASz6B,IACvC6C,QAAQ,QAASC,EAAcR,EAAOm4B,GAAUz6B,KAInDe,EAAAC,EAAAC,cAAA,MAAIR,IAAKA,GACPM,EAAAC,EAAAC,cAAA,UAAK4pC,GACL9pC,EAAAC,EAAAC,cAAA,UAAKkD,EAAMuD,MACX3G,EAAAC,EAAAC,cAAA,UAA4B,IAAvBkD,EAAMiF,aAAqB,KAAOlE,GACvCnE,EAAAC,EAAAC,cAAA,UAA4B,IAAvBkD,EAAMiF,aAAqB,KAAOtG,EAAcwhC,EAAItkC,IACzDe,EAAAC,EAAAC,cAAA,UAAmB,IAAdkD,EAAM0F,IAAY,KAAO1F,EAAM0F,KACpC9I,EAAAC,EAAAC,cAAA,UAAiB,IAAZuJ,EAAgB,GAAK1H,EAAcioC,EAAO/qC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAiB,IAAZwJ,EAAgB,GAAK3H,EAAckoC,EAAOhrC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAoB,IAAfyJ,EAAmB,GAAK5H,EAAcmoC,EAAUjrC,IACrDe,EAAAC,EAAAC,cAAA,UAAKkqC,GACLpqC,EAAAC,EAAAC,cAAA,UAAK6pC,OAKXM,cAAgB,SAAChnC,EAAUpE,GACzB,OAAQoE,GACN,IAAK,IACH,OAAOC,GAAU,eAAgBrE,GACnC,IAAK,IACH,OAAOqE,GAAU,iBAAkBrE,GACrC,IAAK,KACH,OAAOqE,GAAU,cAAerE,GAClC,QAEE,MAAO,OAIbqrC,sBAAwB,SAACxJ,EAA0BphC,GAOjD,IAPqF,IAC7Eq/B,EAA6B+B,EAA7B/B,SAAUjB,EAAmBgD,EAAnBhD,eACZ7+B,EAAWgR,EAAK9Q,MAAMF,SACtBoE,EAAc4M,EAAKo6B,cAActL,EAAS17B,IAAKpE,GAG/CirB,EAAO,GACJxlB,EAAI,EAAGA,EAAIo5B,EAAen5B,OAAQD,IAAK,CAC9C,IAAMkmB,EAAM3a,EAAK45B,eAAe/L,EAAep5B,GAAIq6B,EAAUr6B,GACjD,OAARkmB,GACFV,EAAKpd,KAAK8d,GAKd,GAAoB,IAAhBV,EAAKvlB,OACP,OAAO,KAGT,IAAI4lC,EAAiB/mC,GAAkBu7B,EAASt7B,UAAWxE,IACvDgR,EAAK9Q,MAAMsI,wBAAkD,YAAvBs3B,EAASt7B,WAAkD,UAAvBs7B,EAASt7B,YACrF8mC,EAASjnC,GAAU,iCAAkCrE,IAGvD,IAAMurC,EAAQv6B,EAAK9Q,MAAM0I,KACrBvE,GAAU,2BAA4BrE,GACtCqE,GAAU,4BAA6BrE,GAGvCkF,EAAQD,GAAuB66B,EAASyB,eAAgBvhC,GAC5B,KAA5B8/B,EAASyB,gBAA0BvwB,EAAK9Q,MAAM0I,OAChD1D,EAAQmE,GAAey2B,EAASyB,iBAGlC,IACM3jB,EADWvZ,GAAU,4BAA6BrE,GAErD6C,QAAQ,QAASuB,GACjBvB,QAAQ,gBAAiBqC,GACzBrC,QAAQ,gBAA6C,KAA5Bi9B,EAASyB,eAAwBgK,EAAQ,IAClE1oC,QAAQ,cAAeyoC,GACvBzoC,QAAQ,aAAci9B,EAASliB,UAC/B/a,QAAQ,UAAW8B,GAAcm7B,EAASn+B,MAAO3B,IAEpD,OACEe,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,CAAMP,IAAKA,EAAK4U,MAAO,CAAEm2B,UAAW,SAClCzqC,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAKqQ,OAAN,KAAcuM,GACd7c,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,KACE7Q,EAAAC,EAAAC,cAACsgB,GAAAvgB,EAAD,CAAO0gB,OAAK,EAACD,KAAK,MAChB1gB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,uBAAwBrE,IACvCe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,wBAAyBrE,IACxCe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,6BAA8BrE,IAC7Ce,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,4BAA6BrE,IAC5Ce,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,qBAAsBrE,IACrCe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,mCAAoCrE,IACnDe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,mCAAoCrE,IACnDe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,sCAAuCrE,IACtDe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,4BAA6BrE,IAC5Ce,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,6BAA8BrE,MAGjDe,EAAAC,EAAAC,cAAA,aAAQgqB,+EAiBhB,IATA,IAAM4W,EAAUqB,GACdjjC,KAAKC,MAAMgN,QACXjN,KAAKC,MAAMiI,mBACXlI,KAAKC,MAAMkI,qBACXnI,KAAKC,MAAMmI,kBACXpI,KAAKC,MAAMsI,wBAGPijC,EAAgB,GACbhmC,EAAI,EAAGA,EAAIo8B,EAAQn8B,OAAQD,IAAK,CACvC,IAAMimC,EAAQzrC,KAAKorC,sBAAsBxJ,EAAQp8B,GAAIA,GACvC,OAAVimC,GACFD,EAAc59B,KAAK69B,GAIvB,OAAO3qC,EAAAC,EAAAC,cAAA,WAAMwqC,UApLQ9qC,IAAMc,WA8MhBb,eAtBS,SAACC,EAAoB4d,GAC3C,IAAMpY,EAAMzD,OAAO6b,EAASpY,KACxB6G,EAAUrM,EAAM2O,aAAatC,QAKjC,OAJI7G,EAAM,IACR6G,EAAUA,EAAQC,OAAO,SAACsD,GAAD,OAAOA,EAAEpK,MAAQA,KAGrC,CACLuC,KAAM/H,EAAM0N,KAAK3F,KACjBC,mBAAoBhI,EAAM0N,KAAK1F,mBAC/B8I,SAAU9Q,EAAM0N,KAAK7G,KACrBY,QAASzH,EAAM0N,KAAKjG,QACpBE,uBAAwB3H,EAAM0N,KAAK/F,uBACnCR,WAAYnH,EAAM0N,KAAKvG,WACvBG,mBAAoBtH,EAAM0N,KAAKpG,mBAC/BC,qBAAsBvH,EAAM0N,KAAKnG,qBACjCC,kBAAmBxH,EAAM0N,KAAKlG,kBAC9BrI,SAAUa,EAAMb,SAChBkN,QAASA,IAIEtM,CAAyB+pC,IC7OlC9K,GAAgB,SAACC,GACrB,OAAOtrB,KAAKO,UAAU+qB,IAElBC,GAAgB,SAACt/B,GACrB,OAAO+T,KAAKC,MAAMhU,IAKdkrC,GAA+B,SACnCz+B,EACA4yB,EACAx3B,EACAC,EACAK,EACAmC,GAIA,IADA,IAAM6gC,EAAW,IAAI/U,IACZpxB,EAAI,EAAGA,EAAIyH,EAAQxH,OAAQD,IAClCmmC,EAAShK,IAAI10B,EAAQzH,GAAIA,GAM3B,IADA,IAAMomC,EAAiB,IAAIxuB,MAAMnQ,EAAQxH,QAChCD,EAAI,EAAGA,EAAIyH,EAAQxH,OAAQD,IAAK,CACvC,IAAMtB,EAAQ+I,EAAQzH,GAChBg1B,EAAUztB,GAAqB7I,EAAO27B,EAASn+B,OAErDkqC,EAAepmC,GAAKq4B,GAAqBv1B,EAAiBwC,EAAUzC,EAASnE,EAAO27B,EAASn+B,MAAO84B,EAAS7xB,GAI/G,IAAMu3B,EAAgBjzB,EAAQ0B,QA6B9B,OA1BAuxB,EAAc9hB,KAAK,SAACrd,EAAGsd,GACrB,IAAMwtB,EAASF,EAAS3U,IAAIj2B,GACtB+qC,EAASH,EAAS3U,IAAI3Y,GAG5B,QAAerb,IAAX6oC,QAAmC7oC,IAAX8oC,EAAsB,OAAO,EAIzD,GAAI/qC,EAAEoJ,QAAUkU,EAAElU,MAAO,CACvB,GAAIpJ,EAAEoJ,MAAO,OAAO,EACpB,GAAIkU,EAAElU,MAAO,OAAQ,EAIvB,IAAM4hC,EAAUH,EAAeC,GACzBG,EAAUJ,EAAeE,GAC/B,OAAIC,IAAYC,EAAgBA,EAAUD,EAGtChrC,EAAEoI,eAAiBkV,EAAElV,aAAqBpI,EAAEoI,aAAekV,EAAElV,aAG1D,IAGF+2B,GAIHS,GAAoB,SAACC,GACzB,MAAO,CAAC,MAAO,KAAM,KAAM,KAAM,IAAK,IAAK,KAAK1V,QAAQ0V,IAIpDC,GAAwB,SAACC,GAE7B,MAAO,CAAC,OAAQ,UAAW,QAAS,aAAc,YAAa,aAAa5V,QAAQ4V,IAIhFC,GAAkB,SAAC58B,GACvB,OAAQA,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,IAAK,KACH,OAAO,EACT,QAEE,OAAO,IAgCA8nC,GAAiB,SAC5Bh/B,EACA5E,EACAC,EACAC,EACAI,EACAmC,GAMA,IADA,IAAMs2B,EAAc,IAAIxK,IACfpxB,EAAI,EAAGA,EAAIyH,EAAQxH,OAAQD,IAAK,CACvC,IAAMgL,EAAIvD,EAAQzH,GAGZrB,EAAMqM,EAAErM,IACVI,EAAuBiM,EAAEjM,UAGzBgE,GAAwC,YAAdhE,IAC5BA,EAAY,SAId,IAAK,IAAIk9B,EAAQ,EAAGA,EAAQjxB,EAAE1G,OAAOrE,OAAQg8B,IAAS,CACpD,IAAM//B,EAAQ8O,EAAE1G,OAAO23B,GAEjBjhC,EAAMo/B,GADK,CAAEz7B,MAAKzC,QAAO6C,cAGzBm9B,EAAaN,EAAYpK,IAAIx2B,QACpBwC,IAAf0+B,EAA2BN,EAAYO,IAAInhC,EAAK,CAACgQ,IAAMkxB,EAAW9zB,KAAK4C,IAK3E,IAAMoxB,EAAU,GA7BiBC,GAAA,EAAAC,GAAA,EAAAC,OAAA/+B,EAAA,IA8BjC,QAAAg/B,EAAAC,EAAgCb,EAAhCc,OAAAC,cAAAN,GAAAG,EAAAC,EAAA1J,QAAA6J,MAAAP,GAAA,EAA6C,KAAA/J,EAAAkK,EAAA/gC,MAAAof,EAAAlV,OAAAC,GAAA,EAAAD,CAAA2sB,EAAA,GAAjCt3B,EAAiC6f,EAAA,GAA5BqhB,EAA4BrhB,EAAA,GACrCwf,EAAWC,GAAct/B,GACzBo+B,EAAiB8M,GAA6BhK,EAAY7B,EAAUx3B,EAASC,EAAiBK,EAAMmC,GAC1G82B,EAAQh0B,KAAK,CAAEiyB,WAAUjB,oBAjCM,MAAAlqB,GAAAotB,GAAA,EAAAC,EAAArtB,EAAA,YAAAmtB,GAAA,MAAAI,EAAAI,QAAAJ,EAAAI,SAAA,WAAAP,EAAA,MAAAC,GAqCjC,OAtEuC,SAACH,GACxCA,EAAQxjB,KAAK,SAACrd,EAAGsd,GACf,IAAMikB,EAAOvhC,EAAE8+B,SACT0C,EAAOlkB,EAAEwhB,SAGT2C,EAAOzB,GAAgBuB,EAAKn+B,KAC5Bs+B,EAAO1B,GAAgBwB,EAAKp+B,KAClC,GAAIq+B,IAASC,EAAM,OAAOD,EAAOC,EAGjC,IAAMC,EAAS/B,GAAkB2B,EAAK5gC,OAChCihC,EAAShC,GAAkB4B,EAAK7gC,OACtC,GAAIghC,IAAWC,EAAQ,OAAOD,EAASC,EAGvC,IAAMC,EAAa/B,GAAsByB,EAAK/9B,WACxCs+B,EAAahC,GAAsB0B,EAAKh+B,WAC9C,OAAIq+B,IAAeC,EAAmBD,EAAaC,EAE5C,IAiDTqJ,CAA0BtK,GACnBA,GC7IHZ,GAAkB,SAAC78B,EAAUlE,GACjC,OAAQkE,GACN,IAAK,IACH,OAAOlE,EAAMiI,mBACf,IAAK,IACH,OAAOjI,EAAMkI,qBACf,IAAK,KACH,OAAOlI,EAAMmI,kBACf,QAEE,OAAOnI,EAAMiI,qBAIbikC,8MACJxB,eAAiB,SAACzmC,EAAc27B,EAA0Br/B,GAExD,IAAK8M,GAAepJ,GAAQ,OAAO,KAInC,IAAMs2B,EAAUztB,GAAqB7I,EAAO27B,EAASn+B,OACrD,GAAgB,IAAZ84B,EAAe,OAAO,KAE1B,IAAM7xB,EAAOoI,EAAK9Q,MAAM0I,KAClB5I,EAAWgR,EAAK9Q,MAAMF,SAGtBqsC,EAAOloC,EAAMiG,MACf/F,GAAU,uBAAwBrE,GAClCkE,EAAoBzD,EAAM,EAAG0D,EAAOnE,GAElC8D,EAAiBg6B,GACrB9sB,EAAK9Q,MAAMqI,gBACXyI,EAAK9Q,MAAM6K,SACXiG,EAAK9Q,MAAMoI,QACXnE,EACA27B,EAASn+B,MACT84B,EACA7xB,GAGEkiC,EAAY,GACA,IAAZrQ,GAA4B,IAAX32B,EACnBgnC,EAAYzmC,GAAU,+BAAgCrE,GACjC,IAAZy6B,GAA4B,IAAX32B,IAC1BgnC,EAAYjnC,EAAcC,EAAQ9D,IAGpC,IAAMssC,EAAgBnoC,EAAM+D,UAAUxC,OAAS,EAAIvB,EAAM+D,UAAU,GAAK,GAClEs5B,EAAer9B,EAAM+D,UAAUxC,OAE/ByD,EAAU83B,GAAgB98B,EAAMC,IAAK4M,EAAK9Q,OAC1CgF,EAAQ0D,EACVM,GAAkBC,EAAShF,EAAMiF,aAAcpJ,GAC/CyJ,GAAqBN,EAAShF,EAAMiF,cAClCk7B,EAAK17B,EAAOzE,EAAMiF,aAAe9G,EAAO6B,EAAMiF,cAE9CoB,EAAUuB,GAAgB5H,GAC1B4mC,EAAQniC,EAAO4B,EAAUlI,EAAOkI,GAEhCC,EAAUyB,GAAgB/H,GAC1B6mC,EAAQpiC,EAAO6B,EAAUnI,EAAOmI,GAEhCC,EAAa0B,GAAmBjI,GAChC8mC,EAAWriC,EAAO8B,EAAapI,EAAOoI,GAEtC6hC,EAAQ3jC,EAAO6xB,EAAUn4B,EAAOm4B,GAEtC,OACE15B,EAAAC,EAAAC,cAAA,MAAIR,IAAKA,GACPM,EAAAC,EAAAC,cAAA,UAAKorC,GACLtrC,EAAAC,EAAAC,cAAA,UAAKkD,EAAMuD,MACX3G,EAAAC,EAAAC,cAAA,UAAK8D,GAAYZ,EAAMC,IAAKpE,IAC5Be,EAAAC,EAAAC,cAAA,UACGqrC,EADH,IACmB9K,EAAe,EAAI,MAAQA,EAAe,GAAK,IAAM,IAExEzgC,EAAAC,EAAAC,cAAA,UAAKsD,GAAkBJ,EAAMK,UAAWxE,IACxCe,EAAAC,EAAAC,cAAA,UAA4B,IAAvBkD,EAAMiF,aAAqB,KAAOlE,GACvCnE,EAAAC,EAAAC,cAAA,UAA4B,IAAvBkD,EAAMiF,aAAqB,KAAOtG,EAAcwhC,EAAItkC,IACzDe,EAAAC,EAAAC,cAAA,UAAmB,IAAdkD,EAAM0F,IAAY,KAAO7F,EAAcG,EAAM0F,IAAK7J,IACvDe,EAAAC,EAAAC,cAAA,UAAiB,IAAZuJ,EAAgB,GAAK1H,EAAcioC,EAAO/qC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAiB,IAAZwJ,EAAgB,GAAK3H,EAAckoC,EAAOhrC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAoB,IAAfyJ,EAAmB,GAAK5H,EAAcmoC,EAAUjrC,IACrDe,EAAAC,EAAAC,cAAA,UAAiB,IAAZw5B,EAAgB,GAAK33B,EAAcypC,EAAOvsC,IAC/Ce,EAAAC,EAAAC,cAAA,UAAK6pC,OAKXM,cAAgB,SAAChnC,EAAUpE,GACzB,OAAQoE,GACN,IAAK,IACH,OAAOC,GAAU,eAAgBrE,GACnC,IAAK,IACH,OAAOqE,GAAU,iBAAkBrE,GACrC,IAAK,KACH,OAAOqE,GAAU,cAAerE,GAClC,QAEE,MAAO,OAIbqrC,sBAAwB,SAACxJ,EAAgCphC,GAOvD,IAP2F,IACnFq/B,EAA6B+B,EAA7B/B,SAAUjB,EAAmBgD,EAAnBhD,eACZ7+B,EAAWgR,EAAK9Q,MAAMF,SACtBoE,EAAc4M,EAAKo6B,cAActL,EAAS17B,IAAKpE,GAG/CirB,EAAO,GACJxlB,EAAI,EAAGA,EAAIo5B,EAAen5B,OAAQD,IAAK,CAC9C,IAAMkmB,EAAM3a,EAAK45B,eAAe/L,EAAep5B,GAAIq6B,EAAUr6B,GACjD,OAARkmB,GACFV,EAAKpd,KAAK8d,GAKd,GAAoB,IAAhBV,EAAKvlB,OACP,OAAO,KAGT,IAAI4lC,EAAiB/mC,GAAkBu7B,EAASt7B,UAAWxE,IACvDgR,EAAK9Q,MAAMsI,wBAAkD,YAAvBs3B,EAASt7B,WAAkD,UAAvBs7B,EAASt7B,YACrF8mC,EAASjnC,GAAU,iCAAkCrE,IAGvD,IACMwsC,EADWnoC,GAAU,4BAA6BrE,GAErD6C,QAAQ,QAASuB,GACjBvB,QAAQ,cAAeyoC,GACvBzoC,QAAQ,UAAW8B,GAAcm7B,EAASn+B,MAAO3B,IAEpD,OACEe,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,CAAMP,IAAKA,EAAK4U,MAAO,CAAEm2B,UAAW,SAClCzqC,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAKqQ,OAAN,KAAcm7B,GACdzrC,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,KACE7Q,EAAAC,EAAAC,cAACsgB,GAAAvgB,EAAD,CAAOwgB,SAAO,EAACE,OAAK,EAACD,KAAK,MACxB1gB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,sBAAuBrE,IACtCe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,wBAAyBrE,IACxCe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,qBAAsBrE,IACrCe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,0BAA2BrE,IAC1Ce,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,2BAA4BrE,IAC3Ce,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,6BAA8BrE,IAC7Ce,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,4BAA6BrE,IAC5Ce,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,qBAAsBrE,IACrCe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,mCAAoCrE,IACnDe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,mCAAoCrE,IACnDe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,sCAAuCrE,IACtDe,EAAAC,EAAAC,cAAA,UAAKoD,GAAU,4BAA6BrE,IAC5Ce,EAAAC,EAAAC,cAAA,UACkC,SAA/B+P,EAAK9Q,MAAMqI,gBACRlE,GAAU,6BAA8BrE,GACxCqE,GAAU,4BAA6BrE,MAIjDe,EAAAC,EAAAC,cAAA,aAAQgqB,+EAOT,IAAAzL,EAAAvf,KACHiN,EAAUjN,KAAKC,MAAMgN,QAGY,eAAjCjN,KAAKC,MAAMusC,oBACbv/B,EAAUA,EAAQC,OAAO,SAACsD,GAExB,OAAQ+O,EAAKtf,MAAMusC,mBACjB,IAAK,aACH,MACF,IAAK,oBAGH,GAAIh8B,EAAE5G,KAAO,GACX,OAAO,EAET,MACF,IAAK,oBAGH,GAAI4G,EAAE5G,KAAO,GACX,OAAO,EAET,MACF,QACiB2V,EAAKtf,MAAMusC,kBAK9B,OAAQjtB,EAAKtf,MAAMqI,iBACjB,IAAK,OACH,OAAO,EACT,IAAK,kBACH,OAAkC,IAA3B8yB,GAAgB5qB,EAAE5G,KAC3B,QAEE,OADe2V,EAAKtf,MAAMqI,iBACnB,MAef,IAVA,IAAMs5B,EAAUqK,GACdh/B,EACAjN,KAAKC,MAAMoI,QACXrI,KAAKC,MAAMqI,gBACXtI,KAAKC,MAAMsI,uBACXvI,KAAKC,MAAM0I,KACX3I,KAAKC,MAAM6K,UAGP0gC,EAAgB,GACbhmC,EAAI,EAAGA,EAAIo8B,EAAQn8B,OAAQD,IAAK,CACvC,IAAMimC,EAAQzrC,KAAKorC,sBAAsBxJ,EAAQp8B,GAAIA,GACvC,OAAVimC,GACFD,EAAc59B,KAAK69B,GAIvB,OAAO3qC,EAAAC,EAAAC,cAAA,WAAMwqC,UApNM9qC,IAAMc,WA8Odb,eAtBS,SAACC,EAAoB4d,GAC3C,IAAMpY,EAAMzD,OAAO6b,EAASpY,KACxB6G,EAAUrM,EAAM2O,aAAatC,QAKjC,OAJI7G,EAAM,IACR6G,EAAUA,EAAQC,OAAO,SAACsD,GAAD,OAAOA,EAAEpK,MAAQA,KAGrC,CACLuC,KAAM/H,EAAM0N,KAAK3F,KACjB+I,SAAU9Q,EAAM0N,KAAK7G,KACrBqD,SAAUlK,EAAM0N,KAAKzG,KACrBQ,QAASzH,EAAM0N,KAAKjG,QACpBE,uBAAwB3H,EAAM0N,KAAK/F,uBACnCR,WAAYnH,EAAM0N,KAAKvG,WACvBG,mBAAoBtH,EAAM0N,KAAKpG,mBAC/BC,qBAAsBvH,EAAM0N,KAAKnG,qBACjCC,kBAAmBxH,EAAM0N,KAAKlG,kBAC9BrI,SAAUa,EAAMb,SAChBkN,QAASA,IAIEtM,CAAyBwrC,IC/OlCM,GAAgB,SACpBtgB,EACA0T,EACAl3B,EACAmC,EACAzC,EACAnE,EACA8K,GAEA,IAOe09B,EAPTC,EAAehkC,EAAO,KAAO,MAC7BikC,EAAoB7/B,GAAqB7I,EAAO27B,EAASn+B,OAGzDoB,EAAS,SAACR,GACd,OAAOO,EAAc8F,EAAOrG,EAAKD,EAAOC,KAOpCopB,EAAqBtO,MAAM+O,EAAIpB,WAAWtlB,QAAQ4qB,KAAK,IA0B7D,GAxBK/iB,GAAepJ,GAETA,EAAMiG,MACfuhB,EAAIS,EAAInd,MAAM,UAAY,IAE1B0c,EAAIS,EAAInd,MAAM,UAAkC,IAAtB49B,EAA0B,KAAOviB,GAAUrb,EAAQ,GAJ7E0c,EAAIS,EAAInd,MAAM,UAAY,KAO5B0c,EAAIS,EAAInd,MAAM,SAAWqb,GAAUnmB,EAAMuD,MACzCikB,EAAIS,EAAInd,MAAM,cAAgBqb,GAAUnmB,EAAM4jB,WAC9C4D,EAAIS,EAAInd,MAAM,QAAUqb,GAAUnmB,EAAMC,KACxCunB,EAAIS,EAAInd,MAAM,cAAgBwb,GAAQtmB,EAAMyF,WAC5C+hB,EAAIS,EAAInd,MAAM,QAAUqb,GAAUxf,GAAO3G,EAAO4G,IAChD4gB,EAAIS,EAAInd,MAAM,YAAcqb,GAAUnmB,EAAMwD,SAC5CgkB,EAAIS,EAAInd,MAAM,UAAYqb,GAAUnmB,EAAMtD,OAC1C8qB,EAAIS,EAAInd,MAAM,cAAgBqb,GA1DH,SAACyW,GAC5B,OAAQA,GACN,IAAK,OAEL,IAAK,UACH,MAAO,MACT,IAAK,QACH,MAAO,QACT,IAAK,aACH,MAAO,aACT,IAAK,YACH,MAAO,YACT,IAAK,YACH,MAAO,YACT,QAEE,MAAO,OA0C6B+L,CAAqB3oC,EAAMK,YACnEmnB,EAAIS,EAAInd,MAAM,aAAeqb,GAAUwV,EAASliB,UAChD+N,EAAIS,EAAInd,MAAM,aAAe29B,IAAStiB,GAAUvnB,EAAOoB,EAAMiF,eAC7DuiB,EAAIS,EAAInd,MAAM,cAAgB29B,IAAStiB,IAzBxBqiB,EAyBwC7M,EAASyB,eAxBvD34B,EAAO+jC,EAAMtjC,GAAesjC,KAyBrChhB,EAAIS,EAAInd,MAAM,QAAU29B,IAAStiB,GAAUvnB,EAAO8pC,IAClDlhB,EAAIS,EAAInd,MAAM,UAAYqb,GAAUwV,EAASn+B,OAC7CgqB,EAAIS,EAAInd,MAAM,SAAWqb,GAAUnmB,EAAMgG,MAGrC21B,EAASn+B,MAAMgL,SAAS,KAAM,CAChCgf,EAAIS,EAAInd,MAAM,aAAe29B,IAAStiB,GAAUvnB,EAAO6J,GAAgBzI,KACvE,IAAK,IAAIsB,EAAI,EAAGA,E7E7GQ,E6E6GUA,IAAK,CACrC,IAAMuK,EAAQ,SAAWvK,EAAI,GAAKmnC,EAClCjhB,EAAIS,EAAInd,MAAMe,IAAUsa,GAAUvnB,EAAOoB,EAAMqG,QAAQ/E,GAAKtB,EAAMwG,YAAYlF,MAKlF,GAAIq6B,EAASn+B,MAAMgL,SAAS,KAAM,CAChCgf,EAAIS,EAAInd,MAAM,aAAe29B,IAAStiB,GAAUvnB,EAAO8J,GAAgB1I,KACvE,IAAK,IAAIsB,EAAI,EAAGA,E7EtHQ,E6EsHUA,IAAK,CACrC,IAAMuK,EAAQ,SAAWvK,EAAI,GAAKmnC,EAClCjhB,EAAIS,EAAInd,MAAMe,IAAUsa,GAAUvnB,EAAOoB,EAAMsG,QAAQhF,GAAKtB,EAAMyG,YAAYnF,MAKlF,GAAIq6B,EAASn+B,MAAMgL,SAAS,KAAM,CAChCgf,EAAIS,EAAInd,MAAM,gBAAkB29B,IAAStiB,GAAUvnB,EAAO+J,GAAmB3I,KAC7E,IAAK,IAAIsB,EAAI,EAAGA,E7E/HQ,E6E+HUA,IAAK,CACrC,IAAMuK,EAAQ,YAAcvK,EAAI,GAAKmnC,EACrCjhB,EAAIS,EAAInd,MAAMe,IAAUsa,GAAUvnB,EAAOoB,EAAMuG,WAAWjF,GAAKtB,EAAM0G,eAAepF,MAKxF,IAAM3B,EAASk5B,GAAU10B,EAASnE,EAAO27B,EAASn+B,MAAOkrC,EAAmBjkC,GAC5E+iB,EAAIS,EAAInd,MAAM,WAAaqb,GAAqB,IAAXxmB,EAAe,GAAKD,EAAcC,EAAQ,OAE/EsoB,EAAInB,KAAKpd,KAAK8d,IA0DHohB,GAAiB,SAAClsC,GAC7B,IAAMmsC,EApLY,SAACz+B,GACnB,IAAM6d,EAAM,IAAIrB,GAChBqB,EAAIpB,WAAa,CAAC,aAAc,OAAQ,cAAe,YAAa,WAAY,WAAY,WAE5F,IAAMW,EAAqB,CACzBrB,GAAU/b,EAAK1G,YACf4iB,GAAQlc,EAAKzG,MACbwiB,GAAU/b,EAAK5G,SACf2iB,GAAU/b,EAAK1N,OACfypB,GAAU/b,EAAK3G,MACf0iB,GAAU/b,EAAK7G,MACf4iB,GAAU/b,EAAKjG,UAUjB,OARA8jB,EAAInB,KAAO,CAACU,IAGwB,IAAhCpd,EAAK/F,yBACP4jB,EAAIpB,WAAWnd,KAAK,WACpBue,EAAInB,KAAK,GAAGpd,KAAK,uBAGZue,EA+Jc6gB,CAAYpsC,EAAM0N,MAEjC2+B,EA1De,SAACrsC,GAOtB,IANA,IAAM+H,EAAgB/H,EAAM0N,KAAK3F,KAC3BgkC,EAAehkC,EAAO,KAAO,MAE7BwjB,EAAM,IAAIrB,GAEVoiB,EAAkB,GACf1nC,EAAI,EAAGA,E7EnJU,E6EmJQA,IAChC0nC,EAAgBt/B,KAAK,SAAWpI,EAAI,GAAKmnC,GAE3CO,EAAgBt/B,KAAK,aAAe++B,GAGpC,IADA,IAAMQ,EAAkB,GACf3nC,EAAI,EAAGA,E7EzJU,E6EyJQA,IAChC2nC,EAAgBv/B,KAAK,SAAWpI,EAAI,GAAKmnC,GAE3CQ,EAAgBv/B,KAAK,aAAe++B,GAGpC,IADA,IAAMS,EAAqB,GAClB5nC,EAAI,EAAGA,E7E/JU,E6E+JQA,IAChC4nC,EAAmBx/B,KAAK,YAAcpI,EAAI,GAAKmnC,GAEjDS,EAAmBx/B,KAAK,gBAAkB++B,GAE1CxgB,EAAIpB,WAAa3N,MAAMgiB,UAAUl9B,OAC/B,CAAC,QAAS,OAAQ,YAAa,MAAO,YAAa,MAAO,UAAW,SACrE,CAAC,YAAa,WAAY,aAAeyqC,EAAM,cAAgBA,GAC/DO,EACAC,EACAC,EACA,CAAC,QAAUT,EAAM,SAAU,QAAS,SActC,IAXA,IAAM/K,EAAkCqB,GACtCriC,EAAM2O,aAAatC,QACnBrM,EAAM0N,KAAKpG,mBACXtH,EAAM0N,KAAKnG,qBACXvH,EAAM0N,KAAKlG,kBACXxH,EAAM0N,KAAK/F,wBAGP8kC,EAAYzsC,EAAM0N,KAAKzG,KACvBQ,EAAmBzH,EAAM0N,KAAKjG,QAE3B7C,EAAI,EAAGA,EAAIo8B,EAAQn8B,OAAQD,IAGlC,IAHuC,IAAA8nC,EACF1L,EAAQp8B,GAArCq6B,EAD+ByN,EAC/BzN,SAAUjB,EADqB0O,EACrB1O,eAETxT,EAAI,EAAGA,EAAIwT,EAAen5B,OAAQ2lB,IACzCqhB,GAActgB,EAAK0T,EAAUl3B,EAAM0kC,EAAWhlC,EAASu2B,EAAexT,GAAIA,GAI9E,OAAOe,EAMiBohB,CAAe3sC,GACvCqsC,EAAWzhB,qBAIX,MAAOgiB,iEAAsBT,EAAQljB,WAAa,KAAOojB,EAAWpjB,YCjKhE4jB,GAAa,SAACthB,EAAU0T,EAAoB37B,GAChD,IAAM0wB,EAAoBiL,EAASn+B,MAAMgL,SAAS,KAC5CmoB,EAAoBgL,EAASn+B,MAAMgL,SAAS,KAC5CghC,EAAiB7N,EAASn+B,MAAMgL,SAAS,KAGzCgf,EAAqBtO,MAAM+O,EAAIpB,WAAWtlB,QAAQ4qB,KAAK,IAE7D3E,EAAIS,EAAInd,MAAM,SAAWqb,GAAUnmB,EAAMuD,MACzCikB,EAAIS,EAAInd,MAAM,SAAWqb,GAAUnmB,EAAMgG,MACzCwhB,EAAIS,EAAInd,MAAM,QAAUqb,GAAUwV,EAASliB,UAC3C+N,EAAIS,EAAInd,MAAM,aAAeqb,GAAUxnB,EAAcqB,EAAMiF,eAC3DuiB,EAAIS,EAAInd,MAAM,eAAiBqb,GAAUwV,EAASyB,gBAClD5V,EAAIS,EAAInd,MAAM,QAAUqb,GAvBJ,SAACnmB,GACrB,QAAwBlB,IAApBkB,EAAMyF,WAA+C,KAApBzF,EAAMyF,UACzC,MAAO,GAFqC,IAAA6B,EAIJtH,EAAMyF,UAAUqB,MAAM,KAJlBS,EAAAN,OAAAC,GAAA,EAAAD,CAAAK,EAAA,GAIvCxF,EAJuCyF,EAAA,GAK9C,OAL8CA,EAAA,GAK/B,IAL+BA,EAAA,GAKnB,IAAMzF,EAkBC2nC,CAAczpC,IAChDwnB,EAAIS,EAAInd,MAAM,YAAcqb,GAAUxnB,EAAc+xB,EAAW1wB,EAAMqG,QAAQ,GAAKrG,EAAMwG,YAAY,GAAK,IACzGghB,EAAIS,EAAInd,MAAM,YAAcqb,GAAUxnB,EAAc+xB,EAAW1wB,EAAMqG,QAAQ,GAAKrG,EAAMwG,YAAY,GAAK,IACzGghB,EAAIS,EAAInd,MAAM,YAAcqb,GAAUxnB,EAAc+xB,EAAW1wB,EAAMqG,QAAQ,GAAKrG,EAAMwG,YAAY,GAAK,IACzGghB,EAAIS,EAAInd,MAAM,YAAcqb,GAAUxnB,EAAcgyB,EAAW3wB,EAAMsG,QAAQ,GAAKtG,EAAMyG,YAAY,GAAK,IACzG+gB,EAAIS,EAAInd,MAAM,YAAcqb,GAAUxnB,EAAcgyB,EAAW3wB,EAAMsG,QAAQ,GAAKtG,EAAMyG,YAAY,GAAK,IACzG+gB,EAAIS,EAAInd,MAAM,YAAcqb,GAAUxnB,EAAcgyB,EAAW3wB,EAAMsG,QAAQ,GAAKtG,EAAMyG,YAAY,GAAK,IACzG+gB,EAAIS,EAAInd,MAAM,eAAiBqb,GAAUxnB,EAAc6qC,EAAQxpC,EAAMuG,WAAW,GAAKvG,EAAM0G,eAAe,GAAK,IAC/G8gB,EAAIS,EAAInd,MAAM,eAAiBqb,GAAUxnB,EAAc6qC,EAAQxpC,EAAMuG,WAAW,GAAKvG,EAAM0G,eAAe,GAAK,IAC/G8gB,EAAIS,EAAInd,MAAM,eAAiBqb,GAAUxnB,EAAc6qC,EAAQxpC,EAAMuG,WAAW,GAAKvG,EAAM0G,eAAe,GAAK,IAC/G8gB,EAAIS,EAAInd,MAAM,UAAYqb,GA3DL,SAACuW,GACtB,OAAQA,GAEN,IAAK,MACH,MAAO,KACT,IAAK,KACH,MAAO,KACT,IAAK,IACH,MAAO,KACT,IAAK,IACH,MAAO,KACT,IAAK,IACH,MAAO,KAGT,IAAK,KACH,MAAO,KACT,IAAK,KACH,MAAO,KACT,QAEE,OAAOA,GAsCyBgN,CAAe/N,EAASn+B,QAC5DgqB,EAAIS,EAAInd,MAAM,UAAYqb,GAAUnmB,EAAMtD,OAC1C8qB,EAAIS,EAAInd,MAAM,aAAeqb,GAAUnmB,EAAM8F,UAG7CmiB,EAAInB,KAAKpd,KAAK8d,IAGHmiB,GAAmB,SAACjtC,GAC/B,IAAMurB,EAAM,IAAIrB,GAChBqB,EAAIpB,WAAa,CACf,OACA,OACA,MACA,WACA,aACA,MACA,UACA,UACA,UACA,UACA,UACA,UACA,aACA,aACA,aACA,QACA,QACA,WACA,aAWF,IARA,IAAM6W,EAAkCqB,GACtCriC,EAAM2O,aAAatC,QACnBrM,EAAM0N,KAAKpG,mBACXtH,EAAM0N,KAAKnG,qBACXvH,EAAM0N,KAAKlG,kBACXxH,EAAM0N,KAAK/F,wBAGJ/C,EAAI,EAAGA,EAAIo8B,EAAQn8B,OAAQD,IAGlC,IAHuC,IAAAsoC,EACFlM,EAAQp8B,GAArCq6B,EAD+BiO,EAC/BjO,SAAUjB,EADqBkP,EACrBlP,eAETxT,EAAI,EAAGA,EAAIwT,EAAen5B,OAAQ2lB,IACzCqiB,GAAWthB,EAAK0T,EAAUjB,EAAexT,IAI7C,OAAOe,EAAItC,iCCtFPkkB,GAAuB,SAAC9sC,GAC5B,IAAM+sC,EAAY/sC,EAClB,OAAQ+sC,GACN,IAAK,oBACL,IAAK,oBACL,IAAK,WACL,IAAK,SACH,OAAO,EACT,QAEE,MAAM,IAAI9tC,MAAJ,8CAAAgC,OAAwDjB,EAAxD,QAyBRgtC,GAAyB,EACzBC,GAA8B,EAE5BC,eACJ,SAAAA,EAAYluC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAAmuC,IACxBp9B,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAAgjC,GAAAn7B,KAAAhT,KAAMC,KAmBRmuC,eAAiB,WASf,IARA,IAAMruC,EAAWgR,EAAK9Q,MAAMF,SACtBiqB,EAAU,CACdlpB,EAAAC,EAAAC,cAAA,UAAQR,IAAK,MAAOS,MAAO,GACxBmD,GAAU,4BAA6BrE,KAItCsuC,EAAkBjqC,GAAU,qBAAsBrE,GAC/CqG,EAAM,EAAGA,GAAO2K,EAAK9Q,MAAMwxB,OAAOnjB,KAAKvG,WAAY3B,IAC1D4jB,EAAQpc,KACN9M,EAAAC,EAAAC,cAAA,UAAQR,IAAK4F,EAAKnF,MAAOmF,GACtBioC,EAAgBzrC,QAAQ,MAAO2D,OAAOH,MAI7C,OAAO4jB,GApCiBjZ,EAuC1Bq0B,gBAAkB,SAAC1jC,GACjB,IAAM0E,EAAMzD,OAAOjB,EAAME,cAAcX,OACnC8P,EAAKnQ,MAAMwF,MAAQA,GACrB2K,EAAKwC,SAAS,CAAEnN,IAAKA,KA1CC2K,EA8C1Bu9B,eAAiB,SAAC5sC,GAChB,IAAMgK,EAAKhK,EAAME,cAAcX,MAC3B8P,EAAKnQ,MAAM8K,KAAOA,GAAM1J,EAAa0J,IAAOqiC,GAAqBriC,IACnEqF,EAAKwC,SAAS,CAAE7H,GAAIA,KAjDEqF,EAqD1Bw9B,0BAA4B,WAE1B,IAAI15B,EAAW9D,EAAK9Q,MAAMwxB,OAAOnjB,KAAK7G,KACrB,KAAboN,IACFA,EAAWzQ,GAAU,0BAA2B2M,EAAK9Q,MAAMF,WAE7D8U,EAAWA,EAASjS,QAAQ,KAAM,KAElC,IAAMupB,EAAc2gB,GAAe/7B,EAAK9Q,MAAMwxB,QACxC1c,EAAO,IAAIC,KAAK,CAACmX,GAAM,CAAExqB,KAAM,2BACrCsT,iBAAOF,EAAMF,EAAW,aA/DA9D,EAkE1By9B,4BAA8B,WAE5B,IAAI35B,EAAW9D,EAAK9Q,MAAMwxB,OAAOnjB,KAAK7G,KACrB,KAAboN,IACFA,EAAWzQ,GAAU,0BAA2B2M,EAAK9Q,MAAMF,WAE7D8U,EAAWA,EAASjS,QAAQ,KAAM,KAElC,IAAMupB,EAAc0hB,GAAiB98B,EAAK9Q,MAAMwxB,QAC1C1c,EAAO,IAAIC,KAAK,CAACmX,GAAM,CAAExqB,KAAM,2BACrCsT,iBAAOF,EAAMF,EAAW,eA5EA9D,EA+E1B09B,0BAA4B,SAACroC,EAAasD,GAExC,IAAM3J,EAAWgR,EAAK9Q,MAAMF,SACxB8U,EAAW9D,EAAK9Q,MAAMwxB,OAAOnjB,KAAK7G,KACrB,KAAboN,IACFA,EAAWzQ,GAAU,0BAA2BrE,IAElD8U,EAAWA,EAASjS,QAAQ,KAAM,KAElC,IACM8rC,EADWtqC,GAAU,mCAAoCrE,GAE5D6C,QAAQ,QAAS2D,OAAOH,IACxBxD,QAAQ,aAAc2D,OAAOmD,IAC7B9G,QAAQ,aAAciS,GAEnBjU,EAAQ2T,KAAKO,UAAU/D,EAAK9Q,MAAMwxB,QAClC1c,EAAO,IAAIC,KAAK,CAACpU,GAAQ,CAAEe,KAAM,mCACvCsT,iBAAOF,EAAM25B,EAAa,uBAhGF39B,EAqG1B49B,yBAA2B,SAACvoC,EAAasD,GACvC,IAAMkK,EAAaT,SAASC,eAAe,cACxB,OAAfQ,IACFq6B,GAAiB7nC,EACjB8nC,GAAsBxkC,EACtBkK,EAAWP,UA1GWtC,EA+G1B4C,oBAAsB,WACpB,IAAMC,EAAaT,SAASC,eAAe,cAC3C,GAAmB,OAAfQ,GAAyBA,aAAsBC,kBAA0C,OAArBD,EAAWE,MAAnF,CAKA,IAAM1N,EAAc6nC,GACdvkC,EAAmBwkC,GAGnBjuC,EAAQ8Q,EAAK9Q,MACbF,EAAWE,EAAMF,SAEjBkU,EAAY9I,OAAA+I,EAAA,EAAA/I,CAAA4F,GACZgD,EAAeH,EAAWE,MAAM,GAChCK,EAAS,IAAIC,WACnBD,EAAOE,OAAS,WACd,IAAI/W,EAAuB,KAI3B,GAA6B,kBAAlB6W,EAAOlS,OAAlB,CAKA,IACE,IAAMuN,EAAmB+E,KAAKC,MAAML,EAAOlS,QAG3C,GAAIuN,EAAIrB,SAAStI,eAAiB5F,EAAMwxB,OAAOtjB,SAAStI,aAEtDvI,EADU8G,GAAU,yBAA0BrE,GAE3C6C,QAAQ,gBAAiB3C,EAAMwxB,OAAOtjB,SAAStI,cAC/CjD,QAAQ,iBAAkB4M,EAAIrB,SAAStI,mBACrC,GAAI2J,EAAIlB,KAAK7G,OAASxH,EAAMwxB,OAAOnjB,KAAK7G,KAAM,CAGnDnK,EADU8G,GAAU,0BAA2BrE,GACrC6C,QAAQ,aAAc3C,EAAMwxB,OAAOnjB,KAAK7G,MAAM7E,QAAQ,cAAe4M,EAAIlB,KAAK7G,WACnF,GAAK8F,GAAyBiC,EAAID,aAAatC,QAAS7G,EAAKsD,GAI7D,CAEL,IAAM6G,EAAkBf,EAAID,aAAatC,QAAQC,OAAO,SAACsD,GACvD,OAAOA,EAAEpK,MAAQA,GAAOoK,EAAE9G,WAAaA,IAEzCzJ,EAAM2uC,cAAcxoC,EAAKsD,EAAU6G,OAT0C,CAG7EjT,EADU8G,GAAU,yBAA0BrE,GACpC6C,QAAQ,QAAS2D,OAAOH,IAAMxD,QAAQ,aAAc2D,OAAOmD,KAQvE,MAAOgL,GACPpX,EAAQ8G,GAAU,iBAAkBrE,GAGjB,kBAAVzC,GACT2W,EAAaV,SAAS,CAAEjW,MAAOA,SAjC/BoB,OAAO+zB,MAAMruB,GAAU,uBAAwBrE,KAoCnDoU,EAAOQ,WAAWZ,KA1KMhD,EA6K1B2C,gBAAkB,WAChB3C,EAAKwC,SAAS,CAAEjW,MAAO,MA9KCyT,EAiL1B89B,yBAA2B,WAezB,IAbA,IAAMC,EAA6CthC,GACjDuD,EAAK9Q,MAAMwxB,OAAOnjB,KAAKtG,gBACvB+I,EAAK9Q,MAAMwxB,OAAOliB,aAAatC,SAG3BlN,EAAWgR,EAAK9Q,MAAMF,SACtBgvC,EAAkB3qC,GAAU,mCAAoCrE,GAChEivC,EAAgB5qC,GAAU,yBAA0BrE,GACpDkvC,EAAiB7qC,GAAU,0BAA2BrE,GAEtDmvC,EAAQ,GACR1gC,EAAUtL,KAAKgnB,IAAInZ,EAAK9Q,MAAMwxB,OAAOnjB,KAAKvG,WAAY+mC,EAAoBrpC,QAbjD6kC,EAAA,SAetB9kC,GAIP,IAHA,IAAM2pC,EAAcL,EAAoBtpC,GAElC4pC,EAAU,GAlBaC,EAAA,SAmBpBjkB,GACP,IAAMkkB,EAASH,EAAY/jB,GACrBrZ,GAAqB,IAAXu9B,EAAkB,UAAY,UACxCC,EAAcnkB,EAAI,EAAI,CAAE3Y,WAAY,aAAWzP,EAE/CwsC,GAA4B,IAAXF,EAAkBL,EAAiBD,EAC1DI,EAAQxhC,KACN9M,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CACEP,IAAKgF,EAAI,IAAM4lB,EACfrZ,QAASA,EACTqD,MAAOm6B,EACPz9B,QAAS,YACI,IAAXw9B,EACIv+B,EAAK09B,0BAA0BjpC,EAAI,EAAG4lB,EAAI,GAC1Cra,EAAK49B,yBAAyBnpC,EAAI,EAAG4lB,EAAI,KAG9CokB,EAAe5sC,QAAQ,QAAS2D,OAAOf,EAAI,IAAI5C,QAAQ,aAAc2D,OAAO6kB,EAAI,OAjB9EA,EAAI,EAAGA,EAAI+jB,EAAY1pC,OAAQ2lB,IAAKikB,EAApCjkB,GAsBT8jB,EAAMthC,KACJ9M,EAAAC,EAAAC,cAAA,OAAKR,IAAKgF,GACR1E,EAAAC,EAAAC,cAAA,WAAM+tC,EAAgBnsC,QAAQ,MAAO2D,OAAOf,EAAI,KAChD1E,EAAAC,EAAAC,cAAA,WAAMouC,GACL5pC,EAAIspC,EAAoBrpC,OAAS,EAAI3E,EAAAC,EAAAC,cAAA,WAAS,QA9B5CwE,EAAI,EAAGA,EAAIgJ,EAAShJ,IAAK8kC,EAAzB9kC,GAmCT,OAAO0pC,GAhOPn+B,EAAKq0B,gBAAkBr0B,EAAKq0B,gBAAgB/vB,KAArBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACvBA,EAAKu9B,eAAiBv9B,EAAKu9B,eAAej5B,KAApBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACtBA,EAAKw9B,0BAA4Bx9B,EAAKw9B,0BAA0Bl5B,KAA/BlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACjCA,EAAKy9B,4BAA8Bz9B,EAAKy9B,4BAA4Bn5B,KAAjClK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACnCA,EAAK09B,0BAA4B19B,EAAK09B,0BAA0Bp5B,KAA/BlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACjCA,EAAK49B,yBAA2B59B,EAAK49B,yBAAyBt5B,KAA9BlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAChCA,EAAK4C,oBAAsB5C,EAAK4C,oBAAoB0B,KAAzBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAC3BA,EAAK2C,gBAAkB3C,EAAK2C,gBAAgB2B,KAArBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACvBA,EAAK89B,yBAA2B99B,EAAK89B,yBAAyBx5B,KAA9BlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAEhCA,EAAKnQ,MAAQ,CACXwF,IAAK,EACLsF,GAAI,WACJpO,MAAO,IAhBeyT,wEAuOxB,IAAMhR,EAAWC,KAAKC,MAAMF,SACxB6hC,EAAU,KACd,OAAQ5hC,KAAKY,MAAM8K,IACjB,IAAK,WACHk2B,EAAU9gC,EAAAC,EAAAC,cAACyuC,GAAD,CAAYjvC,IAAKR,KAAKY,MAAMwF,IAAKA,IAAKpG,KAAKY,MAAMwF,MAC3D,MACF,IAAK,SACHw7B,EACE9gC,EAAAC,EAAAC,cAAC0uC,GAAD,CAAUlvC,IAAKR,KAAKY,MAAMwF,IAAKA,IAAKpG,KAAKY,MAAMwF,IAAKkC,gBAAgB,OAAOkkC,kBAAkB,eAE/F,MACF,IAAK,oBACH5K,EACE9gC,EAAAC,EAAAC,cAAC0uC,GAAD,CACElvC,IAAKR,KAAKY,MAAMwF,IAChBA,IAAKpG,KAAKY,MAAMwF,IAChBkC,gBAAiBtI,KAAKC,MAAMwxB,OAAOnjB,KAAKhG,gBACxCkkC,kBAAkB,sBAGtB,MACF,IAAK,oBACH5K,EACE9gC,EAAAC,EAAAC,cAAC0uC,GAAD,CACElvC,IAAKR,KAAKY,MAAMwF,IAChBA,IAAKpG,KAAKY,MAAMwF,IAChBkC,gBAAiBtI,KAAKC,MAAMwxB,OAAOnjB,KAAKhG,gBACxCkkC,kBAAkB,sBAQ1B,IAAImD,EAAc,KAelB,OAdI3vC,KAAKC,MAAMwxB,OAAOnjB,KAAKvG,WAAa,IACtC4nC,EACE7uC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEE,MAAOjB,KAAKY,MAAMwF,IAAIyjB,WACtBzoB,GAAG,SACHC,SAAUrB,KAAKolC,gBACf7jC,UAAS,iBAAAW,OAAmB4T,KAAOpa,UACnC0Z,MAAO,CAAE5C,YAAa,SAErBxS,KAAKouC,mBAMVttC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgV,GAAD,CACE1Y,MAAO0C,KAAKY,MAAMtD,MAClB+U,MAAOjO,GAAU,4BAA6BrE,GAC9CkR,KAA2B,KAArBjR,KAAKY,MAAMtD,MACjB6T,MAAOnR,KAAK0T,kBAGd5S,EAAAC,EAAAC,cAAC4uC,GAAA7uC,EAAD,KACED,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,CAAMqU,MAAO,CAAEzC,aAAc,SAC3B7R,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAKqQ,OAAN,KACEtQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,sCAAsCmN,eAAe,qBAE5E1Q,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,KACE7Q,EAAAC,EAAAC,cAAA,OAAKoU,MAAO,CAAEy6B,WAAY,SACxB/uC,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CACElN,GAAG,kCACHmN,eAAe,wEAGnB1Q,EAAAC,EAAAC,cAAA,WACChB,KAAK6uC,6BAIV/tC,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,CAAMqU,MAAO,CAAEzC,aAAc,SAC3B7R,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAKqQ,OAAN,KACEtQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,qCAAqCmN,eAAe,6BAE3E1Q,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,KACE7Q,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CAAQ+Q,QAAS9R,KAAKuuC,2BACpBztC,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CACElN,GAAG,yCACHmN,eAAe,iCAInB1Q,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CAAQ+Q,QAAS9R,KAAKwuC,4BAA6Bp5B,MAAO,CAAE3C,WAAY,SACtE3R,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,8BAA8BmN,eAAe,yBAM1E1Q,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAD,KACED,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAKqQ,OAAN,KACEtQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAkBlN,GAAG,8BAA8BmN,eAAe,oBAEpE1Q,EAAAC,EAAAC,cAAC6U,EAAA9U,EAAK4Q,KAAN,CAAWpQ,UAAWuU,KAAOg6B,aAC1BH,EAED7uC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEE,MAAOjB,KAAKY,MAAM8K,GAClBtK,GAAG,SACHC,SAAUrB,KAAKsuC,eACf/sC,UAAS,iBAAAW,OAAmB4T,KAAOpa,WAEnCoF,EAAAC,EAAAC,cAAA,UAAQC,MAAM,YAAYmD,GAAU,sBAAuBrE,IACf,SAA3CC,KAAKC,MAAMwxB,OAAOnjB,KAAKhG,gBACtBxH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,qBAAqBmD,GAAU,8BAA+BrE,IAC1E,KACwC,SAA3CC,KAAKC,MAAMwxB,OAAOnjB,KAAKhG,gBACtBxH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,qBAAqBmD,GAAU,8BAA+BrE,IAC1E,KACJe,EAAAC,EAAAC,cAAA,UAAQC,MAAM,UAAUmD,GAAU,sBAAuBrE,OAK9D6hC,EAED9gC,EAAAC,EAAAC,cAAA,SACEqD,GAAG,aACH1C,KAAK,OACLiV,OAAO,8BACPxB,MAAO,CAAEyB,QAAS,QAClBxV,SAAUrB,KAAK2T,8BAvWCjT,IAAMc,WA2XjBb,eAbS,SAACC,GACvB,MAAO,CACL6wB,OAAQ7wB,EACRb,SAAUa,EAAMb,WAIO,SAAC0B,GAC1B,MAAO,CACLmtC,cAAe,SAACxoC,EAAKsD,EAAU6G,GAAhB,OAAoC9O,EjD9Y1B,SAAC2E,EAAasD,EAAkB6G,GAC3D,MAAO,CACL5O,KAAM,iBACNyE,IAAKA,EACLsD,SAAUA,EACV6G,gBAAiBA,GiDyY2Cq+B,CAAcxoC,EAAKsD,EAAU6G,OAI9E5P,CAA6CwtC,ICjb7C4B,oLARX,OACEjvC,EAAAC,EAAAC,cAAA,OAAKO,UAAWuU,KAAO7X,aACrB6C,EAAAC,EAAAC,cAACgvC,GAAD,cAJuBtvC,IAAMc,WC4B/ByuC,GAAsB,CAC1B,UACA,UACA,UACA,WACA,UACA,WACA,SACA,UACA,aAGIC,GAAoB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAE5EC,eACJ,SAAAA,EAAYlwC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAAmwC,IACxBp/B,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAAglC,GAAAn9B,KAAAhT,KAAMC,KACDmwC,mBAAqBr/B,EAAKq/B,mBAAmB/6B,KAAxBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IAFFA,oFAQxB/Q,KAAKC,MAAM0kB,YAAY8L,KAAiBA,MAIxC,IAAM3K,EAAMmqB,GAAoBrf,GAAU,EAAGqf,GAAoBxqC,OAAS,IAC1EzF,KAAKC,MAAM2kB,cAAckB,GAQzB,IAJA,IAAMuqB,EAAgBzf,GAAU,EAAG,IAC7B0f,EAAkB1f,GAAU,EAAG,GAEjC2f,EAAa,GACR/qC,EAAI,EAAGA,EAAI6qC,EAAe7qC,IACjC+qC,EAAW3iC,KAAKijB,GAAiB,GAAI,IAAK,IAE5C0f,EAAaA,EAAWnyB,KAAK,SAACrd,EAAGsd,GAAJ,OAAU1b,OAAO5B,GAAK4B,OAAO0b,KAG1D,IADA,IAAImyB,EAAe,GACVhrC,EAAI,EAAGA,EAAI8qC,EAAiB9qC,IACnCgrC,EAAa5iC,KAAKijB,GAAiB,GAAI,IAAK,IAE9C2f,EAAeA,EAAapyB,KAAK,SAACrd,EAAGsd,GAAJ,OAAU1b,OAAO5B,GAAK4B,OAAO0b,KAG9D,IADA,IAAIoyB,EAAY,GACPjrC,EAAI,EAAGA,EAAI8qC,EAAiB9qC,IACnCirC,EAAU7iC,KAAKijB,GAAiB,GAAI,IAAK,IAE3C4f,EAAYA,EAAUryB,KAAK,SAACrd,EAAGsd,GAAJ,OAAU1b,OAAO5B,GAAK4B,OAAO0b,KAExDre,KAAKC,MAAMsY,iBAAiB,IAAKg4B,GACjCvwC,KAAKC,MAAMsY,iBAAiB,IAAKi4B,GACjCxwC,KAAKC,MAAMsY,iBAAiB,KAAMk4B,GAIlC,IAAMjiC,EAAUoiB,GAAU,EAAG,GAC7B5wB,KAAKC,MAAMoY,cAAc7J,GAEzB,IAAK,IAAIhJ,EAAI,EAAGA,EAAIgJ,EAAShJ,IAAK,CAChC,IAAMY,EAAMZ,EAAI,EACV8hC,EAAe1W,GAAU,EAAG,GAClC5wB,KAAKC,MAAMqY,mBAAmBlS,EAAKkhC,GAOrC,IAFA,IAAM/F,EAAe3Q,GAAU,EAAG,IAC5B3oB,EAAY,GACTzC,EAAI,EAAGA,EAAI+7B,EAAc/7B,IAAK,CACrC,IAAIkrC,EAAMR,GAAkBtf,GAAU,EAAGsf,GAAkBzqC,OAAS,IACpE,GAAIvC,KAAKwtB,SAAW,GAAK,CACvB,IAAMigB,EAAY/f,GAAU,EAAG,IACzBggB,EAAYhgB,GAAU+f,EAAY,EAAG,IAC3CD,EAAMA,EAAM,IAAMnqC,OAAOoqC,GAAa,IAAMpqC,OAAOqqC,IAIrB,IAA5B3oC,EAAUijB,QAAQwlB,IACpBzoC,EAAU2F,KAAK8iC,GAGnB1wC,KAAKC,MAAMmY,aAAanQ,oCAIxB,OACEnH,EAAAC,EAAAC,cAAC6Q,EAAA9Q,EAAD,CAAQ+Q,QAAS9R,KAAKowC,oBACpBtvC,EAAAC,EAAAC,cAAC4oB,GAAD,CAAiBvlB,GAAG,2BA7EW3D,IAAMc,WAkG9Bb,eAfS,SAACC,GAAD,OAAAuK,OAAAoD,EAAA,EAAApD,CAAA,GACnBvK,IAGsB,SAACa,GAC1B,MAAO,CACL2W,aAAc,SAACnQ,GAAD,OAA8BxG,EAAS2W,GAAanQ,KAClE2c,cAAe,SAAChd,GAAD,OAAwBnG,ExE5Gd,SAACmG,GAC5B,MAAO,CACLjG,KAAM,iBACNiG,cwEyGgDgd,CAAchd,KAC9DyQ,cAAe,SAAC5S,GAAD,OAAoBhE,EAAS4W,GAAc5S,KAC1Dkf,YAAa,SAACld,GAAD,OAAkBhG,ExE5HR,SAACgG,GAC1B,MAAO,CACL9F,KAAM,gBACN8F,QwEyHwCkd,CAAYld,KACpD6Q,mBAAoB,SAAClS,EAAawI,GAAd,OAAgCnN,EAAS6W,GAAmBlS,EAAKwI,KACrF2J,iBAAkB,SAACpU,EAAU4K,GAAX,OAAmCtN,EAAS8W,GAAiBpU,EAAK4K,OAIzEpO,CAA6CwvC,ICnItDU,GAAqB,CACzB,UACA,QACA,OACA,QACA,QACA,WACA,OACA,QACA,QACA,QACA,OACA,SACA,UACA,WACA,aACA,QACA,OACA,WACA,OACA,WACA,OACA,SACA,UACA,SACA,QACA,QACA,OACA,UACA,OACA,WACA,QACA,YACA,SACA,UACA,QACA,QACA,aACA,YACA,SACA,UACA,QACA,UACA,OACA,UACA,SACA,SACA,QACA,SACA,WACA,QACA,SACA,OACA,MACA,MACA,QACA,WACA,SACA,WACA,OACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,YACA,MACA,YACA,SACA,OACA,QACA,OACA,QACA,UACA,WAGIC,GAAoB,CACxB,QACA,UACA,SACA,aACA,QACA,aACA,SACA,UACA,SACA,WACA,UACA,aACA,UACA,YACA,QACA,WACA,QACA,QACA,UACA,cACA,SACA,aACA,aACA,WACA,aACA,WACA,QACA,SACA,aACA,aACA,WACA,QACA,OACA,QACA,aACA,YACA,YACA,WACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,QACA,UACA,aACA,cACA,WACA,WACA,WACA,YACA,QACA,UACA,SACA,aACA,QACA,YACA,WACA,WACA,QACA,YACA,UACA,OACA,SACA,UAUIC,eACJ,SAAAA,EAAY9wC,GAAc,IAAA8Q,EAAA,OAAA5F,OAAA0H,EAAA,EAAA1H,CAAAnL,KAAA+wC,IACxBhgC,EAAA5F,OAAA2H,EAAA,EAAA3H,CAAAnL,KAAAmL,OAAA4H,EAAA,EAAA5H,CAAA4lC,GAAA/9B,KAAAhT,KAAMC,KACD+wC,4BAA8BjgC,EAAKigC,4BAA4B37B,KAAjClK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACnCA,EAAKkgC,gBAAkBlgC,EAAKkgC,gBAAgB57B,KAArBlK,OAAA+I,EAAA,EAAA/I,CAAA4F,IACvBA,EAAKmgC,sBAAwBngC,EAAKmgC,sBAAsB77B,KAA3BlK,OAAA+I,EAAA,EAAA/I,CAAA4F,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","file":"static/js/main.eb219e41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingView\":\"LiftingView_liftingView__1KQWY\",\"middleParentContainer\":\"LiftingView_middleParentContainer__1x96w\",\"leftCardContainer\":\"LiftingView_leftCardContainer__XB_p4\",\"rightCardContainer\":\"LiftingView_rightCardContainer__2_2Cj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swatch\":\"ColorPicker_swatch__37L7m\",\"color\":\"ColorPicker_color__2eTyE\",\"onTop\":\"ColorPicker_onTop__2_JNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"LiftingHeader_header__1A3Do\",\"lifterName\":\"LiftingHeader_lifterName__IZ9f-\",\"info\":\"LiftingHeader_info__2A-vV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controlPanel\":\"ResultsView_controlPanel__3QsM5\",\"dropdown\":\"ResultsView_dropdown__3ijU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftDivider\":\"OneFlightOrder_leftDivider___OrBd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BarLoad_container__X9G0J\",\"rackInfo\":\"BarLoad_rackInfo__3-R3t\",\"bar\":\"BarLoad_bar__2uKKz\",\"kg50\":\"BarLoad_kg50__3Dzpr\",\"kg25\":\"BarLoad_kg25__oZ33k\",\"kg20\":\"BarLoad_kg20__2Chc3\",\"kg15\":\"BarLoad_kg15__29h-Q\",\"kg10\":\"BarLoad_kg10__3wTwD\",\"kg5\":\"BarLoad_kg5__1HQhv\",\"kg2p5\":\"BarLoad_kg2p5__2uFjz\",\"kg1p25\":\"BarLoad_kg1p25__2Kbe8\",\"kg1\":\"BarLoad_kg1__1LK48\",\"kg0p75\":\"BarLoad_kg0p75__2IanU\",\"kg0p5\":\"BarLoad_kg0p5__ysfi0\",\"kg0p25\":\"BarLoad_kg0p25__2PNzC\",\"lbs100\":\"BarLoad_lbs100__1cvbX\",\"lbs55\":\"BarLoad_lbs55__1Qesz\",\"lbs45\":\"BarLoad_lbs45__2XHki\",\"lbs35\":\"BarLoad_lbs35__2hIP6\",\"lbs25\":\"BarLoad_lbs25__1635G\",\"lbs10\":\"BarLoad_lbs10__vvKUf\",\"lbs5\":\"BarLoad_lbs5__33B97\",\"lbs2p5\":\"BarLoad_lbs2p5__28Ugx\",\"lbs1p25\":\"BarLoad_lbs1p25__2GROm\",\"lbs0p5\":\"BarLoad_lbs0p5__11E0i\",\"collar\":\"BarLoad_collar__DYLES\",\"error\":\"BarLoad_error__4kkR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"liftingtable\":\"LiftingTable_liftingtable__1fqA0\",\"textCell\":\"LiftingTable_textCell__35IDx\",\"smallCell\":\"LiftingTable_smallCell__md8BB\",\"spacerCell\":\"LiftingTable_spacerCell__2LaZ1\",\"activeColumn\":\"LiftingTable_activeColumn__39r5Q\",\"attemptInputCell\":\"LiftingTable_attemptInputCell__26Tse\",\"current\":\"LiftingTable_current__1B0UK\",\"goodlift\":\"LiftingTable_goodlift__AI3N1\",\"nolift\":\"LiftingTable_nolift__1oc2s\",\"attemptInput\":\"LiftingTable_attemptInput__3XEh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentArea\":\"ContentArea_contentArea__3Muei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"LiftingFooter_footer__1EyJS\",\"leftControls\":\"LiftingFooter_leftControls__3AxwS\",\"rightControls\":\"LiftingFooter_rightControls__2LeYh\",\"fullscreen\":\"LiftingFooter_fullscreen__1eERe\",\"goodLift\":\"LiftingFooter_goodLift__XXWyG\",\"noLift\":\"LiftingFooter_noLift__YGUIu\",\"selector\":\"LiftingFooter_selector__13fPS\"};","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2020 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport de from \"./de.json\";\r\nimport el from \"./el.json\";\r\nimport eo from \"./eo.json\";\r\nimport en from \"./en.json\";\r\nimport es from \"./es.json\";\r\nimport fr from \"./fr.json\";\r\nimport hr from \"./hr.json\";\r\nimport it from \"./it.json\";\r\nimport lt from \"./lt.json\";\r\nimport nl from \"./nl.json\";\r\nimport pt from \"./pt.json\";\r\nimport ru from \"./ru.json\";\r\nimport tr from \"./tr.json\";\r\nimport uk from \"./uk.json\";\r\nimport zh_Hans from \"./zh-Hans.json\";\r\n\r\nexport default { de, el, eo, en, es, fr, hr, it, lt, nl, pt, ru, tr, uk, \"zh-Hans\": zh_Hans };\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport translations from \"../../translations\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Language } from \"../../types/dataTypes\";\r\n\r\ninterface StateProps {\r\n  language: Language;\r\n}\r\n\r\ntype Props = StateProps;\r\n\r\nclass OpenLifterIntlProvider extends React.Component<Props> {\r\n  render() {\r\n    const language = this.props.language;\r\n    if (typeof language !== \"string\") {\r\n      throw new Error(\"language is not a string\");\r\n    }\r\n\r\n    // Load our translations from the json files\r\n    // TODO: This typing could be nicer, we should be able to state that es/eo = {}, en = undefined\r\n    const messages = (translations as any)[language];\r\n\r\n    return (\r\n      // This is going to wrap any children passed to this component with an IntlProvider\r\n      // This will put translations of all of our child components in our app\r\n      <IntlProvider locale={language} defaultLocale=\"en\" key={language} messages={messages}>\r\n        {this.props.children}\r\n      </IntlProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  language: state.language,\r\n});\r\n\r\nexport default connect(mapStateToProps)(OpenLifterIntlProvider);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport { changeLanguage } from \"../../actions/languageActions\";\r\nimport { Language } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport { FormControlTypeHack } from \"../../types/utils\";\r\n\r\ninterface StateProps {\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  changeLanguage: (event: React.FormEvent<FormControlTypeHack>) => any;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\n// TODO: Can we get these from the i18n lib somehow?\r\nconst languageOptions = [\r\n  <option key=\"de\" value=\"de\">\r\n    Deutsch (de)\r\n  </option>,\r\n  <option key=\"el\" value=\"el\">\r\n    Ελληνικά (el)\r\n  </option>,\r\n  <option key=\"en\" value=\"en\">\r\n    English (en)\r\n  </option>,\r\n  <option key=\"eo\" value=\"eo\">\r\n    Esperanto (eo)\r\n  </option>,\r\n  <option key=\"es\" value=\"es\">\r\n    Español (es)\r\n  </option>,\r\n  <option key=\"fr\" value=\"fr\">\r\n    Français (fr)\r\n  </option>,\r\n  <option key=\"hr\" value=\"hr\">\r\n    Hrvatski (hr)\r\n  </option>,\r\n  <option key=\"it\" value=\"it\">\r\n    Italiano (it)\r\n  </option>,\r\n  <option key=\"lt\" value=\"lt\">\r\n    Lietuvių (lt)\r\n  </option>,\r\n  <option key=\"nl\" value=\"nl\">\r\n    Nederlands (nl)\r\n  </option>,\r\n  <option key=\"pt\" value=\"pt\">\r\n    Português (pt)\r\n  </option>,\r\n  <option key=\"ru\" value=\"ru\">\r\n    Русский (ru)\r\n  </option>,\r\n  <option key=\"tr\" value=\"tr\">\r\n    Türkçe (tr)\r\n  </option>,\r\n  <option key=\"uk\" value=\"uk\">\r\n    Українська (uk)\r\n  </option>,\r\n  <option key=\"zh-Hans\" value=\"zh-Hans\">\r\n    简体中文 (zh-Hans)\r\n  </option>,\r\n];\r\n\r\nclass LanguageSelector extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <FormControl\r\n        as=\"select\"\r\n        value={this.props.language}\r\n        onChange={this.props.changeLanguage}\r\n        className=\"custom-select\"\r\n      >\r\n        {languageOptions}\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\n\r\n// Allows react component to subscribe to redux state updates\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  language: state.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    // TODO: Can we make this more type safe and avoid the cast?\r\n    changeLanguage: (event: React.FormEvent<FormControlTypeHack>) =>\r\n      dispatch(changeLanguage(event.currentTarget.value as Language)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageSelector);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { ChangeLanguageAction } from \"../types/actionTypes\";\r\nimport { Language } from \"../types/dataTypes\";\r\n\r\nexport const changeLanguage = (language: Language): ChangeLanguageAction => {\r\n  return {\r\n    type: \"CHANGE_LANGUAGE\",\r\n    language,\r\n  };\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\r\nimport { GlobalState } from \"../types/stateTypes\";\r\n\r\n// Overwrites the entire Redux store, handled separately by each reducer.\r\n// This is used to implement \"Load from File\" functionality.\r\nexport const overwriteStore = (store: GlobalState): OverwriteStoreAction => {\r\n  return {\r\n    type: \"OVERWRITE_STORE\",\r\n    store: store,\r\n  };\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines all the project-wide shared Redux state types in a single place.\r\n//\r\n// Because the Redux store is immutable, all types are internally prefixed\r\n// with the \"readonly \" covariant type, which makes them immutable.\r\n\r\nimport { FormControl, FormControlProps } from \"react-bootstrap\";\r\nimport { AgeCoefficients, Flight, Formula, Lift, Sex } from \"./dataTypes\";\r\n\r\n// This is purely used by the type system to raise a compile error when\r\n// we are trying to perform an exhaustive check (eg in a switch).\r\n// This allows us to have a compile time error, but also have graceful runtime fallback.\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport function checkExhausted(value: never): void {}\r\n\r\n// A workaround for bad typing of react-bootstrap. Open to better suggestions.\r\n// see: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/16208 for more context\r\nexport type FormControlTypeHack = FormControlProps & FormControl & HTMLOrSVGElement;\r\n\r\n// Convenience function to narrow a variables type down to a string\r\nexport function isString(value: any): value is string {\r\n  return typeof value === \"string\";\r\n}\r\n\r\n// Throws an error if value isn't a string, narrows the type if it is.\r\nexport function assertString(value: any): value is string {\r\n  const result = isString(value);\r\n  if (!result) {\r\n    throw new Error(`Expected a string, but got ${value}`);\r\n  }\r\n  return result;\r\n}\r\n\r\n// Throws an error if value isn't a number, narrows the type if it is.\r\nexport function assertNumber(value: any): value is number {\r\n  const result = typeof value === \"number\";\r\n  if (!result) {\r\n    throw new Error(`Expected a number, but got ${value}`);\r\n  }\r\n  return result;\r\n}\r\n\r\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\r\nexport function assertFlight(value: string): value is Flight {\r\n  const flight: Flight = value as Flight;\r\n  switch (flight) {\r\n    case \"A\":\r\n    case \"B\":\r\n    case \"C\":\r\n    case \"D\":\r\n    case \"E\":\r\n    case \"F\":\r\n    case \"G\":\r\n    case \"H\":\r\n    case \"I\":\r\n    case \"J\":\r\n    case \"K\":\r\n    case \"L\":\r\n    case \"M\":\r\n    case \"N\":\r\n    case \"O\":\r\n    case \"P\":\r\n      return true;\r\n    default:\r\n      checkExhausted(flight);\r\n      throw new Error(`Expected a string which corresponds to a Flight, got \"${value}\"`);\r\n  }\r\n}\r\n\r\n// Throws an error if value isn't a a valid flight, narrows the type if it is.\r\nexport function assertSex(value: string): value is Sex {\r\n  const sex = value as Sex;\r\n  switch (sex) {\r\n    case \"M\":\r\n    case \"F\":\r\n    case \"Mx\":\r\n      return true;\r\n    default:\r\n      checkExhausted(sex);\r\n      throw new Error(`Expected a string which corresponds to a Sex, got \"${value}\"`);\r\n  }\r\n}\r\n\r\nexport function assertLift(value: string): value is Lift {\r\n  const lift = value as Lift;\r\n  switch (lift) {\r\n    case \"S\":\r\n    case \"B\":\r\n    case \"D\":\r\n      return true;\r\n    default:\r\n      checkExhausted(lift);\r\n      throw new Error(`Expected a string which corresponds to a Lift, got \"${value}\"`);\r\n  }\r\n}\r\n\r\nexport function assertAgeCoefficients(value: string): value is AgeCoefficients {\r\n  const coefficient = value as AgeCoefficients;\r\n  switch (coefficient) {\r\n    case \"FosterMcCulloch\":\r\n    case \"None\":\r\n      return true;\r\n    default:\r\n      checkExhausted(coefficient);\r\n      throw new Error(`Expected a string which corresponds to a valid AgeCoefficients, got \"${value}\"`);\r\n  }\r\n}\r\n\r\nexport function assertFormula(value: string): value is Formula {\r\n  const formula = value as Formula;\r\n  switch (formula) {\r\n    case \"AH\":\r\n    case \"Bodyweight Multiple\":\r\n    case \"Dots\":\r\n    case \"Glossbrenner\":\r\n    case \"IPF GL Points\":\r\n    case \"IPF Points\":\r\n    case \"NASA Points\":\r\n    case \"Reshel\":\r\n    case \"Schwartz/Malone\":\r\n    case \"Total\":\r\n    case \"Wilks\":\r\n    case \"Wilks2020\":\r\n      return true;\r\n    default:\r\n      checkExhausted(formula);\r\n      throw new Error(`Expected a string which corresponds to a Formula, got \"${value}\"`);\r\n  }\r\n}\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { Entry, Language } from \"../types/dataTypes\";\r\n\r\n// Defines operations for converting between different units, usually\r\n// pounds and kg.\r\n\r\nexport const kg2lbs = (kg: number): number => {\r\n  return kg * 2.20462262;\r\n};\r\n\r\nexport const lbs2kg = (lbs: number): number => {\r\n  return lbs / 2.20462262;\r\n};\r\n\r\n// Converts a displayed String to a Number, even if that string is localized.\r\nexport const string2number = (s: string): number => {\r\n  return Number(s.replace(\",\", \".\"));\r\n};\r\n\r\n// Renders a weight (kg or lbs) for display, rounding to two decimal places,\r\n// hiding unnecessary zeros on the right.\r\n//\r\n// This rounding behavior eliminates all the visual inconsistencies of lbs->kg\r\n// conversion -- for example, how 112.5lbs isn't representable exactly in kg.\r\nexport const displayWeight = (weight: number, lang?: Language): string => {\r\n  const locale = lang === undefined ? \"en\" : lang;\r\n\r\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\r\n  // First, round to the hundredth place, stored as an integer.\r\n  let rounded = Math.round(weight * 100);\r\n\r\n  // If the fractional part is close to another tenth, add a correction.\r\n  // This happens due to floating-point imprecision.\r\n  if (rounded % 10 === 9) {\r\n    // Add 0.01 (still stored as an integer).\r\n    rounded += 1;\r\n  }\r\n\r\n  // Convert back to normal floating-point without truncation.\r\n  rounded = rounded / 100;\r\n\r\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 2 }).format(rounded);\r\n};\r\n\r\n// Renders a weight (kg or lbs) for display, truncating to one decimal place.\r\n// hiding unnecessary zeros on the right.\r\nexport const displayWeightOnePlace = (weight: number, lang?: Language): string => {\r\n  const locale = lang === undefined ? \"en\" : lang;\r\n\r\n  // This matches the OpenPowerlifting WeightKg::as_lbs() conversion logic.\r\n  // First, round to the hundredth place, stored as an integer.\r\n  let rounded = Math.round(weight * 100);\r\n\r\n  // If the fractional part is close to another tenth, add a correction.\r\n  // This happens due to floating-point imprecision.\r\n  if (rounded % 10 === 9) {\r\n    // Add 0.01 (still stored as an integer).\r\n    rounded += 1;\r\n  }\r\n\r\n  // Truncate to the tenth place, then convert back to normal floating-point.\r\n  const truncated = Math.trunc(rounded / 10) / 10;\r\n\r\n  return new Intl.NumberFormat(locale, { useGrouping: false, maximumFractionDigits: 1 }).format(truncated);\r\n};\r\n\r\n// Points display with two fixed decimal places (including zeros).\r\nexport const displayPoints = (points: number, lang: Language): string => {\r\n  return new Intl.NumberFormat(lang, {\r\n    useGrouping: false,\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n  }).format(points);\r\n};\r\n\r\n// Display a generic number that is neither a weight nor points.\r\n// This is intended for things like ages, day numbers, etc.\r\nexport const displayNumber = (number: number, lang: Language): string => {\r\n  // Grouping should not be used: otherwise ',' is ambiguous as a separator.\r\n  return new Intl.NumberFormat(lang, { useGrouping: false }).format(number);\r\n};\r\n\r\n// Display an ordinal number representing a place.\r\n// In Spanish, Portuguese, and Italian, the ordinal differs based on the lifter's Sex.\r\nexport const displayPlaceOrdinal = (number: number, entry: Entry, lang: Language): string => {\r\n  switch (lang) {\r\n    case \"es\":\r\n    case \"pt\":\r\n      return displayNumber(number, lang) + (entry.sex === \"F\" ? \"ª\" : \"º\");\r\n    default:\r\n      return displayNumber(number, lang);\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Gets translation strings directly given the current language, without\r\n// having to thread the IntlContext everywhere.\r\n//\r\n// This works because we store the language in the Redux store in addition\r\n// to in the React context.\r\n\r\nimport translations from \"../translations\";\r\nimport { Equipment, Event, Flight, Language, Sex, TranslationId } from \"../types/dataTypes\";\r\nimport { checkExhausted } from \"../types/utils\";\r\nimport { displayWeight } from \"./units\";\r\n\r\n// Fetches a simple string from the translations store. No formatting is performed.\r\nexport const getString = (id: TranslationId, lang: Language): string => {\r\n  return translations[lang][id];\r\n};\r\n\r\n// Localizes an Equipment value.\r\nexport const localizeEquipment = (equipment: Equipment, language: Language): string => {\r\n  switch (equipment) {\r\n    case \"Bare\":\r\n      return getString(\"equipment.bare\", language);\r\n    case \"Sleeves\":\r\n      return getString(\"equipment.sleeves\", language);\r\n    case \"Wraps\":\r\n      return getString(\"equipment.wraps\", language);\r\n    case \"Single-ply\":\r\n      return getString(\"equipment.single-ply\", language);\r\n    case \"Multi-ply\":\r\n      return getString(\"equipment.multi-ply\", language);\r\n    case \"Unlimited\":\r\n      return getString(\"equipment.unlimited\", language);\r\n    default:\r\n      checkExhausted(equipment);\r\n      return \"\";\r\n  }\r\n};\r\n\r\n// Delocalizes an Equipment value.\r\nexport const delocalizeEquipment = (text: string, language: Language): Equipment => {\r\n  if (text === getString(\"equipment.bare\", language)) return \"Bare\";\r\n  if (text === getString(\"equipment.sleeves\", language)) return \"Sleeves\";\r\n  if (text === getString(\"equipment.wraps\", language)) return \"Wraps\";\r\n  if (text === getString(\"equipment.single-ply\", language)) return \"Single-ply\";\r\n  if (text === getString(\"equipment.multi-ply\", language)) return \"Multi-ply\";\r\n  if (text === getString(\"equipment.unlimited\", language)) return \"Unlimited\";\r\n  throw new Error(\"Failed to delocalize Equipment: \" + text);\r\n};\r\n\r\n// Localizes an Event value.\r\nexport const localizeEvent = (event: Event, language: Language): string => {\r\n  switch (event) {\r\n    case \"S\":\r\n      return getString(\"event.s\", language);\r\n    case \"B\":\r\n      return getString(\"event.b\", language);\r\n    case \"D\":\r\n      return getString(\"event.d\", language);\r\n    case \"SB\":\r\n      return getString(\"event.sb\", language);\r\n    case \"SD\":\r\n      return getString(\"event.sd\", language);\r\n    case \"BD\":\r\n      return getString(\"event.bd\", language);\r\n    case \"SBD\":\r\n      return getString(\"event.sbd\", language);\r\n    default:\r\n      checkExhausted(event);\r\n      return \"\";\r\n  }\r\n};\r\n\r\n// Delocalizes an Event value.\r\nexport const delocalizeEvent = (text: string, language: Language): Event => {\r\n  if (text === getString(\"event.s\", language)) return \"S\";\r\n  if (text === getString(\"event.b\", language)) return \"B\";\r\n  if (text === getString(\"event.d\", language)) return \"D\";\r\n  if (text === getString(\"event.sb\", language)) return \"SB\";\r\n  if (text === getString(\"event.sd\", language)) return \"SD\";\r\n  if (text === getString(\"event.bd\", language)) return \"BD\";\r\n  if (text === getString(\"event.sbd\", language)) return \"SBD\";\r\n  throw new Error(\"Failed to delocalize Event: \" + text);\r\n};\r\n\r\n// Localizes a Flight value.\r\nexport const localizeFlight = (flight: Flight, language: Language): string => {\r\n  switch (flight) {\r\n    case \"A\":\r\n      return getString(\"flight.a\", language);\r\n    case \"B\":\r\n      return getString(\"flight.b\", language);\r\n    case \"C\":\r\n      return getString(\"flight.c\", language);\r\n    case \"D\":\r\n      return getString(\"flight.d\", language);\r\n    case \"E\":\r\n      return getString(\"flight.e\", language);\r\n    case \"F\":\r\n      return getString(\"flight.f\", language);\r\n    case \"G\":\r\n      return getString(\"flight.g\", language);\r\n    case \"H\":\r\n      return getString(\"flight.h\", language);\r\n    case \"I\":\r\n      return getString(\"flight.i\", language);\r\n    case \"J\":\r\n      return getString(\"flight.j\", language);\r\n    case \"K\":\r\n      return getString(\"flight.k\", language);\r\n    case \"L\":\r\n      return getString(\"flight.l\", language);\r\n    case \"M\":\r\n      return getString(\"flight.m\", language);\r\n    case \"N\":\r\n      return getString(\"flight.n\", language);\r\n    case \"O\":\r\n      return getString(\"flight.o\", language);\r\n    case \"P\":\r\n      return getString(\"flight.p\", language);\r\n    default:\r\n      checkExhausted(flight);\r\n      return \"\";\r\n  }\r\n};\r\n\r\n// Delocalizes a Flight value.\r\nexport const delocalizeFlight = (text: string, language: Language): Flight => {\r\n  // The \"A\" character gets special handling for the benefit of Cyrillic.\r\n  // Latin \"A\" and Cyrillic \"A\" are visually identical, but differ in encoding.\r\n  if (text === getString(\"flight.a\", language) || text === \"A\") return \"A\";\r\n\r\n  if (text === getString(\"flight.b\", language)) return \"B\";\r\n  if (text === getString(\"flight.c\", language)) return \"C\";\r\n  if (text === getString(\"flight.d\", language)) return \"D\";\r\n  if (text === getString(\"flight.e\", language)) return \"E\";\r\n  if (text === getString(\"flight.f\", language)) return \"F\";\r\n  if (text === getString(\"flight.g\", language)) return \"G\";\r\n  if (text === getString(\"flight.h\", language)) return \"H\";\r\n  if (text === getString(\"flight.i\", language)) return \"I\";\r\n  if (text === getString(\"flight.j\", language)) return \"J\";\r\n  if (text === getString(\"flight.k\", language)) return \"K\";\r\n  if (text === getString(\"flight.l\", language)) return \"L\";\r\n  if (text === getString(\"flight.m\", language)) return \"M\";\r\n  if (text === getString(\"flight.n\", language)) return \"N\";\r\n  if (text === getString(\"flight.o\", language)) return \"O\";\r\n  if (text === getString(\"flight.p\", language)) return \"P\";\r\n  throw new Error(\"Failed to delocalize Flight: \" + text);\r\n};\r\n\r\n// Localizes a Sex value.\r\nexport const localizeSex = (sex: Sex, language: Language): string => {\r\n  switch (sex) {\r\n    case \"M\":\r\n      return getString(\"sex.m\", language);\r\n    case \"F\":\r\n      return getString(\"sex.f\", language);\r\n    case \"Mx\":\r\n      return getString(\"sex.mx\", language);\r\n    default:\r\n      checkExhausted(sex);\r\n      return \"\";\r\n  }\r\n};\r\n\r\n// Delocalizes a Sex value.\r\nexport const delocalizeSex = (text: string, language: Language): Sex => {\r\n  if (text === getString(\"sex.m\", language)) return \"M\";\r\n  if (text === getString(\"sex.f\", language)) return \"F\";\r\n  if (text === getString(\"sex.mx\", language)) return \"Mx\";\r\n  throw new Error(\"Failed to delocalize Sex: \" + text);\r\n};\r\n\r\n// Localizes a Category weightclass string.\r\n// This is used by the Flight Order and Results pages.\r\nexport const localizeWeightClassStr = (wtcls: string, language: Language): string => {\r\n  const isSHW = wtcls.endsWith(\"+\");\r\n  const asNumber = Number(wtcls.replace(\"+\", \"\"));\r\n  if (asNumber === 0) return \"\";\r\n  return displayWeight(asNumber, language) + (isSHW ? \"+\" : \"\");\r\n};\r\n\r\n// Negotiates the default language with the navigator, if possible.\r\nexport const getDefaultLanguage = (): Language => {\r\n  const defaultLanguage: Language = \"en\";\r\n\r\n  // Make sure that we're in a modern browser.\r\n  if (typeof navigator !== \"object\" || typeof navigator.languages !== \"object\") {\r\n    return defaultLanguage;\r\n  }\r\n\r\n  // Iterate over the available languages looking for the first match.\r\n  const languages: ReadonlyArray<string> = navigator.languages;\r\n  for (let i = 0; i < languages.length; ++i) {\r\n    const language = languages[i];\r\n    if (language in translations) {\r\n      return language as Language;\r\n    }\r\n  }\r\n\r\n  return defaultLanguage;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Versioning for the global State object.\r\n//\r\n// Incrementing the version string breaks compatibility between implementations,\r\n// with the expectation that a converter will be automatically applied if possible,\r\n// such that a version of OpenLifter that internally uses version \"B\" can still\r\n// load files written in version \"A\", by means of auto-upgrading.\r\n//\r\n// This string is stored on the GlobalState as the property \"versions.stateVersion\".\r\n// Each save file thereby reports its own version.\r\nexport const stateVersion: string = \"0\";\r\n\r\n// Versioning for the OpenLifter project as a whole.\r\n//\r\n// This is safely incrementable on *releases*. Its function is exclusively to alert\r\n// users to \"automatic\" upgrades of the software, and it is reported explicitly\r\n// on the Home page.\r\n//\r\n// Changing this version does *not* represent data incompatibilities; for that,\r\n// please use the \"stateVersion\".\r\n//\r\n// This string is stored on the GlobalState as the property \"versions.releaseVersion\".\r\n//\r\n// It's defined by the '.env' file in the project root, which references\r\n// the package.json variable 'version'.\r\nexport const releaseVersion: string =\r\n  typeof process.env.REACT_APP_VERSION === \"string\" ? process.env.REACT_APP_VERSION : \"[undefined REACT_APP_VERSION]\";\r\n\r\n// Strictly-presentational representation of when the releaseVersion was changed.\r\n// Update this concurrently with modifying the releaseVersion.\r\n// This value is not stored in the state: it's purely informational.\r\nexport const releaseDate: string = \"(ﾉ◕ヮ◕)ﾉ*:・ﾟ✧\";\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// See comments in src/versions.js.\r\n\r\nimport { stateVersion, releaseVersion } from \"../versions\";\r\nimport { OverwriteStoreAction } from \"../types/actionTypes\";\r\nimport { VersionsState } from \"../types/stateTypes\";\r\n\r\nconst initialState: VersionsState = {\r\n  stateVersion,\r\n  releaseVersion,\r\n};\r\n\r\ntype Action = OverwriteStoreAction;\r\n\r\nexport default (state: VersionsState = initialState, action: Action): VersionsState => {\r\n  switch (action.type) {\r\n    case \"OVERWRITE_STORE\":\r\n      return action.store.versions;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines logic for working with Dates, which is trickier than you might expect:\r\n// the global state wants strings in YYYY-MM-DD, date objects get created from\r\n// strings in UTC time, and React widgets create Dates in local time.\r\n\r\nexport const iso8601ToLocalDate = (s: string): Date => {\r\n  const [yearStr, monthStr, dayStr] = s.split(\"-\");\r\n\r\n  const year = parseInt(yearStr, 10);\r\n  const month = parseInt(monthStr, 10);\r\n  const day = parseInt(dayStr, 10);\r\n\r\n  const d = new Date();\r\n  d.setFullYear(year, month - 1, day);\r\n  return d;\r\n};\r\n\r\nexport const localDateToIso8601 = (d: Date): string => {\r\n  const year: number = d.getFullYear();\r\n  const month: number = d.getMonth() + 1;\r\n  const day: number = d.getDate();\r\n\r\n  const yearStr = String(year);\r\n  let monthStr = String(month);\r\n  if (monthStr.length === 1) {\r\n    monthStr = \"0\" + monthStr;\r\n  }\r\n  let dayStr = String(day);\r\n  if (dayStr.length === 1) {\r\n    dayStr = \"0\" + dayStr;\r\n  }\r\n\r\n  return yearStr + \"-\" + monthStr + \"-\" + dayStr;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Color codes must be in upper-case to match the ColorPicker output.\r\nexport const PlateColors = {\r\n  PLATE_DEFAULT_BLACK: \"#000000\",\r\n  PLATE_DEFAULT_WHITE: \"#FFFFFF\",\r\n  PLATE_DEFAULT_BLUE: \"#4990E2\",\r\n  PLATE_DEFAULT_GREEN: \"#2AB003\",\r\n  PLATE_DEFAULT_GRAY: \"#575757\",\r\n  PLATE_DEFAULT_RED: \"#FF0000\",\r\n  PLATE_DEFAULT_YELLOW: \"#FFEF2A\",\r\n  PLATE_DEFAULT_ORANGE: \"#F25A1D\",\r\n  PLATE_DEFAULT_PINK: \"#E81FA5\",\r\n  PLATE_DEFAULT_PURPLE: \"#9B16F2\",\r\n};\r\n\r\nexport type PlateColorsType = keyof typeof PlateColors;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { localDateToIso8601 } from \"../logic/date\";\r\nimport { kg2lbs, lbs2kg, displayWeight } from \"../logic/units\";\r\nimport { PlateColors } from \"../constants/plateColors\";\r\n\r\nimport { MeetSetupAction, OverwriteStoreAction } from \"../types/actionTypes\";\r\nimport { Language, Plate } from \"../types/dataTypes\";\r\nimport { MeetState } from \"../types/stateTypes\";\r\nimport { checkExhausted } from \"../types/utils\";\r\n\r\nconst defaultPlatformsOnDay = 1;\r\n\r\nconst defaultBarAndCollarsWeightKg = 25; // Assuming metal 2.5kg collars.\r\nconst defaultBarAndCollarsWeightLbs = 45; // Assuming plastic collars.\r\n\r\n// Default kg plates, allowing for increments of 0.5kg.\r\nconst defaultPlatesKg: ReadonlyArray<Plate> = [\r\n  { weightKg: 50, pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\r\n  { weightKg: 25, pairCount: 8, color: PlateColors.PLATE_DEFAULT_RED },\r\n  { weightKg: 20, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\r\n  { weightKg: 15, pairCount: 1, color: PlateColors.PLATE_DEFAULT_YELLOW },\r\n  { weightKg: 10, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\r\n  { weightKg: 5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\r\n  { weightKg: 2.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\r\n  { weightKg: 2, pairCount: 0, color: PlateColors.PLATE_DEFAULT_BLUE },\r\n  { weightKg: 1.5, pairCount: 0, color: PlateColors.PLATE_DEFAULT_YELLOW },\r\n  { weightKg: 1.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLACK },\r\n  { weightKg: 1, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\r\n  { weightKg: 0.75, pairCount: 1, color: PlateColors.PLATE_DEFAULT_RED },\r\n  { weightKg: 0.5, pairCount: 1, color: PlateColors.PLATE_DEFAULT_GREEN },\r\n  { weightKg: 0.25, pairCount: 1, color: PlateColors.PLATE_DEFAULT_BLUE },\r\n];\r\n\r\n// Default lbs plates, allowing for increments of 1lb.\r\nconst defaultPlatesLbs: ReadonlyArray<Plate> = [\r\n  { weightKg: lbs2kg(100), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GREEN },\r\n  { weightKg: lbs2kg(55), pairCount: 0, color: PlateColors.PLATE_DEFAULT_RED },\r\n  { weightKg: lbs2kg(45), pairCount: 8, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n  { weightKg: lbs2kg(35), pairCount: 0, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n  { weightKg: lbs2kg(25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n  { weightKg: lbs2kg(10), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n  { weightKg: lbs2kg(5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n  { weightKg: lbs2kg(2.5), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n  { weightKg: lbs2kg(1.25), pairCount: 1, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n  { weightKg: lbs2kg(0.5), pairCount: 2, color: PlateColors.PLATE_DEFAULT_GRAY },\r\n];\r\n\r\nconst initialState: MeetState = {\r\n  // Sanction information.\r\n  name: \"\",\r\n  country: \"\",\r\n  state: \"\",\r\n  city: \"\",\r\n  federation: \"\",\r\n  date: localDateToIso8601(new Date()),\r\n  lengthDays: 1,\r\n  platformsOnDays: [defaultPlatformsOnDay],\r\n\r\n  // Competition Rules.\r\n  divisions: [],\r\n  weightClassesKgMen: [],\r\n  weightClassesKgWomen: [],\r\n  weightClassesKgMx: [],\r\n  formula: \"Wilks\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: true,\r\n  enableAttemptHandinTimer: false,\r\n  attemptHandinTimeout: 60,\r\n\r\n  // Weights and Loading Setup.\r\n  inKg: true,\r\n  showAlternateUnits: true,\r\n  squatBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\r\n  benchBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\r\n  deadliftBarAndCollarsWeightKg: defaultBarAndCollarsWeightKg,\r\n  plates: defaultPlatesKg,\r\n};\r\n\r\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\r\n// return a string describing the weight class.\r\nexport const getWeightClassStr = (\r\n  classes: ReadonlyArray<number>,\r\n  bodyweightKg: number,\r\n  language?: Language\r\n): string => {\r\n  if (bodyweightKg === 0) return \"\";\r\n  if (classes.length === 0) return \"\";\r\n\r\n  for (let i = 0; i < classes.length; i++) {\r\n    if (bodyweightKg <= classes[i]) {\r\n      return displayWeight(classes[i], language);\r\n    }\r\n  }\r\n  return displayWeight(classes[classes.length - 1], language) + \"+\";\r\n};\r\n\r\n// Converts a kg weightclass to pounds.\r\n//\r\n// For example, the 90kg class is technically 198.41lbs,\r\n// but this will return \"198\".\r\nexport const wtclsStrKg2Lbs = (kgcls: string): string => {\r\n  const shw: boolean = kgcls.endsWith(\"+\");\r\n  const asNumber = Number(kgcls.replace(\"+\", \"\"));\r\n\r\n  // Convert to pounds and round down.\r\n  let truncated = Math.floor(kg2lbs(asNumber));\r\n\r\n  // This works for everything but the 183 class, which\r\n  // rounds down to 182.\r\n  if (truncated === 182) {\r\n    truncated = 183;\r\n  }\r\n\r\n  return shw ? String(truncated) + \"+\" : String(truncated);\r\n};\r\n\r\n// Given a sorted list of weight classes (in kg) and a bodyweight (in kg),\r\n// return a string describing the weight class.\r\n//\r\n// This is a separate method because it turns out that many exact translations\r\n// of kilo values are not what the audience expects for traditionally-reported\r\n// pounds classes. So a bunch of rounding must occur.\r\nexport const getWeightClassLbsStr = (classes: ReadonlyArray<number>, bodyweightKg: number): string => {\r\n  if (bodyweightKg === 0) return \"\";\r\n  if (classes.length === 0) return \"\";\r\n\r\n  for (let i = 0; i < classes.length; i++) {\r\n    if (bodyweightKg <= classes[i]) {\r\n      return wtclsStrKg2Lbs(String(classes[i]));\r\n    }\r\n  }\r\n  return wtclsStrKg2Lbs(String(classes[classes.length - 1])) + \"+\";\r\n};\r\n\r\ntype Action = MeetSetupAction | OverwriteStoreAction;\r\n\r\nexport default (state: MeetState = initialState, action: Action): MeetState => {\r\n  switch (action.type) {\r\n    case \"SET_MEET_NAME\":\r\n      return { ...state, name: action.name };\r\n\r\n    case \"SET_FORMULA\":\r\n      return { ...state, formula: action.formula };\r\n\r\n    case \"SET_FEDERATION\":\r\n      return { ...state, federation: action.federation };\r\n\r\n    case \"SET_DIVISIONS\":\r\n      return { ...state, divisions: action.divisions };\r\n\r\n    case \"SET_MEET_DATE\":\r\n      return { ...state, date: action.date };\r\n\r\n    case \"SET_LENGTH_DAYS\": {\r\n      const numDays = Number(action.length);\r\n\r\n      if (numDays >= state.platformsOnDays.length) {\r\n        const diff = numDays - state.platformsOnDays.length;\r\n\r\n        const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\r\n        for (let i = 0; i < diff; i++) {\r\n          newPlatformsOnDays.push(defaultPlatformsOnDay);\r\n        }\r\n\r\n        return { ...state, lengthDays: numDays, platformsOnDays: newPlatformsOnDays };\r\n      }\r\n      return { ...state, lengthDays: numDays };\r\n    }\r\n\r\n    case \"SET_PLATFORM_COUNT\": {\r\n      const day = Number(action.day);\r\n      const count = Number(action.count);\r\n\r\n      const newPlatformsOnDays: Array<number> = state.platformsOnDays.slice();\r\n      newPlatformsOnDays[day - 1] = count;\r\n      return { ...state, platformsOnDays: newPlatformsOnDays };\r\n    }\r\n\r\n    case \"SET_IN_KG\": {\r\n      // Changing the units also changes the loading, so re-initialize from defaults.\r\n      const defaultPlates = action.inKg ? defaultPlatesKg : defaultPlatesLbs;\r\n      const defaultBar = action.inKg ? defaultBarAndCollarsWeightKg : lbs2kg(defaultBarAndCollarsWeightLbs);\r\n      return {\r\n        ...state,\r\n        inKg: action.inKg,\r\n        plates: defaultPlates,\r\n        squatBarAndCollarsWeightKg: defaultBar,\r\n        benchBarAndCollarsWeightKg: defaultBar,\r\n        deadliftBarAndCollarsWeightKg: defaultBar,\r\n      };\r\n    }\r\n\r\n    case \"SET_WEIGHTCLASSES\": {\r\n      const sex = action.sex;\r\n      const classesKg = action.classesKg;\r\n      switch (sex) {\r\n        case \"M\":\r\n          return { ...state, weightClassesKgMen: classesKg };\r\n        case \"F\":\r\n          return { ...state, weightClassesKgWomen: classesKg };\r\n        case \"Mx\":\r\n          return { ...state, weightClassesKgMx: classesKg };\r\n        default:\r\n          checkExhausted(sex);\r\n          return state;\r\n      }\r\n    }\r\n\r\n    case \"SET_BAR_AND_COLLARS_WEIGHT_KG\": {\r\n      switch (action.lift) {\r\n        case \"S\":\r\n          return { ...state, squatBarAndCollarsWeightKg: action.weightKg };\r\n        case \"B\":\r\n          return { ...state, benchBarAndCollarsWeightKg: action.weightKg };\r\n        case \"D\":\r\n          return { ...state, deadliftBarAndCollarsWeightKg: action.weightKg };\r\n        default:\r\n          checkExhausted(action.lift);\r\n          return state;\r\n      }\r\n    }\r\n\r\n    case \"SET_PLATE_CONFIG\": {\r\n      const { weightKg, pairCount, color } = action;\r\n\r\n      // Find the index of the object in the platesOnSide array by comparing weights.\r\n      const index = state.plates.findIndex((p) => p.weightKg === weightKg);\r\n\r\n      // Clone the array.\r\n      const newPlates: Array<Plate> = state.plates.slice();\r\n\r\n      // Replace with a new object in the new array.\r\n      newPlates[index] = { weightKg, pairCount, color };\r\n\r\n      return { ...state, plates: newPlates };\r\n    }\r\n\r\n    case \"UPDATE_MEET\": {\r\n      const changes = action.changes;\r\n\r\n      // Make a new MeetState with just the changes overwritten.\r\n      const newState = Object.assign({}, state);\r\n      return Object.assign(newState, changes);\r\n    }\r\n\r\n    case \"OVERWRITE_STORE\":\r\n      return action.store.meet;\r\n\r\n    default:\r\n      checkExhausted(action);\r\n      return state;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines logic for creating and working with Entry objects.\r\n\r\nimport { Entry, Lift, Event, FieldKg, FieldStatus } from \"../types/dataTypes\";\r\nimport { checkExhausted } from \"../types/utils\";\r\n\r\n// Length of {squat,bench,deadlift}{Kg,Status} in each Entry.\r\nexport const MAX_ATTEMPTS = 5;\r\n\r\nexport const newDefaultEntry = (id: number): Entry => {\r\n  return {\r\n    // Bookkeeping internal information for OpenLifter.\r\n    id: id, // The global unique ID of this registration.\r\n\r\n    // Information about when the lifter is scheduled to lift.\r\n    day: 1, // The day on which the lifter is lifting.\r\n    platform: 1, // The platform on which the lifter is lifting.\r\n    flight: \"A\", // The flight in which the lifter is lifting.\r\n\r\n    // Information about the lifter themselves.\r\n    name: \"\", // The lifter's name.\r\n    sex: \"M\", // The lifter's sex.\r\n    birthDate: \"\", // The lifter's birthdate (YYYY-MM-DD).\r\n    age: 0, // The lifter's age in years\r\n    country: \"\", // Lifter's home country, or blank.\r\n    state: \"\", // Lifter's home state, or blank.\r\n    intendedWeightClassKg: \"\", // The weightclass for which the lifter registered.\r\n    equipment: \"Sleeves\", // The equipment category for which the lifter registered.\r\n    divisions: [], // A list of divisions the lifter entered.\r\n    events: [], // A list of events the lifter entered.\r\n\r\n    // Metadata about the lifter, assigned by the meet director.\r\n    lot: 0, // The lifter's lot number, for breaking ties in lifting order.\r\n    memberId: \"\", // Optional federation MemberID, for reporting in results.\r\n    paid: false, // Used by the meet director for tracking whether the lifter paid.\r\n    team: \"\", // Optional. Only used in the final results export.\r\n    guest: false, // Optional. Marks the lifter as a guest, who cannot place in rankings.\r\n    notes: \"\", // Free-form text for the meet director to use as a scratchpad.\r\n\r\n    // Information added on the \"Weigh-ins\" page.\r\n    // But we might as well track it in this object.\r\n    bodyweightKg: 0.0,\r\n    squatRackInfo: \"\", // A freeform string for the benefit of the loaders.\r\n    benchRackInfo: \"\", // A freeform string for the benefit of the loaders.\r\n\r\n    // Lifting information. Weights always stored internally in kg.\r\n    squatKg: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n    benchKg: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n    deadliftKg: [0.0, 0.0, 0.0, 0.0, 0.0],\r\n\r\n    // Lifting information, success state:\r\n    //  -1 => No Lift.\r\n    //   0 => Not Yet Done.\r\n    //   1 => Good Lift.\r\n    //\r\n    // Note that this system has the property where corresponding (kg*status)\r\n    // produces the SquatXKg as expected by the main OpenPowerlifting CSV format.\r\n    squatStatus: [0, 0, 0, 0, 0],\r\n    benchStatus: [0, 0, 0, 0, 0],\r\n    deadliftStatus: [0, 0, 0, 0, 0],\r\n  };\r\n};\r\n\r\n// Gets the lifter's age, possibly by inferring it from birthDate.\r\n// If the age couldn't be determined, returns 0.\r\nexport const getAge = (entry: Entry, meetDate: string): number => {\r\n  // If the user overrode the Age manually, just take that.\r\n  if (entry.age > 0) return entry.age;\r\n\r\n  // If no birthDate is provided, nothing more can be done.\r\n  if (entry.birthDate === \"\") return 0;\r\n\r\n  // Infer the age given {meetDate, birthDate, day}.\r\n  let [my, mm, md] = meetDate.split(\"-\").map((s) => Number(s));\r\n  const [by, bm, bd] = entry.birthDate.split(\"-\").map((s) => Number(s));\r\n\r\n  // Advance the day counter if necessary.\r\n  // FIXME: This logic assumes that each month has exactly 31 days.\r\n  if (entry.day > 1) {\r\n    md += entry.day - 1;\r\n    if (md > 31) {\r\n      md -= 31;\r\n      mm += 1;\r\n    }\r\n    if (mm > 12) {\r\n      md -= 12;\r\n      my += 1;\r\n    }\r\n  }\r\n\r\n  const years = my - by;\r\n  if (years <= 0) return 0;\r\n\r\n  // If their birthday occurred in the most recent year, just diff years.\r\n  if (bm < mm || (bm === mm && bd <= md)) {\r\n    return years;\r\n  }\r\n\r\n  // Otherwise, their birthday did not occur yet, so this year doesn't count.\r\n  return years - 1;\r\n};\r\n\r\n// Gets the best squat, including extra attempts that don't count for the total.\r\nexport const getBest5SquatKg = (entry: Entry): number => {\r\n  let best3SquatKg = 0.0;\r\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n    if (entry.squatStatus[i] === 1) {\r\n      best3SquatKg = Math.max(best3SquatKg, entry.squatKg[i]);\r\n    }\r\n  }\r\n  return best3SquatKg;\r\n};\r\n\r\n// Gets the best bench, including extra attempts that don't count for the total.\r\nexport const getBest5BenchKg = (entry: Entry): number => {\r\n  let best3BenchKg = 0.0;\r\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n    if (entry.benchStatus[i] === 1) {\r\n      best3BenchKg = Math.max(best3BenchKg, entry.benchKg[i]);\r\n    }\r\n  }\r\n  return best3BenchKg;\r\n};\r\n\r\n// Gets the best deadlift, including extra attempts that don't count for the total.\r\nexport const getBest5DeadliftKg = (entry: Entry): number => {\r\n  let best3DeadliftKg = 0.0;\r\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n    if (entry.deadliftStatus[i] === 1) {\r\n      best3DeadliftKg = Math.max(best3DeadliftKg, entry.deadliftKg[i]);\r\n    }\r\n  }\r\n  return best3DeadliftKg;\r\n};\r\n\r\n// The ProjectedTotal optimistically assumes that lifters will get *first* attempts\r\n// that have not yet been taken. It is used for calculating a total while lifters\r\n// are still squatting and benching.\r\n//\r\n// 2nd and 3rd attempts are treated normally, where they only count toward the\r\n// total if they have been successful.\r\nexport const getProjectedTotalKg = (entry: Entry): number => {\r\n  let best3Squat = 0.0;\r\n  if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\r\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\r\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\r\n\r\n  let best3Bench = 0.0;\r\n  if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\r\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\r\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\r\n\r\n  let best3Dead = 0.0;\r\n  if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\r\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\r\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\r\n\r\n  // If there was no attempted success for a single lift, return zero.\r\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\r\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\r\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\r\n\r\n  return best3Squat + best3Bench + best3Dead;\r\n};\r\n\r\nexport const getProjectedEventTotalKg = (entry: Entry, event: Event): number => {\r\n  let best3Squat = 0.0;\r\n  if (event.includes(\"S\")) {\r\n    if (entry.squatStatus[0] >= 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\r\n    if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\r\n    if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\r\n  }\r\n\r\n  let best3Bench = 0.0;\r\n  if (event.includes(\"B\")) {\r\n    if (entry.benchStatus[0] >= 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\r\n    if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\r\n    if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\r\n  }\r\n\r\n  let best3Dead = 0.0;\r\n  if (event.includes(\"D\")) {\r\n    if (entry.deadliftStatus[0] >= 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\r\n    if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\r\n    if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\r\n  }\r\n\r\n  // If there was no attempted success for a single lift, return zero.\r\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\r\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\r\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\r\n\r\n  return best3Squat + best3Bench + best3Dead;\r\n};\r\n\r\nexport const getBest3SquatKg = (entry: Entry): number => {\r\n  let best3Squat = 0.0;\r\n  if (entry.squatStatus[0] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[0]);\r\n  if (entry.squatStatus[1] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[1]);\r\n  if (entry.squatStatus[2] > 0) best3Squat = Math.max(best3Squat, entry.squatKg[2]);\r\n  return best3Squat;\r\n};\r\n\r\nexport const getBest3BenchKg = (entry: Entry): number => {\r\n  let best3Bench = 0.0;\r\n  if (entry.benchStatus[0] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[0]);\r\n  if (entry.benchStatus[1] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[1]);\r\n  if (entry.benchStatus[2] > 0) best3Bench = Math.max(best3Bench, entry.benchKg[2]);\r\n  return best3Bench;\r\n};\r\n\r\nexport const getBest3DeadliftKg = (entry: Entry): number => {\r\n  let best3Dead = 0.0;\r\n  if (entry.deadliftStatus[0] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[0]);\r\n  if (entry.deadliftStatus[1] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[1]);\r\n  if (entry.deadliftStatus[2] > 0) best3Dead = Math.max(best3Dead, entry.deadliftKg[2]);\r\n  return best3Dead;\r\n};\r\n\r\n// The Total is the sum of best of the first 3 attempts of each lift.\r\nexport const getFinalTotalKg = (entry: Entry): number => {\r\n  const best3Squat = getBest3SquatKg(entry);\r\n  const best3Bench = getBest3BenchKg(entry);\r\n  const best3Dead = getBest3DeadliftKg(entry);\r\n\r\n  // If there was no attempted success for a single lift, return zero.\r\n  if (best3Squat === 0 && entry.squatStatus[0] === -1) return 0.0;\r\n  if (best3Bench === 0 && entry.benchStatus[0] === -1) return 0.0;\r\n  if (best3Dead === 0 && entry.deadliftStatus[0] === -1) return 0.0;\r\n\r\n  return best3Squat + best3Bench + best3Dead;\r\n};\r\n\r\n// Restricts the total calculation to just for the specified Event.\r\nexport const getFinalEventTotalKg = (entry: Entry, event: Event): number => {\r\n  let best3Squat = 0.0;\r\n  if (event.includes(\"S\")) {\r\n    best3Squat = getBest3SquatKg(entry);\r\n    if (best3Squat === 0) return 0.0;\r\n  }\r\n\r\n  let best3Bench = 0.0;\r\n  if (event.includes(\"B\")) {\r\n    best3Bench = getBest3BenchKg(entry);\r\n    if (best3Bench === 0) return 0.0;\r\n  }\r\n\r\n  let best3Dead = 0.0;\r\n  if (event.includes(\"D\")) {\r\n    best3Dead = getBest3DeadliftKg(entry);\r\n    if (best3Dead === 0) return 0.0;\r\n  }\r\n\r\n  return best3Squat + best3Bench + best3Dead;\r\n};\r\n\r\n// Filter entries to only get lifters that are lifting on a given day\r\nexport const getLiftersOnDay = (entries: ReadonlyArray<Entry>, day: number): Array<Entry> => {\r\n  if (!entries) {\r\n    return [];\r\n  }\r\n  return entries.filter((entry) => {\r\n    return entry.day === day;\r\n  });\r\n};\r\n\r\n// Convert a lift like \"S\" to the kg array field name, like \"squatKg\".\r\nexport const liftToAttemptFieldName = (lift: Lift): FieldKg => {\r\n  switch (lift) {\r\n    case \"S\":\r\n      return \"squatKg\";\r\n    case \"B\":\r\n      return \"benchKg\";\r\n    case \"D\":\r\n      return \"deadliftKg\";\r\n    default:\r\n      checkExhausted(lift);\r\n      return \"squatKg\";\r\n  }\r\n};\r\n\r\n// Convert a lift like \"S\" to the status array field name, like \"squatStatus\".\r\nexport const liftToStatusFieldName = (lift: Lift): FieldStatus => {\r\n  switch (lift) {\r\n    case \"S\":\r\n      return \"squatStatus\";\r\n    case \"B\":\r\n      return \"benchStatus\";\r\n    case \"D\":\r\n      return \"deadliftStatus\";\r\n    default:\r\n      checkExhausted(lift);\r\n      return \"squatStatus\";\r\n  }\r\n};\r\n\r\n// Whether the Entry has taken any attempts.\r\nexport const entryHasLifted = (entry: Entry): boolean => {\r\n  if (entry.squatStatus[0] !== 0) return true;\r\n  if (entry.benchStatus[0] !== 0) return true;\r\n  if (entry.deadliftStatus[0] !== 0) return true;\r\n  return false;\r\n};\r\n\r\n// Whether any Entry has taken any attempts on the given (day, platform). O(n).\r\nexport const liftingPresentOnPlatform = (entries: ReadonlyArray<Entry>, day: number, platform: number): boolean => {\r\n  for (let i = 0; i < entries.length; i++) {\r\n    const entry = entries[i];\r\n    if (entry.day !== day || entry.platform !== platform) continue;\r\n    if (entryHasLifted(entry)) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n// Given an array of how many platforms are on each day and the Entries,\r\n// returns an array of arrays of booleans, such that array[day-1][platform-1] is\r\n// true iff at least one Entry corresponding to that (day, platform) has\r\n// taken an attempt.\r\nexport const getWhetherPlatformsHaveLifted = (\r\n  platformsOnDays: ReadonlyArray<number>,\r\n  entries: ReadonlyArray<Entry>\r\n): Array<Array<boolean>> => {\r\n  const ret = [];\r\n  for (let day = 1; day <= platformsOnDays.length; day++) {\r\n    const platformsOnDay = platformsOnDays[day - 1];\r\n    const acc = [];\r\n    for (let platform = 1; platform <= platformsOnDay; platform++) {\r\n      acc.push(liftingPresentOnPlatform(entries, day, platform));\r\n    }\r\n    ret.push(acc);\r\n  }\r\n  return ret;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { newDefaultEntry, liftToAttemptFieldName, liftToStatusFieldName } from \"../logic/entry\";\r\nimport { RegistrationAction, OverwriteStoreAction, EnterAttemptAction, MarkLiftAction } from \"../types/actionTypes\";\r\nimport { Entry, Lift, FieldKg } from \"../types/dataTypes\";\r\nimport { RegistrationState } from \"../types/stateTypes\";\r\nimport { checkExhausted } from \"../types/utils\";\r\n\r\nconst initialState: RegistrationState = {\r\n  // The next unique ID to assign.\r\n  //\r\n  // This is stored in global state to handle the case of deleting registration\r\n  // rows during the course of lifting.\r\n  //\r\n  // A large number is used as the initial value to make it clear that this is\r\n  // specifically not an index into the `entries` array.\r\n  nextEntryId: 5000,\r\n\r\n  // Entry objects in the order they appear on the Registration page.\r\n  // This array owns all registration information.\r\n  entries: [],\r\n\r\n  // Hash from unique ID to `entries` array index.\r\n  //\r\n  // This is for the benefit of pages other than the Registration page.\r\n  // Because the sort order of the `entries` array can change arbitrarily,\r\n  // the other pages remember globally-unique identifiers for each registration,\r\n  // instead of a simple array index.\r\n  //\r\n  // This lookup table allows mapping those identifiers to whatever\r\n  // the current location of that data is in the canonical `entries` store.\r\n  lookup: {},\r\n};\r\n\r\ntype Action = RegistrationAction | EnterAttemptAction | MarkLiftAction | OverwriteStoreAction;\r\n\r\ntype NumberLookup = {\r\n  [id: number]: number;\r\n};\r\n\r\nexport default (state: RegistrationState = initialState, action: Action): RegistrationState => {\r\n  switch (action.type) {\r\n    case \"NEW_REGISTRATION\": {\r\n      // The object provides optional properties that can overwrite the default.\r\n      // Although the UI doesn't pass properties this way, debugging code does.\r\n      const obj = action.overwriteDefaults;\r\n\r\n      // Generate an entries array with one more item (without modifying the orginal).\r\n      // Object.assign() allows `obj` to overwrite defaults if present.\r\n      const entries: Array<Entry> = state.entries.slice();\r\n      const newEntry = newDefaultEntry(state.nextEntryId);\r\n\r\n      // If a previous entry exists, pre-populate some information from it.\r\n      if (entries.length > 0) {\r\n        const previousEntry = entries[entries.length - 1];\r\n        newEntry.day = previousEntry.day;\r\n        newEntry.platform = previousEntry.platform;\r\n        newEntry.flight = previousEntry.flight;\r\n      }\r\n\r\n      // Overwrite any newEntry properties with those given in obj.\r\n      entries.push(Object.assign(newEntry, obj));\r\n\r\n      // Since a new entry was added, generate a new 'lookup' object,\r\n      // mapping from the globally-unique EntryId to the array index.\r\n      // Specify type explicitly here so that we can mutate it\r\n      const lookup: NumberLookup = Object.assign({}, state.lookup);\r\n      lookup[state.nextEntryId] = entries.length - 1;\r\n\r\n      return {\r\n        ...state,\r\n        nextEntryId: state.nextEntryId + 1,\r\n        entries: entries,\r\n        lookup: lookup,\r\n      };\r\n    }\r\n\r\n    case \"DELETE_REGISTRATION\": {\r\n      const entryId = action.entryId;\r\n\r\n      // Generate an entries array without the given item.\r\n      const entries: Array<Entry> = state.entries.filter((item) => item.id !== entryId);\r\n\r\n      // Since the entry was deleted from anywhere in the array,\r\n      // construct a new lookup table from scratch.\r\n      const lookup: NumberLookup = {};\r\n\r\n      for (let i = 0; i < entries.length; i++) {\r\n        const entry = entries[i];\r\n        lookup[entry.id] = i;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        entries: entries,\r\n        lookup: lookup,\r\n      };\r\n    }\r\n\r\n    case \"UPDATE_REGISTRATION\": {\r\n      const entryId = action.entryId;\r\n      const changes = action.changes;\r\n\r\n      // Clone the entries array, since one entry will reference a new object.\r\n      const entries: Array<Entry> = state.entries.slice();\r\n\r\n      // Make a new object with just the changes overwritten,\r\n      // and reference that object from the new array.\r\n      const index = entries.findIndex((obj) => obj.id === entryId);\r\n      const newEntry = Object.assign({}, entries[index]);\r\n      entries[index] = Object.assign(newEntry, changes);\r\n\r\n      return {\r\n        ...state,\r\n        entries: entries,\r\n      };\r\n    }\r\n\r\n    case \"ENTER_ATTEMPT\": {\r\n      // Action parameters, with expected types.\r\n      const entryId = Number(action.entryId);\r\n      const lift: Lift = action.lift;\r\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\r\n      const weightKg = Number(action.weightKg);\r\n\r\n      const field: FieldKg = liftToAttemptFieldName(lift);\r\n\r\n      // Clone the entries array, since one slot will reference a new object.\r\n      const newEntries: Array<Entry> = state.entries.slice();\r\n      const index = newEntries.findIndex((obj) => obj.id === entryId);\r\n      const oldEntry = newEntries[index];\r\n\r\n      // Make a copy of the attempts array containing the new attempt.\r\n      const newarray = oldEntry[field].slice();\r\n      newarray[attemptOneIndexed - 1] = weightKg;\r\n\r\n      // Put that new attempts array into an object so we can use Object.assign().\r\n      const newfields: Partial<Entry> = {};\r\n      newfields[field] = newarray;\r\n\r\n      // Make a new entry from the old entry, with the attempts field overwritten.\r\n      newEntries[index] = Object.assign(oldEntry, newfields);\r\n\r\n      return {\r\n        ...state,\r\n        entries: newEntries,\r\n      };\r\n    }\r\n\r\n    case \"MARK_LIFT\": {\r\n      const entryId = Number(action.entryId);\r\n      const lift: Lift = action.lift;\r\n      const attemptOneIndexed = Number(action.attemptOneIndexed);\r\n      const success = Boolean(action.success);\r\n\r\n      // Map true to '1' and false to '-1'.\r\n      const status = success === true ? 1 : -1;\r\n\r\n      const fieldStatus = liftToStatusFieldName(lift);\r\n\r\n      // Clone the entries array, since one slot will reference a new object.\r\n      const newEntries: Array<Entry> = state.entries.slice();\r\n      const index = newEntries.findIndex((obj) => obj.id === entryId);\r\n      const oldEntry = newEntries[index];\r\n\r\n      // Make a copy of the status array containing the new status.\r\n      const newarray = oldEntry[fieldStatus].slice();\r\n      newarray[attemptOneIndexed - 1] = status;\r\n\r\n      // Put that new array into an object so we can use Object.assign().\r\n      const newfields: Partial<Entry> = {};\r\n      newfields[fieldStatus] = newarray;\r\n\r\n      // Make a new entry from the old entry, with the status field overwritten.\r\n      const newEntry = Object.assign({}, oldEntry);\r\n      newEntries[index] = Object.assign(newEntry, newfields);\r\n\r\n      return {\r\n        ...state,\r\n        entries: newEntries,\r\n      };\r\n    }\r\n\r\n    // Caused by clicking a \"Merge\" button on the Results page.\r\n    case \"MERGE_PLATFORM\": {\r\n      const day: number = action.day;\r\n      const platform: number = action.platform;\r\n      const platformEntries: ReadonlyArray<Entry> = action.platformEntries;\r\n\r\n      // Filter out state entries assigned to the merged (day, platform).\r\n      const newEntries = state.entries.filter((e) => {\r\n        return !(e.day === day && e.platform === platform);\r\n      });\r\n\r\n      // Get the nextEntryId: the merged entries will be reassigned IDs.\r\n      let nextEntryId: number = state.nextEntryId;\r\n\r\n      // For each incoming Entry, copy the object, assign a new ID,\r\n      // and place it in the newEntries array.\r\n      for (let i = 0; i < platformEntries.length; i++) {\r\n        const entry: Entry = Object.assign({}, platformEntries[i]);\r\n        entry.id = nextEntryId++;\r\n        newEntries.push(entry);\r\n      }\r\n\r\n      // Generate an entirely new lookup table.\r\n      const lookup: NumberLookup = {};\r\n      for (let i = 0; i < newEntries.length; i++) {\r\n        lookup[newEntries[i].id] = i;\r\n      }\r\n\r\n      // Return a new object with the new components replaced.\r\n      return {\r\n        ...state,\r\n        nextEntryId: nextEntryId,\r\n        entries: newEntries,\r\n        lookup: lookup,\r\n      };\r\n    }\r\n\r\n    case \"OVERWRITE_STORE\":\r\n      return action.store.registration;\r\n\r\n    case \"ASSIGN_LOT_NUMBERS\":\r\n      // Clone & assign entry with its new lot number.\r\n      const updatedEntries = state.entries.map((entry, index) => ({ ...entry, lot: action.lotNumbers[index] }));\r\n\r\n      return {\r\n        ...state,\r\n        entries: updatedEntries,\r\n      };\r\n\r\n    default:\r\n      checkExhausted(action);\r\n      return state;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Lifting state only tracks manual overrides.\r\n//\r\n// Outside of overrides, the state of the meet is fully-calculated by the LiftingView.\r\n//\r\n// For safety, correctness, and ease of understanding, the state of the meet is\r\n// intentionally *not* stored in the global state. It is continuously recalculated.\r\n//\r\n// Please do not attempt to store meet state in the Redux store!\r\n\r\nimport {\r\n  MarkLiftAction,\r\n  SetLiftingGroupAction,\r\n  OverrideAttemptAction,\r\n  OverrideEntryIdAction,\r\n  OverwriteStoreAction,\r\n  SetTableInfoAction,\r\n} from \"../types/actionTypes\";\r\nimport { LiftingState } from \"../types/stateTypes\";\r\nimport { checkExhausted } from \"../types/utils\";\r\n\r\nconst initialState: LiftingState = {\r\n  // Specifies the initial settings for the control widgets on the lifting page.\r\n  // The intention is that the score table sets these manually.\r\n  day: 1,\r\n  platform: 1,\r\n  flight: \"A\",\r\n  lift: \"S\",\r\n\r\n  // These properties are normally calculated, but exist here as a mechanism\r\n  // for a one-shot override of the normal logic. After being handled,\r\n  // they are unset.\r\n  overrideAttempt: null, // Allows selecting an attempt, even if it's completed.\r\n  overrideEntryId: null, // Allows selecting a lifter, even if they've already gone.\r\n\r\n  // Presentational configuration.\r\n  columnDivisionWidthPx: 90,\r\n};\r\n\r\ntype Action =\r\n  | MarkLiftAction\r\n  | SetLiftingGroupAction\r\n  | OverrideAttemptAction\r\n  | OverrideEntryIdAction\r\n  | OverwriteStoreAction\r\n  | SetTableInfoAction;\r\n\r\nexport default (state: LiftingState = initialState, action: Action): LiftingState => {\r\n  switch (action.type) {\r\n    case \"MARK_LIFT\": {\r\n      // Unset any overrides, returning to normal lifting flow.\r\n      return { ...state, overrideAttempt: null, overrideEntryId: null };\r\n    }\r\n\r\n    case \"SET_LIFTING_GROUP\":\r\n      return {\r\n        // Keep all the UI customization stuff.\r\n        ...state,\r\n\r\n        // Change all the real state stuff.\r\n        day: action.day,\r\n        platform: action.platform,\r\n        flight: action.flight,\r\n        lift: action.lift,\r\n\r\n        // If the group changes, unset any overrides.\r\n        overrideAttempt: null,\r\n        overrideEntryId: null,\r\n      };\r\n\r\n    case \"OVERRIDE_ATTEMPT\":\r\n      return { ...state, overrideAttempt: action.attempt };\r\n\r\n    case \"OVERRIDE_ENTRY_ID\":\r\n      return { ...state, overrideEntryId: action.entryId };\r\n\r\n    case \"OVERWRITE_STORE\":\r\n      return action.store.lifting;\r\n\r\n    case \"SET_TABLE_INFO\": {\r\n      const changes = action.changes;\r\n\r\n      // As a safeguard, ensure that fields unrelated to customization\r\n      // are not overwritten by this action.\r\n\r\n      // Make a new object that's state + changes, with changes taking priority.\r\n      const combined = Object.assign({}, state);\r\n      Object.assign(combined, changes);\r\n\r\n      // Source from this new combined object, with fields unrelated to customization\r\n      // deferring to the original state.\r\n      //\r\n      // So that means:\r\n      //  - Fields unrelated to customization will be the same as in 'state'.\r\n      //  - Customization fields will be from 'combined', which includes all fields\r\n      //    and allowed the 'changes' object to overwrite any of them.\r\n      return {\r\n        ...combined,\r\n\r\n        day: state.day,\r\n        platform: state.platform,\r\n        flight: state.flight,\r\n        lift: state.lift,\r\n\r\n        overrideAttempt: state.overrideAttempt,\r\n        overrideEntryId: state.overrideEntryId,\r\n      };\r\n    }\r\n\r\n    default:\r\n      checkExhausted(action);\r\n      return state;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport versionsReducer from \"./versionsReducer\";\r\nimport languageReducer from \"./languageReducer\";\r\nimport meetReducer from \"./meetReducer\";\r\nimport registrationReducer from \"./registrationReducer\";\r\nimport liftingReducer from \"./liftingReducer\";\r\n\r\n// Using combineReducers() guarantees that each part of the state object\r\n// fully bears the responsibility of managing itself by only sending a\r\n// subset of the state to the reducer.\r\n//\r\n// For example, the meetReducer() receives a new 'state' object\r\n// equal to 'state.meet' from the root. Because there is no way to access\r\n// the root state object from a child state object, the meetReducer() is\r\n// fully-encapsulated, allowing for sane reasoning about effects on global state.\r\nexport default combineReducers({\r\n  versions: versionsReducer,\r\n  language: languageReducer,\r\n  meet: meetReducer,\r\n  registration: registrationReducer,\r\n  lifting: liftingReducer,\r\n});\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { ChangeLanguageAction, OverwriteStoreAction } from \"../types/actionTypes\";\r\nimport { Language } from \"../types/dataTypes\";\r\nimport { checkExhausted } from \"../types/utils\";\r\n\r\ntype Action = ChangeLanguageAction | OverwriteStoreAction;\r\n\r\nexport default (state: Language = \"en\", action: Action): Language => {\r\n  switch (action.type) {\r\n    case \"CHANGE_LANGUAGE\":\r\n      return action.language;\r\n\r\n    case \"OVERWRITE_STORE\":\r\n      return action.store.language;\r\n\r\n    default:\r\n      checkExhausted(action);\r\n      return state;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The confirmation modal that pops up when the \"New Meet\" button is clicked.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\n\r\nimport { overwriteStore } from \"../../actions/globalActions\";\r\nimport rootReducer from \"../../reducers/rootReducer\";\r\n\r\nimport { Language } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ninterface OwnProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\ninterface StateProps {\r\n  name: string;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  overwriteStore: (language: Language) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nclass NewMeetModal extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.close}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <FormattedMessage\r\n              id=\"home.new-meet-popup-title\"\r\n              defaultMessage=\"OK to clear {meetName}?\"\r\n              values={{ meetName: this.props.name }}\r\n            />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            <FormattedMessage\r\n              id=\"home.new-meet-popup-message-clear\"\r\n              defaultMessage=\"Starting a new meet will clear all unsaved data from {meetName}.\"\r\n              values={{ meetName: this.props.name }}\r\n            />\r\n          </p>\r\n          <p>\r\n            <FormattedMessage\r\n              id=\"home.new-meet-popup-message-sure\"\r\n              defaultMessage=\"Are you sure you want to continue?\"\r\n            />\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.close} variant=\"light\">\r\n            {getString(\"common.button-close\", this.props.language)}\r\n          </Button>\r\n          <LinkContainer to=\"/meet-setup\">\r\n            <Button onClick={() => this.props.overwriteStore(this.props.language)} variant=\"primary\">\r\n              {getString(\"common.button-continue\", this.props.language)}\r\n            </Button>\r\n          </LinkContainer>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    name: state.meet.name,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    overwriteStore: (language: Language) => {\r\n      // Calling the combined root reducer with an empty object results in the child reducers\r\n      // being invoked with no argument, so they return their default states.\r\n      // We cast here since this is not how the reducer is really intended to work\r\n      const defaultStore = rootReducer({ language: language } as GlobalState, \"OVERWRITE_STORE\" as any);\r\n      dispatch(overwriteStore(defaultStore));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMeetModal);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Shows a popup with an error message.\r\n// This exists because Chrome only allows window.alert() to execute once,\r\n// because Chrome is bad and Google should feel bad.\r\n//\r\n// This is intended only for use with buttons that load external resources,\r\n// like save files and CSV registration importation files.\r\n//\r\n// Regular old errors in widgets should be reported by setting their\r\n// validationState.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\ninterface OwnProps {\r\n  error: string;\r\n  title: string;\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nclass ErrorModal extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <Modal show={this.props.show} onHide={this.props.close}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>{this.props.error}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"info\" onClick={this.props.close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, null)(ErrorModal);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport LanguageSelector from \"../components/translations/LanguageSelector\";\r\nimport { overwriteStore } from \"../actions/globalActions\";\r\n\r\nimport NewMeetModal from \"../components/home/NewMeetModal\";\r\nimport ErrorModal from \"../components/ErrorModal\";\r\n\r\nimport { getString } from \"../logic/strings\";\r\n\r\nimport { stateVersion, releaseVersion, releaseDate } from \"../versions\";\r\n\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\nimport { GlobalState } from \"../types/stateTypes\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n// Temporary CSS, just for prototyping.\r\nconst centerConsole = { maxWidth: 700, marginRight: \"auto\", marginLeft: \"auto\" };\r\n\r\ninterface StateProps {\r\n  redux: GlobalState;\r\n}\r\n\r\ninterface DispatchProps {\r\n  overwriteStore: (store: GlobalState) => void;\r\n}\r\n\r\ninterface InternalState {\r\n  showNewMeetModal: boolean;\r\n  // Controls the ErrorModal popup. Shown when error !== \"\".\r\n  error: string;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\n// Gets links and buttons to have the same vertical spacing.\r\nconst buttonMargin = { marginBottom: \"8px\" };\r\n\r\nclass HomeContainer extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.handleLoadClick = this.handleLoadClick.bind(this);\r\n    this.handleNewClick = this.handleNewClick.bind(this);\r\n    this.closeConfirmModal = this.closeConfirmModal.bind(this);\r\n    this.closeErrorModal = this.closeErrorModal.bind(this);\r\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\r\n    this.handleSaveClick = this.handleSaveClick.bind(this);\r\n    this.renderContinueButton = this.renderContinueButton.bind(this);\r\n\r\n    this.state = { showNewMeetModal: false, error: \"\" };\r\n  }\r\n\r\n  // The file input is hidden, and we want to use a button to activate it.\r\n  // This event handler is just a proxy to call the *real* event handler.\r\n  handleLoadClick = () => {\r\n    const loadhelper = document.getElementById(\"loadhelper\");\r\n    if (loadhelper !== null) {\r\n      loadhelper.click();\r\n    }\r\n  };\r\n\r\n  // When we click the new meet button\r\n  // Open the popover modal to confirm the user is willing to delete any current progress\r\n  handleNewClick = () => {\r\n    this.setState({ showNewMeetModal: true });\r\n  };\r\n\r\n  // Close the new meet confirmation modal\r\n  closeConfirmModal = () => {\r\n    this.setState({ showNewMeetModal: false });\r\n  };\r\n\r\n  closeErrorModal = () => {\r\n    this.setState({ error: \"\" });\r\n  };\r\n\r\n  // Called when a file is selected.\r\n  handleLoadFileInput = () => {\r\n    // Load the element and make sure it's an HTMLInputElement.\r\n    const loadHelper = document.getElementById(\"loadhelper\");\r\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\r\n      return;\r\n    }\r\n\r\n    const selectedFile = loadHelper.files[0];\r\n    const language = this.props.redux.language;\r\n    const rememberThis = this;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = function (event: any) {\r\n      let errored = false;\r\n      try {\r\n        const obj = JSON.parse(event.target.result);\r\n\r\n        // Basic error checking, make sure it's the right format.\r\n        if (\r\n          obj.language === undefined ||\r\n          obj.meet === undefined ||\r\n          obj.registration === undefined ||\r\n          obj.lifting === undefined\r\n        ) {\r\n          errored = true;\r\n        } else {\r\n          rememberThis.props.overwriteStore(obj);\r\n        }\r\n      } catch (err) {\r\n        errored = true;\r\n      }\r\n\r\n      if (errored) {\r\n        const error = getString(\"error.invalid-openlifter\", language);\r\n        rememberThis.setState({ error: error });\r\n      }\r\n    };\r\n    reader.readAsText(selectedFile);\r\n  };\r\n\r\n  handleSaveClick = () => {\r\n    let meetname = this.props.redux.meet.name;\r\n    if (meetname === \"\") {\r\n      meetname = getString(\"common.unnamed-filename\", this.props.redux.language);\r\n    }\r\n    meetname = meetname.replace(/ /g, \"-\");\r\n\r\n    const state = JSON.stringify(this.props.redux);\r\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\r\n    saveAs(blob, meetname + \".openlifter\");\r\n  };\r\n\r\n  renderContinueButton = () => {\r\n    const meetname = this.props.redux.meet.name;\r\n    if (meetname === \"\") {\r\n      // Unnamed or unstarted meet, so don't render a continue button\r\n      return;\r\n    }\r\n    return (\r\n      <LinkContainer to=\"/meet-setup\">\r\n        <Button variant=\"primary\" block style={buttonMargin}>\r\n          <FormattedMessage\r\n            id=\"home.button-continue\"\r\n            defaultMessage=\"Continue {meetName}\"\r\n            values={{ meetName: meetname }}\r\n          />\r\n        </Button>\r\n      </LinkContainer>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let newMeetButton = (\r\n      <Button variant=\"primary\" block onClick={this.handleNewClick} style={buttonMargin}>\r\n        <FormattedMessage id=\"home.button-new-meet\" defaultMessage=\"New Meet\" />\r\n      </Button>\r\n    );\r\n\r\n    // If no meet is active, make the button just a LinkContainer.\r\n    if (!this.props.redux.meet.name) {\r\n      newMeetButton = <LinkContainer to=\"/meet-setup\">{newMeetButton}</LinkContainer>;\r\n    }\r\n\r\n    const isBeta: boolean = releaseVersion.includes(\"eta\");\r\n    let betaWarning = null;\r\n    if (isBeta === true) {\r\n      betaWarning = (\r\n        <h3>\r\n          <p>\r\n            <FormattedMessage\r\n              id=\"home.beta-warning\"\r\n              defaultMessage=\"This is the in-development, next version of OpenLifter. The internal data format is unstable. Do not use this to run competitions!\"\r\n            />\r\n          </p>\r\n        </h3>\r\n      );\r\n    }\r\n\r\n    const wrongVersion: boolean = this.props.redux.versions.stateVersion !== stateVersion;\r\n    const dataReleaseVersion = this.props.redux.versions.releaseVersion;\r\n\r\n    const language = this.props.redux.language;\r\n\r\n    let warning = null;\r\n    if (wrongVersion === true) {\r\n      warning = (\r\n        <h3>\r\n          <p>\r\n            <b>{getString(\"common.danger-allcaps\", language)}</b>\r\n          </p>\r\n          <p>\r\n            <FormattedMessage\r\n              id=\"home.wrong-version-warning\"\r\n              defaultMessage=\"The loaded meet was made in OpenLifter {oldVersion}. That format is incompatible with OpenLifter {thisVersion}.\"\r\n              values={{ oldVersion: dataReleaseVersion, thisVersion: releaseVersion }}\r\n            />\r\n          </p>\r\n        </h3>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Card style={centerConsole} className={styles.contentArea}>\r\n        <NewMeetModal show={this.state.showNewMeetModal} close={this.closeConfirmModal} />\r\n        <ErrorModal\r\n          error={this.state.error}\r\n          title={getString(\"home.error-load-popup-title\", language)}\r\n          show={this.state.error !== \"\"}\r\n          close={this.closeErrorModal}\r\n        />\r\n\r\n        <Card.Header>\r\n          <img alt=\"OpenLifter\" src=\"openlifter.svg\" />\r\n          {betaWarning}\r\n        </Card.Header>\r\n\r\n        <Card.Body>\r\n          <Container>\r\n            <Row>{warning}</Row>\r\n            <Row style={buttonMargin}>\r\n              <Col md={8}>\r\n                {wrongVersion === false ? (\r\n                  this.renderContinueButton()\r\n                ) : (\r\n                  <a href={\"https://www.openlifter.com/releases/\" + dataReleaseVersion}>\r\n                    <Button variant=\"success\" block>\r\n                      <FormattedMessage\r\n                        id=\"home.button-switch-version\"\r\n                        defaultMessage=\"Switch to OpenLifter {otherVersion}\"\r\n                        values={{ otherVersion: dataReleaseVersion }}\r\n                      />\r\n                    </Button>\r\n                  </a>\r\n                )}\r\n              </Col>\r\n              <Col md={4}>\r\n                <LanguageSelector />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md={8}>\r\n                <div>\r\n                  {newMeetButton}\r\n\r\n                  <Button variant=\"warning\" block onClick={this.handleLoadClick} style={buttonMargin}>\r\n                    <FormattedMessage id=\"home.button-load-from-file\" defaultMessage=\"Load from File\" />\r\n                  </Button>\r\n                  <Button variant=\"success\" block onClick={this.handleSaveClick} style={buttonMargin}>\r\n                    <FormattedMessage id=\"home.button-save-tofile\" defaultMessage=\"Save to File\" />\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n\r\n              <Col md={4}>\r\n                <a\r\n                  href=\"https://gitlab.com/openpowerlifting/openlifter/issues/new\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\r\n                    <FormattedMessage id=\"home.button-report-issue\" defaultMessage=\"Report an Issue\" />\r\n                  </Button>\r\n                </a>\r\n                <a href=\"https://www.openlifter.com/support\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\r\n                    <FormattedMessage id=\"home.button-support\" defaultMessage=\"Official Support\" />\r\n                  </Button>\r\n                </a>\r\n                <a href=\"https://gitlab.com/openpowerlifting/openlifter\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\r\n                    <FormattedMessage id=\"home.button-source\" defaultMessage=\"Full Source Code\" />\r\n                  </Button>\r\n                </a>\r\n                <LinkContainer to=\"/about\">\r\n                  <Button variant=\"outline-secondary\" block style={buttonMargin}>\r\n                    <FormattedMessage id=\"home.button-credits\" defaultMessage=\"Credits and License\" />\r\n                  </Button>\r\n                </LinkContainer>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card.Body>\r\n\r\n        <Card.Footer>\r\n          <h4 style={{ textAlign: \"center\" }}>\r\n            <FormattedMessage\r\n              id=\"home.version-date\"\r\n              defaultMessage=\"Version {releaseVersion}, {releaseDate}.\"\r\n              values={{\r\n                releaseVersion: releaseVersion,\r\n                releaseDate: releaseDate,\r\n              }}\r\n            />\r\n          </h4>\r\n        </Card.Footer>\r\n\r\n        <input\r\n          id=\"loadhelper\"\r\n          type=\"file\"\r\n          accept=\".openlifter,.openlifter.txt\"\r\n          style={{ display: \"none\" }}\r\n          onChange={this.handleLoadFileInput}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n// Because we want to save the state, separate it out specifically\r\n// into a \"redux\" prop. Otherwise it gets contaminated by other props.\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  redux: {\r\n    ...state,\r\n  },\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    overwriteStore: (store) => dispatch(overwriteStore(store)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// This defines a generic text input that colors itself based upon a validation\r\n// function passed in OwnProps. On blur, an onSuccess() callback is called\r\n// if validation passes; otherwise, the text input reverts to the initial state.\r\n\r\nimport React from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { Validation } from \"../types/dataTypes\";\r\nimport { FormControlTypeHack, assertString } from \"../types/utils\";\r\n\r\ninterface OwnProps {\r\n  type?: string; // The type of input, such as \"text\" or \"number\". Defaults to \"text\".\r\n  label?: string; // Form label text, shown above the input.\r\n  initialValue: string;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  validate: (value?: string) => Validation;\r\n  onSuccess: (value: string) => void;\r\n\r\n  // By default, the bottom margin is removed so that this can be used in tables.\r\n  // Setting this to true adds the margin back. Defaults to false.\r\n  keepMargin?: boolean;\r\n}\r\n\r\ntype Props = Readonly<OwnProps>;\r\n\r\ninterface InternalState {\r\n  value: string;\r\n}\r\n\r\nclass BirthDateInput extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.validate = this.validate.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n    this.state = {\r\n      value: props.initialValue,\r\n    };\r\n  }\r\n\r\n  validate = (): Validation => {\r\n    return this.props.validate(this.state.value);\r\n  };\r\n\r\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      event.currentTarget.blur();\r\n    }\r\n  };\r\n\r\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\r\n    if (assertString(event.currentTarget.value)) {\r\n      this.setState({ value: event.currentTarget.value });\r\n    }\r\n  };\r\n\r\n  handleBlur = () => {\r\n    if (this.validate() === \"error\") {\r\n      this.setState({ value: this.props.initialValue });\r\n      return;\r\n    }\r\n\r\n    if (this.props.initialValue !== this.state.value) {\r\n      this.props.onSuccess(this.state.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const validation: Validation = this.validate();\r\n    const maybeLabel = this.props.label ? <Form.Label>{this.props.label}</Form.Label> : undefined;\r\n\r\n    return (\r\n      <Form.Group style={this.props.keepMargin === true ? undefined : { marginBottom: 0 }}>\r\n        {maybeLabel}\r\n        <Form.Control\r\n          type={this.props.type ? this.props.type : \"text\"}\r\n          placeholder={this.props.placeholder}\r\n          disabled={this.props.disabled === true ? true : undefined}\r\n          value={this.state.value}\r\n          onKeyDown={this.handleKeyDown}\r\n          onChange={this.handleChange}\r\n          onBlur={this.handleBlur}\r\n          isValid={validation === \"success\"}\r\n          isInvalid={validation === \"error\"}\r\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\r\n        />\r\n      </Form.Group>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BirthDateInput;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport {\r\n  SetMeetNameAction,\r\n  SetFormulaAction,\r\n  SetFederationAction,\r\n  SetDivisionsAction,\r\n  SetMeetDateAction,\r\n  SetLengthDaysAction,\r\n  SetPlatformsOnDaysAction,\r\n  SetInKgAction,\r\n  SetWeightClassesAction,\r\n  SetBarAndCollarsWeightKgAction,\r\n  SetPlateConfigAction,\r\n  UpdateMeetAction,\r\n} from \"../types/actionTypes\";\r\nimport { Formula, Lift, Sex } from \"../types/dataTypes\";\r\nimport { MeetState } from \"../types/stateTypes\";\r\n\r\nexport const setMeetName = (name: string): SetMeetNameAction => {\r\n  return {\r\n    type: \"SET_MEET_NAME\",\r\n    name,\r\n  };\r\n};\r\n\r\nexport const setFormula = (formula: Formula): SetFormulaAction => {\r\n  return {\r\n    type: \"SET_FORMULA\",\r\n    formula,\r\n  };\r\n};\r\n\r\nexport const setFederation = (federation: string): SetFederationAction => {\r\n  return {\r\n    type: \"SET_FEDERATION\",\r\n    federation,\r\n  };\r\n};\r\n\r\nexport const setDivisions = (divisions: ReadonlyArray<string>): SetDivisionsAction => {\r\n  return {\r\n    type: \"SET_DIVISIONS\",\r\n    divisions,\r\n  };\r\n};\r\n\r\nexport const setMeetDate = (date: string): SetMeetDateAction => {\r\n  return {\r\n    type: \"SET_MEET_DATE\",\r\n    date,\r\n  };\r\n};\r\n\r\nexport const setLengthDays = (length: number): SetLengthDaysAction => {\r\n  return {\r\n    type: \"SET_LENGTH_DAYS\",\r\n    length,\r\n  };\r\n};\r\n\r\nexport const setPlatformsOnDays = (day: number, count: number): SetPlatformsOnDaysAction => {\r\n  return {\r\n    type: \"SET_PLATFORM_COUNT\",\r\n    day: day,\r\n    count: count,\r\n  };\r\n};\r\n\r\nexport const setInKg = (inKg: boolean): SetInKgAction => {\r\n  return {\r\n    type: \"SET_IN_KG\",\r\n    inKg,\r\n  };\r\n};\r\n\r\nexport const setWeightClasses = (sex: Sex, classesKg: ReadonlyArray<number>): SetWeightClassesAction => {\r\n  return {\r\n    type: \"SET_WEIGHTCLASSES\",\r\n    sex: sex,\r\n    classesKg: classesKg,\r\n  };\r\n};\r\n\r\nexport const setBarAndCollarsWeightKg = (lift: Lift, weightKg: number): SetBarAndCollarsWeightKgAction => {\r\n  return {\r\n    type: \"SET_BAR_AND_COLLARS_WEIGHT_KG\",\r\n    lift: lift,\r\n    weightKg: weightKg,\r\n  };\r\n};\r\n\r\nexport const setPlateConfig = (weightKg: number, pairCount: number, color: string): SetPlateConfigAction => {\r\n  return {\r\n    type: \"SET_PLATE_CONFIG\",\r\n    weightKg,\r\n    pairCount,\r\n    color,\r\n  };\r\n};\r\n\r\nexport const updateMeet = (obj: Partial<MeetState>): UpdateMeetAction => {\r\n  return {\r\n    type: \"UPDATE_MEET\",\r\n    changes: obj,\r\n  };\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the MeetDate date picker.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\n\r\nimport { setMeetDate } from \"../../actions/meetSetupActions\";\r\nimport { iso8601ToLocalDate, localDateToIso8601 } from \"../../logic/date\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Language } from \"../../types/dataTypes\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n// The react-datepicker gets locale information from the \"date-fns\" package.\r\n// In order for it to understand what our Languages are, we have to register\r\n// those locales. The react-datepicker provides a helper function to do this.\r\nimport de from \"date-fns/locale/de\";\r\nimport el from \"date-fns/locale/el\";\r\nimport eo from \"date-fns/locale/eo\";\r\nimport es from \"date-fns/locale/es\";\r\nimport fr from \"date-fns/locale/fr\";\r\nimport hr from \"date-fns/locale/hr\";\r\nimport it from \"date-fns/locale/it\";\r\nimport lt from \"date-fns/locale/lt\";\r\nimport nl from \"date-fns/locale/nl\";\r\nimport pt from \"date-fns/locale/pt\";\r\nimport ru from \"date-fns/locale/ru\";\r\nimport tr from \"date-fns/locale/tr\";\r\nimport uk from \"date-fns/locale/uk\";\r\nimport zh_CN from \"date-fns/locale/zh-CN\";\r\n\r\n// Register the date-fns/locales with the DatePicker.\r\nregisterLocale(\"de\", de);\r\nregisterLocale(\"el\", el);\r\nregisterLocale(\"eo\", eo);\r\nregisterLocale(\"es\", es);\r\nregisterLocale(\"fr\", fr);\r\nregisterLocale(\"hr\", hr);\r\nregisterLocale(\"it\", it);\r\nregisterLocale(\"lt\", lt);\r\nregisterLocale(\"nl\", nl);\r\nregisterLocale(\"pt\", pt);\r\nregisterLocale(\"ru\", ru);\r\nregisterLocale(\"tr\", tr);\r\nregisterLocale(\"uk\", uk);\r\nregisterLocale(\"zh-Hans\", zh_CN);\r\n\r\ninterface StateProps {\r\n  date: string;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setMeetDate: (date: Date) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nclass MeetDate extends React.Component<Props> {\r\n  render() {\r\n    // The DatePicker manipulates a Date object in local time.\r\n    const initialDate: Date = iso8601ToLocalDate(this.props.date);\r\n\r\n    return (\r\n      <FormGroup>\r\n        <Form.Label>\r\n          <FormattedMessage id=\"meet-setup.start-date\" defaultMessage=\"Start Date\" />\r\n        </Form.Label>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <DatePicker\r\n            dateFormat=\"yyyy-MM-dd\"\r\n            selected={initialDate}\r\n            onChange={this.props.setMeetDate}\r\n            inline\r\n            locale={this.props.language}\r\n          />\r\n        </div>\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  date: state.meet.date,\r\n  language: state.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setMeetDate: (date) => {\r\n      dispatch(setMeetDate(localDateToIso8601(date)));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetDate);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// This is a generic number input with a minus and a plus surrounding it.\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\n\r\nimport { string2number, displayNumber } from \"../../logic/units\";\r\n\r\nimport { FormControlTypeHack, assertString } from \"../../types/utils\";\r\nimport { Language, Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\ninterface OwnProps {\r\n  initialValue: number; // Starting value when rendering the widget.\r\n\r\n  // Properties related to validation.\r\n  step: number; // Amount with which +/- buttons should increment or decrement.\r\n  validate: (n: number) => Validation; // Verifies that the number is valid.\r\n  onChange: (n: number) => void; // Callback. Only validated numbers are reported.\r\n\r\n  // Properties related to display.\r\n  label?: JSX.Element | string; // A label to display on the element.\r\n  marginBottom?: string; // Allows overriding margin (Forms by default have margins).\r\n}\r\n\r\ninterface StateProps {\r\n  language: Language;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\ninterface InternalState {\r\n  value: string;\r\n}\r\n\r\nclass NumberInput extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    // Handles manual text entry.\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n    // Handles the +/- buttons on the side of the input.\r\n    this.handleDecrement = this.handleDecrement.bind(this);\r\n    this.handleIncrement = this.handleIncrement.bind(this);\r\n    this.handleStep = this.handleStep.bind(this);\r\n\r\n    // Internal state, for purposes of validation.\r\n    // To avoid confusion (auto-rounding) when typing, just store a string.\r\n    this.state = {\r\n      value: displayNumber(props.initialValue, props.language),\r\n    };\r\n  }\r\n\r\n  // Used when the user manually types into the input box.\r\n  handleChange = (event: FormEvent<FormControlTypeHack>): void => {\r\n    const value = event.currentTarget.value;\r\n    if (assertString(value)) {\r\n      this.setState({ value: value });\r\n    }\r\n  };\r\n\r\n  // Used when the user removes focus from the input box.\r\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    const num: number = string2number(event.currentTarget.value);\r\n    if (this.props.validate(num) !== \"error\") {\r\n      this.props.onChange(num);\r\n    }\r\n  };\r\n\r\n  handleDecrement = (): void => {\r\n    this.handleStep(this.props.step * -1);\r\n  };\r\n\r\n  handleIncrement = (): void => {\r\n    this.handleStep(this.props.step);\r\n  };\r\n\r\n  handleStep = (step: number): void => {\r\n    let n: number = string2number(this.state.value) + step;\r\n\r\n    // Make sure that the new value is a multiple of the step.\r\n    const multiple = Math.abs(step);\r\n    if (step > 0) {\r\n      n = Math.floor(n / multiple) * multiple;\r\n    } else {\r\n      n = Math.ceil(n / multiple) * multiple;\r\n    }\r\n\r\n    if (this.props.validate(n) !== \"error\") {\r\n      this.setState({ value: displayNumber(n, this.props.language) });\r\n      this.props.onChange(n);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const validation: Validation = this.props.validate(string2number(this.state.value));\r\n\r\n    return (\r\n      <Form.Group style={{ marginBottom: `${this.props.marginBottom || undefined}` }}>\r\n        {this.props.label && <Form.Label>{this.props.label}</Form.Label>}\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <Button variant=\"outline-secondary\" style={{ borderRight: \"0px\" }} onMouseDown={this.handleDecrement}>\r\n              <FontAwesomeIcon icon={faMinus} />\r\n            </Button>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            onBlur={this.handleBlur}\r\n            isValid={validation === \"success\"}\r\n            isInvalid={validation === \"error\"}\r\n            className={validation === \"warning\" ? \"is-warning\" : undefined}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button variant=\"outline-secondary\" style={{ borderLeft: \"0px\" }} onMouseDown={this.handleIncrement}>\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Form.Group>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NumberInput);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport NumberInput from \"../common/NumberInput\";\r\n\r\nimport { setLengthDays } from \"../../actions/meetSetupActions\";\r\n\r\nimport { Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\ninterface StateProps {\r\n  lengthDays: number;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setLengthDays: (days: number) => any;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  initialValue: number;\r\n}\r\n\r\nclass MeetLength extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.validate = this.validate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      initialValue: this.props.lengthDays,\r\n    };\r\n  }\r\n\r\n  validate = (n: number): Validation => {\r\n    if (!Number.isInteger(n) || n <= 0 || n > 14) {\r\n      return \"error\";\r\n    }\r\n    return \"success\";\r\n  };\r\n\r\n  handleChange = (n: number): void => {\r\n    if (this.validate(n)) {\r\n      this.props.setLengthDays(n);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <NumberInput\r\n        initialValue={this.state.initialValue}\r\n        step={1}\r\n        validate={this.validate}\r\n        onChange={this.handleChange}\r\n        label={<FormattedMessage id=\"meet-setup.length-days\" defaultMessage=\"Days of Lifting\" />}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  lengthDays: state.meet.lengthDays,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setLengthDays: (days) => dispatch(setLengthDays(days)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetLength);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { setPlatformsOnDays } from \"../../actions/meetSetupActions\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Validation } from \"../../types/dataTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport NumberInput from \"../common/NumberInput\";\r\n\r\ninterface OwnProps {\r\n  day: number;\r\n}\r\n\r\ninterface StateProps {\r\n  platformsOnDays: ReadonlyArray<number>;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setPlatformsOnDays: (day: number, count: number) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  initialValue: number;\r\n}\r\n\r\nclass PlatformCount extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.validate = this.validate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      initialValue: this.props.platformsOnDays[this.props.day - 1],\r\n    };\r\n  }\r\n\r\n  validate = (n: number): Validation => {\r\n    if (!Number.isInteger(n) || n <= 0 || n > 20) {\r\n      return \"error\";\r\n    }\r\n    return \"success\";\r\n  };\r\n\r\n  handleChange = (n: number): void => {\r\n    if (this.validate(n) === \"success\") {\r\n      this.props.setPlatformsOnDays(this.props.day, n);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <NumberInput\r\n        initialValue={this.state.initialValue}\r\n        step={1}\r\n        validate={this.validate}\r\n        onChange={this.handleChange}\r\n        label={\r\n          <FormattedMessage\r\n            id=\"meet-setup.platforms-on-day\"\r\n            defaultMessage=\"Platforms on Day {number}\"\r\n            values={{\r\n              number: this.props.day,\r\n            }}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  platformsOnDays: state.meet.platformsOnDays,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setPlatformsOnDays: (day, count) => dispatch(setPlatformsOnDays(day, count)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlatformCount);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PlatformCount from \"./PlatformCount\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\ninterface StateProps {\r\n  lengthDays: number;\r\n}\r\n\r\ntype Props = StateProps;\r\n\r\nclass PlatformCounts extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.createPlatformInputs = this.createPlatformInputs.bind(this);\r\n  }\r\n\r\n  createPlatformInputs = () => {\r\n    const inputs = [];\r\n    const lengthDays = this.props.lengthDays;\r\n    for (let i = 1; i <= lengthDays; ++i) {\r\n      inputs.push(<PlatformCount key={i} day={i} />);\r\n    }\r\n    return inputs;\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.createPlatformInputs()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  lengthDays: state.meet.lengthDays,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PlatformCounts);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Provides widgets that overwrite rules with federation defaults.\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\n\r\nimport { updateMeet } from \"../../actions/meetSetupActions\";\r\n\r\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\r\nimport { Language } from \"../../types/dataTypes\";\r\nimport { checkExhausted, FormControlTypeHack } from \"../../types/utils\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ninterface StateProps {\r\n  federation: string;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  updateMeet: (changes: Partial<MeetState>) => void;\r\n}\r\n\r\ninterface OwnProps {\r\n  // Used by the MeetSetup component to cause component updates.\r\n  onChange: () => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps & OwnProps;\r\n\r\ntype AutoFillOption = \"Traditional\" | \"BP\" | \"GPC\" | \"SPF\" | \"UPA\" | \"USAPL\" | \"USPA\" | \"WABDL\" | \"WPC\" | \"WRPF\";\r\n\r\ninterface InternalState {\r\n  selectedOption: AutoFillOption;\r\n}\r\n\r\nconst traditionalDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"Open\",\r\n    \"Youth\",\r\n    \"T13-15\",\r\n    \"T16-17\",\r\n    \"T18-19\",\r\n    \"J20-23\",\r\n    \"S35-39\",\r\n    \"M40-44\",\r\n    \"M45-49\",\r\n    \"M50-54\",\r\n    \"M55-59\",\r\n    \"M60-64\",\r\n    \"M65-69\",\r\n    \"M70-74\",\r\n    \"M75-79\",\r\n    \"M80+\",\r\n  ],\r\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\r\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  formula: \"Wilks\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nconst bpDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"MR-O\",\r\n    \"MR-Sj\",\r\n    \"MR-Jr\",\r\n    \"MR-M1\",\r\n    \"MR-M2\",\r\n    \"MR-M3\",\r\n    \"MR-M4\",\r\n    \"MR-M5\",\r\n    \"MR-G\",\r\n    \"FR-O\",\r\n    \"FR-Sj\",\r\n    \"FR-Jr\",\r\n    \"FR-M1\",\r\n    \"FR-M2\",\r\n    \"FR-M3\",\r\n    \"FR-M4\",\r\n    \"FR-M5\",\r\n    \"FR-G\",\r\n    \"M-O\",\r\n    \"M-Sj\",\r\n    \"M-Jr\",\r\n    \"M-M1\",\r\n    \"M-M2\",\r\n    \"M-M3\",\r\n    \"M-M4\",\r\n    \"M-M5\",\r\n    \"M-G\",\r\n    \"F-O\",\r\n    \"F-Sj\",\r\n    \"F-Jr\",\r\n    \"F-M1\",\r\n    \"F-M2\",\r\n    \"F-M3\",\r\n    \"F-M4\",\r\n    \"F-M5\",\r\n    \"F-G\",\r\n  ],\r\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\r\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 72, 84],\r\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\r\n  formula: \"IPF GL Points\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: false,\r\n};\r\n\r\nconst gpcDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"F-JE\",\r\n    \"F-JR\",\r\n    \"F-M1E\",\r\n    \"F-M1R\",\r\n    \"F-M2E\",\r\n    \"F-M2R\",\r\n    \"F-M3E\",\r\n    \"F-M3R\",\r\n    \"F-M4E\",\r\n    \"F-M4R\",\r\n    \"F-M5E\",\r\n    \"F-M5R\",\r\n    \"F-M6E\",\r\n    \"F-M6R\",\r\n    \"F-M7E\",\r\n    \"F-M7R\",\r\n    \"F-M8E\",\r\n    \"F-M8R\",\r\n    \"F-M9E\",\r\n    \"F-M9R\",\r\n    \"F-OE\",\r\n    \"F-OR\",\r\n    \"F-SME\",\r\n    \"F-SMR\",\r\n    \"F-T1E\",\r\n    \"F-T1R\",\r\n    \"F-T2E\",\r\n    \"F-T2R\",\r\n    \"F-T3E\",\r\n    \"F-T3R\",\r\n    \"M-JE\",\r\n    \"M-JR\",\r\n    \"M-M1E\",\r\n    \"M-M1R\",\r\n    \"M-M2E\",\r\n    \"M-M2R\",\r\n    \"M-M3E\",\r\n    \"M-M3R\",\r\n    \"M-M4E\",\r\n    \"M-M4R\",\r\n    \"M-M5E\",\r\n    \"M-M5R\",\r\n    \"M-M6E\",\r\n    \"M-M6R\",\r\n    \"M-M7E\",\r\n    \"M-M7R\",\r\n    \"M-M8E\",\r\n    \"M-M8R\",\r\n    \"M-M9E\",\r\n    \"M-M9R\",\r\n    \"M-OE\",\r\n    \"M-OR\",\r\n    \"M-SME\",\r\n    \"M-SMR\",\r\n    \"M-T1E\",\r\n    \"M-T1R\",\r\n    \"M-T2E\",\r\n    \"M-T2R\",\r\n    \"M-T3E\",\r\n    \"M-T3R\",\r\n  ],\r\n  weightClassesKgMen: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 110],\r\n  weightClassesKgMx: [56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  formula: \"Glossbrenner\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: true,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nconst spfDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"Open\",\r\n    \"Pre-Teen\",\r\n    \"T13-15\",\r\n    \"T16-17\",\r\n    \"T18-19\",\r\n    \"J20-23\",\r\n    \"S33-39\",\r\n    \"M40-44\",\r\n    \"M45-49\",\r\n    \"M50-54\",\r\n    \"M55-59\",\r\n    \"M60-64\",\r\n    \"M65-69\",\r\n    \"M70-74\",\r\n    \"M75-79\",\r\n    \"G80+\",\r\n    \"FPM\",\r\n    \"Crossfit\",\r\n  ],\r\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110],\r\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 118, 125, 140],\r\n  formula: \"Schwartz/Malone\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nconst upaDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"FG\",\r\n    \"FG-AD\",\r\n    \"FGR\",\r\n    \"FGR-AD\",\r\n    \"FJ\",\r\n    \"FJ-AD\",\r\n    \"FJR\",\r\n    \"FJR-AD\",\r\n    \"FJRE\",\r\n    \"FJRE-AD\",\r\n    \"FM1\",\r\n    \"FM1-AD\",\r\n    \"FM1R\",\r\n    \"FM1R-AD\",\r\n    \"FM1RE\",\r\n    \"FM1RE-AD\",\r\n    \"FM2\",\r\n    \"FM2-AD\",\r\n    \"FM2R\",\r\n    \"FM2R-AD\",\r\n    \"FM2RE\",\r\n    \"FM2RE-AD\",\r\n    \"FM3\",\r\n    \"FM3-AD\",\r\n    \"FM3R\",\r\n    \"FM3R-AD\",\r\n    \"FM3RE\",\r\n    \"FM3RE-AD\",\r\n    \"FM4\",\r\n    \"FM4-AD\",\r\n    \"FM4R\",\r\n    \"FM4R-AD\",\r\n    \"FM4RE\",\r\n    \"FM4RE-AD\",\r\n    \"FM5\",\r\n    \"FM5-AD\",\r\n    \"FM5R\",\r\n    \"FM5R-AD\",\r\n    \"FM5RE\",\r\n    \"FM5RE-AD\",\r\n    \"FM6\",\r\n    \"FM6-AD\",\r\n    \"FM6R\",\r\n    \"FM6R-AD\",\r\n    \"FM6RE\",\r\n    \"FM6RE-AD\",\r\n    \"FM7\",\r\n    \"FM7-AD\",\r\n    \"FM7R\",\r\n    \"FM7R-AD\",\r\n    \"FM7RE\",\r\n    \"FM7RE-AD\",\r\n    \"FM8\",\r\n    \"FM8-AD\",\r\n    \"FM8R\",\r\n    \"FM8R-AD\",\r\n    \"FM8RE\",\r\n    \"FM8RE-AD\",\r\n    \"FM9\",\r\n    \"FM9-AD\",\r\n    \"FM9R\",\r\n    \"FM9R-AD\",\r\n    \"FM9RE\",\r\n    \"FM9RE-AD\",\r\n    \"FMX\",\r\n    \"FMX-AD\",\r\n    \"FMXR\",\r\n    \"FMXR-AD\",\r\n    \"FMXRE\",\r\n    \"FMXRE-AD\",\r\n    \"FO\",\r\n    \"FO-AD\",\r\n    \"FOR\",\r\n    \"FOR-AD\",\r\n    \"FORE\",\r\n    \"FORE-AD\",\r\n    \"FPFR\",\r\n    \"FPFR-AD\",\r\n    \"FS\",\r\n    \"FS-AD\",\r\n    \"FSR\",\r\n    \"FSR-AD\",\r\n    \"FSRE\",\r\n    \"FSRE-AD\",\r\n    \"FT1\",\r\n    \"FT1-AD\",\r\n    \"FT1R\",\r\n    \"FT1R-AD\",\r\n    \"FT1RE\",\r\n    \"FT1RE-AD\",\r\n    \"FT2\",\r\n    \"FT2-AD\",\r\n    \"FT2R\",\r\n    \"FT2R-AD\",\r\n    \"FT2RE\",\r\n    \"FT2RE-AD\",\r\n    \"FT3\",\r\n    \"FT3-AD\",\r\n    \"FT3R\",\r\n    \"FT3R-AD\",\r\n    \"FT3RE\",\r\n    \"FT3RE-AD\",\r\n    \"FTX\",\r\n    \"FTX-AD\",\r\n    \"FTXR\",\r\n    \"FTXR-AD\",\r\n    \"FTXRE\",\r\n    \"FTXRE-AD\",\r\n    \"MG\",\r\n    \"MG-AD\",\r\n    \"MGR\",\r\n    \"MGR-AD\",\r\n    \"MJ\",\r\n    \"MJ-AD\",\r\n    \"MJR\",\r\n    \"MJR-AD\",\r\n    \"MJRE\",\r\n    \"MJRE-AD\",\r\n    \"MM1\",\r\n    \"MM1-AD\",\r\n    \"MM1R\",\r\n    \"MM1R-AD\",\r\n    \"MM1RE\",\r\n    \"MM1RE-AD\",\r\n    \"MM2\",\r\n    \"MM2-AD\",\r\n    \"MM2R\",\r\n    \"MM2R-AD\",\r\n    \"MM2RE\",\r\n    \"MM2RE-AD\",\r\n    \"MM3\",\r\n    \"MM3-AD\",\r\n    \"MM3R\",\r\n    \"MM3R-AD\",\r\n    \"MM3RE\",\r\n    \"MM3RE-AD\",\r\n    \"MM4\",\r\n    \"MM4-AD\",\r\n    \"MM4R\",\r\n    \"MM4R-AD\",\r\n    \"MM4RE\",\r\n    \"MM4RE-AD\",\r\n    \"MM5\",\r\n    \"MM5-AD\",\r\n    \"MM5R\",\r\n    \"MM5R-AD\",\r\n    \"MM5RE\",\r\n    \"MM5RE-AD\",\r\n    \"MM6\",\r\n    \"MM6-AD\",\r\n    \"MM6R\",\r\n    \"MM6R-AD\",\r\n    \"MM6RE\",\r\n    \"MM6RE-AD\",\r\n    \"MM7\",\r\n    \"MM7-AD\",\r\n    \"MM7R\",\r\n    \"MM7R-AD\",\r\n    \"MM7RE\",\r\n    \"MM7RE-AD\",\r\n    \"MM8\",\r\n    \"MM8-AD\",\r\n    \"MM8R\",\r\n    \"MM8R-AD\",\r\n    \"MM8RE\",\r\n    \"MM8RE-AD\",\r\n    \"MM9\",\r\n    \"MM9-AD\",\r\n    \"MM9R\",\r\n    \"MM9R-AD\",\r\n    \"MM9RE\",\r\n    \"MM9RE-AD\",\r\n    \"MMX\",\r\n    \"MMX-AD\",\r\n    \"MMXR\",\r\n    \"MMXR-AD\",\r\n    \"MMXRE\",\r\n    \"MMXRE-AD\",\r\n    \"MO\",\r\n    \"MO-AD\",\r\n    \"MOR\",\r\n    \"MOR-AD\",\r\n    \"MORE\",\r\n    \"MORE-AD\",\r\n    \"MPFR\",\r\n    \"MPFR-AD\",\r\n    \"MS\",\r\n    \"MS-AD\",\r\n    \"MSR\",\r\n    \"MSR-AD\",\r\n    \"MSRE\",\r\n    \"MSRE-AD\",\r\n    \"MT1\",\r\n    \"MT1-AD\",\r\n    \"MT1R\",\r\n    \"MT1R-AD\",\r\n    \"MT1RE\",\r\n    \"MT1RE-AD\",\r\n    \"MT2\",\r\n    \"MT2-AD\",\r\n    \"MT2R\",\r\n    \"MT2R-AD\",\r\n    \"MT2RE\",\r\n    \"MT2RE-AD\",\r\n    \"MT3\",\r\n    \"MT3-AD\",\r\n    \"MT3R\",\r\n    \"MT3R-AD\",\r\n    \"MT3RE\",\r\n    \"MT3RE-AD\",\r\n    \"MTX\",\r\n    \"MTX-AD\",\r\n    \"MTXR\",\r\n    \"MTXR-AD\",\r\n    \"MTXRE\",\r\n    \"MTXRE-AD\",\r\n  ],\r\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\r\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  formula: \"Schwartz/Malone\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: true,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nconst usaplDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"MR-O\",\r\n    \"MR-Y\",\r\n    \"MR-Y1\",\r\n    \"MR-Y2\",\r\n    \"MR-Y3\",\r\n    \"MR-T1\",\r\n    \"MR-T2\",\r\n    \"MR-T3\",\r\n    \"MR-Jr\",\r\n    \"MR-M1a\",\r\n    \"MR-M1b\",\r\n    \"MR-M2a\",\r\n    \"MR-M2b\",\r\n    \"MR-M3a\",\r\n    \"MR-M3b\",\r\n    \"MR-M4a\",\r\n    \"MR-M4b\",\r\n    \"MR-M5a\",\r\n    \"MR-M5b\",\r\n    \"MR-M6a\",\r\n    \"MR-M6b\",\r\n    \"MR-G\",\r\n    \"M-O\",\r\n    \"M-Y\",\r\n    \"M-Y1\",\r\n    \"M-Y2\",\r\n    \"M-Y3\",\r\n    \"M-T1\",\r\n    \"M-T2\",\r\n    \"M-T3\",\r\n    \"M-Jr\",\r\n    \"M-M1a\",\r\n    \"M-M1b\",\r\n    \"M-M2a\",\r\n    \"M-M2b\",\r\n    \"M-M3a\",\r\n    \"M-M3b\",\r\n    \"M-M4a\",\r\n    \"M-M4b\",\r\n    \"M-M5a\",\r\n    \"M-M5b\",\r\n    \"M-M6a\",\r\n    \"M-M6b\",\r\n    \"M-G\",\r\n    \"FR-O\",\r\n    \"FR-Y\",\r\n    \"FR-Y1\",\r\n    \"FR-Y2\",\r\n    \"FR-Y3\",\r\n    \"FR-T1\",\r\n    \"FR-T2\",\r\n    \"FR-T3\",\r\n    \"FR-Jr\",\r\n    \"FR-M1a\",\r\n    \"FR-M1b\",\r\n    \"FR-M2a\",\r\n    \"FR-M2b\",\r\n    \"FR-M3a\",\r\n    \"FR-M3b\",\r\n    \"FR-M4a\",\r\n    \"FR-M4b\",\r\n    \"FR-M5a\",\r\n    \"FR-M5b\",\r\n    \"FR-M6a\",\r\n    \"FR-M6b\",\r\n    \"FR-G\",\r\n    \"F-O\",\r\n    \"F-Y\",\r\n    \"F-Y1\",\r\n    \"F-Y2\",\r\n    \"F-Y3\",\r\n    \"F-T1\",\r\n    \"F-T2\",\r\n    \"F-T3\",\r\n    \"F-Jr\",\r\n    \"F-M1a\",\r\n    \"F-M1b\",\r\n    \"F-M2a\",\r\n    \"F-M2b\",\r\n    \"F-M3a\",\r\n    \"F-M3b\",\r\n    \"F-M4a\",\r\n    \"F-M4b\",\r\n    \"F-M5a\",\r\n    \"F-M5b\",\r\n    \"F-M6a\",\r\n    \"F-M6b\",\r\n    \"F-G\",\r\n  ],\r\n  weightClassesKgMen: [53, 59, 66, 74, 83, 93, 105, 120],\r\n  weightClassesKgWomen: [43, 47, 52, 57, 63, 72, 84],\r\n  weightClassesKgMx: [53, 59, 66, 74, 83, 93, 105, 120],\r\n  formula: \"IPF GL Points\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: false,\r\n};\r\n\r\nconst uspaDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"Open\",\r\n    \"Y4-12\",\r\n    \"J13-15\",\r\n    \"J16-17\",\r\n    \"J18-19\",\r\n    \"J20-23\",\r\n    \"S35-39\",\r\n    \"M40-44\",\r\n    \"M45-49\",\r\n    \"M50-54\",\r\n    \"M55-59\",\r\n    \"M60-64\",\r\n    \"M65-69\",\r\n    \"M70-74\",\r\n    \"M75-79\",\r\n    \"M80+\",\r\n  ],\r\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\r\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  formula: \"Wilks2020\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nconst wabdlDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"Open\",\r\n    \"T12-13\",\r\n    \"T14-15\",\r\n    \"T16-17\",\r\n    \"T18-19\",\r\n    \"J20-25\",\r\n    \"S33-39\",\r\n    \"M40-46\",\r\n    \"M47-53\",\r\n    \"M54-60\",\r\n    \"M61-67\",\r\n    \"M68-74\",\r\n    \"M75-79\",\r\n    \"M80-84\",\r\n    \"M85-89\",\r\n    \"M90+\",\r\n  ],\r\n  weightClassesKgMen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100],\r\n  weightClassesKgMx: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 117.5, 125, 140],\r\n  formula: \"Schwartz/Malone\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nconst wpcDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"F_GCR\",\r\n    \"F_GCR_A\",\r\n    \"F_GEM\",\r\n    \"F_GEM_A\",\r\n    \"F_GES\",\r\n    \"F_GES_A\",\r\n    \"F_GR\",\r\n    \"F_GR_A\",\r\n    \"F_JCR\",\r\n    \"F_JCR_A\",\r\n    \"F_JEM\",\r\n    \"F_JEM_A\",\r\n    \"F_JES\",\r\n    \"F_JES_A\",\r\n    \"F_JR\",\r\n    \"F_JR_A\",\r\n    \"F_MCR_1\",\r\n    \"F_MCR_1_A\",\r\n    \"F_MCR_2\",\r\n    \"F_MCR_2_A\",\r\n    \"F_MCR_3\",\r\n    \"F_MCR_3_A\",\r\n    \"F_MCR_4\",\r\n    \"F_MCR_4_A\",\r\n    \"F_MCR_5\",\r\n    \"F_MCR_5_A\",\r\n    \"F_MCR_6\",\r\n    \"F_MCR_6_A\",\r\n    \"F_MCR_7\",\r\n    \"F_MCR_7_A\",\r\n    \"F_MCR_8\",\r\n    \"F_MCR_8_A\",\r\n    \"F_MCR_9\",\r\n    \"F_MCR_9_A\",\r\n    \"F_MCR_X\",\r\n    \"F_MCR_X_A\",\r\n    \"F_MEM_1\",\r\n    \"F_MEM_1_A\",\r\n    \"F_MEM_2\",\r\n    \"F_MEM_2_A\",\r\n    \"F_MEM_3\",\r\n    \"F_MEM_3_A\",\r\n    \"F_MEM_4\",\r\n    \"F_MEM_4_A\",\r\n    \"F_MEM_5\",\r\n    \"F_MEM_5_A\",\r\n    \"F_MEM_6\",\r\n    \"F_MEM_6_A\",\r\n    \"F_MEM_7\",\r\n    \"F_MEM_7_A\",\r\n    \"F_MEM_8\",\r\n    \"F_MEM_8_A\",\r\n    \"F_MEM_9\",\r\n    \"F_MEM_9_A\",\r\n    \"F_MEM_X\",\r\n    \"F_MEM_X_A\",\r\n    \"F_MES_1\",\r\n    \"F_MES_1_A\",\r\n    \"F_MES_2\",\r\n    \"F_MES_2_A\",\r\n    \"F_MES_3\",\r\n    \"F_MES_3_A\",\r\n    \"F_MES_4\",\r\n    \"F_MES_4_A\",\r\n    \"F_MES_5\",\r\n    \"F_MES_5_A\",\r\n    \"F_MES_6\",\r\n    \"F_MES_6_A\",\r\n    \"F_MES_7\",\r\n    \"F_MES_7_A\",\r\n    \"F_MES_8\",\r\n    \"F_MES_8_A\",\r\n    \"F_MES_9\",\r\n    \"F_MES_9_A\",\r\n    \"F_MES_X\",\r\n    \"F_MES_X_A\",\r\n    \"F_MR_1\",\r\n    \"F_MR_1_A\",\r\n    \"F_MR_2\",\r\n    \"F_MR_2_A\",\r\n    \"F_MR_3\",\r\n    \"F_MR_3_A\",\r\n    \"F_MR_4\",\r\n    \"F_MR_4_A\",\r\n    \"F_MR_5\",\r\n    \"F_MR_5_A\",\r\n    \"F_MR_6\",\r\n    \"F_MR_6_A\",\r\n    \"F_MR_7\",\r\n    \"F_MR_7_A\",\r\n    \"F_MR_8\",\r\n    \"F_MR_8_A\",\r\n    \"F_MR_9\",\r\n    \"F_MR_9_A\",\r\n    \"F_MR_X\",\r\n    \"F_MR_X_A\",\r\n    \"F_NEM\",\r\n    \"F_NR\",\r\n    \"F_OCR\",\r\n    \"F_OCR_A\",\r\n    \"F_OEM\",\r\n    \"F_OEM_A\",\r\n    \"F_OES\",\r\n    \"F_OES_A\",\r\n    \"F_OR\",\r\n    \"F_OR_A\",\r\n    \"F_SCR\",\r\n    \"F_SCR_A\",\r\n    \"F_SEM\",\r\n    \"F_SEM_A\",\r\n    \"F_SES\",\r\n    \"F_SES_A\",\r\n    \"F_SOR\",\r\n    \"F_SOR_A\",\r\n    \"F_SR\",\r\n    \"F_SR_A\",\r\n    \"F_TCR_1\",\r\n    \"F_TCR_1_A\",\r\n    \"F_TCR_2\",\r\n    \"F_TCR_2_A\",\r\n    \"F_TCR_3\",\r\n    \"F_TCR_3_A\",\r\n    \"F_TCR_X\",\r\n    \"F_TCR_X_A\",\r\n    \"F_TEM_1\",\r\n    \"F_TEM_1_A\",\r\n    \"F_TEM_2\",\r\n    \"F_TEM_2_A\",\r\n    \"F_TEM_3\",\r\n    \"F_TEM_3_A\",\r\n    \"F_TEM_X\",\r\n    \"F_TEM_X_A\",\r\n    \"F_TES_1\",\r\n    \"F_TES_1_A\",\r\n    \"F_TES_2\",\r\n    \"F_TES_2_A\",\r\n    \"F_TES_3\",\r\n    \"F_TES_3_A\",\r\n    \"F_TES_X\",\r\n    \"F_TES_X_A\",\r\n    \"F_TR_1\",\r\n    \"F_TR_1_A\",\r\n    \"F_TR_2\",\r\n    \"F_TR_2_A\",\r\n    \"F_TR_3\",\r\n    \"F_TR_3_A\",\r\n    \"F_TR_X\",\r\n    \"F_TR_X_A\",\r\n    \"F_YCR\",\r\n    \"F_YCR_A\",\r\n    \"F_YEM\",\r\n    \"F_YEM_A\",\r\n    \"F_YES\",\r\n    \"F_YES_A\",\r\n    \"F_YR\",\r\n    \"F_YR_A\",\r\n    \"M_GCR\",\r\n    \"M_GCR_A\",\r\n    \"M_GEM\",\r\n    \"M_GEM_A\",\r\n    \"M_GES\",\r\n    \"M_GES_A\",\r\n    \"M_GR\",\r\n    \"M_GR_A\",\r\n    \"M_JCR\",\r\n    \"M_JCR_A\",\r\n    \"M_JEM\",\r\n    \"M_JEM_A\",\r\n    \"M_JES\",\r\n    \"M_JES_A\",\r\n    \"M_JR\",\r\n    \"M_JR_A\",\r\n    \"M_MCR_1\",\r\n    \"M_MCR_1_A\",\r\n    \"M_MCR_2\",\r\n    \"M_MCR_2_A\",\r\n    \"M_MCR_3\",\r\n    \"M_MCR_3_A\",\r\n    \"M_MCR_4\",\r\n    \"M_MCR_4_A\",\r\n    \"M_MCR_5\",\r\n    \"M_MCR_5_A\",\r\n    \"M_MCR_6\",\r\n    \"M_MCR_6_A\",\r\n    \"M_MCR_7\",\r\n    \"M_MCR_7_A\",\r\n    \"M_MCR_8\",\r\n    \"M_MCR_8_A\",\r\n    \"M_MCR_9\",\r\n    \"M_MCR_9_A\",\r\n    \"M_MCR_X\",\r\n    \"M_MCR_X_A\",\r\n    \"M_MEM_1\",\r\n    \"M_MEM_1_A\",\r\n    \"M_MEM_2\",\r\n    \"M_MEM_2_A\",\r\n    \"M_MEM_3\",\r\n    \"M_MEM_3_A\",\r\n    \"M_MEM_4\",\r\n    \"M_MEM_4_A\",\r\n    \"M_MEM_5\",\r\n    \"M_MEM_5_A\",\r\n    \"M_MEM_6\",\r\n    \"M_MEM_6_A\",\r\n    \"M_MEM_7\",\r\n    \"M_MEM_7_A\",\r\n    \"M_MEM_8\",\r\n    \"M_MEM_8_A\",\r\n    \"M_MEM_9\",\r\n    \"M_MEM_9_A\",\r\n    \"M_MEM_X\",\r\n    \"M_MEM_X_A\",\r\n    \"M_MES_1\",\r\n    \"M_MES_1_A\",\r\n    \"M_MES_2\",\r\n    \"M_MES_2_A\",\r\n    \"M_MES_3\",\r\n    \"M_MES_3_A\",\r\n    \"M_MES_4\",\r\n    \"M_MES_4_A\",\r\n    \"M_MES_5\",\r\n    \"M_MES_5_A\",\r\n    \"M_MES_6\",\r\n    \"M_MES_6_A\",\r\n    \"M_MES_7\",\r\n    \"M_MES_7_A\",\r\n    \"M_MES_8\",\r\n    \"M_MES_8_A\",\r\n    \"M_MES_9\",\r\n    \"M_MES_9_A\",\r\n    \"M_MES_X\",\r\n    \"M_MES_X_A\",\r\n    \"M_MR_1\",\r\n    \"M_MR_1_A\",\r\n    \"M_MR_2\",\r\n    \"M_MR_2_A\",\r\n    \"M_MR_3\",\r\n    \"M_MR_3_A\",\r\n    \"M_MR_4\",\r\n    \"M_MR_4_A\",\r\n    \"M_MR_5\",\r\n    \"M_MR_5_A\",\r\n    \"M_MR_6\",\r\n    \"M_MR_6_A\",\r\n    \"M_MR_7\",\r\n    \"M_MR_7_A\",\r\n    \"M_MR_8\",\r\n    \"M_MR_8_A\",\r\n    \"M_MR_9\",\r\n    \"M_MR_9_A\",\r\n    \"M_MR_X\",\r\n    \"M_MR_X_A\",\r\n    \"M_NEM\",\r\n    \"M_NEM_A\",\r\n    \"M_NR\",\r\n    \"M_NR_A\",\r\n    \"M_OCR\",\r\n    \"M_OCR_A\",\r\n    \"M_OEM\",\r\n    \"M_OEM_A\",\r\n    \"M_OES\",\r\n    \"M_OES_A\",\r\n    \"M_OR\",\r\n    \"M_OR_A\",\r\n    \"M_PFEM\",\r\n    \"M_PFEM_A\",\r\n    \"M_PFR_A\",\r\n    \"M_SCR\",\r\n    \"M_SCR_A\",\r\n    \"M_SEM\",\r\n    \"M_SEM_A\",\r\n    \"M_SES\",\r\n    \"M_SES_A\",\r\n    \"M_SOEM\",\r\n    \"M_SOEM_A\",\r\n    \"M_SOR\",\r\n    \"M_SOR_A\",\r\n    \"M_SR\",\r\n    \"M_SR_A\",\r\n    \"M_TCR_1\",\r\n    \"M_TCR_1_A\",\r\n    \"M_TCR_2\",\r\n    \"M_TCR_2_A\",\r\n    \"M_TCR_3\",\r\n    \"M_TCR_3_A\",\r\n    \"M_TCR_X\",\r\n    \"M_TCR_X_A\",\r\n    \"M_TEM_1\",\r\n    \"M_TEM_1_A\",\r\n    \"M_TEM_2\",\r\n    \"M_TEM_2_A\",\r\n    \"M_TEM_3\",\r\n    \"M_TEM_3_A\",\r\n    \"M_TEM_X\",\r\n    \"M_TEM_X_A\",\r\n    \"M_TES_1\",\r\n    \"M_TES_1_A\",\r\n    \"M_TES_2\",\r\n    \"M_TES_2_A\",\r\n    \"M_TES_3\",\r\n    \"M_TES_3_A\",\r\n    \"M_TES_X\",\r\n    \"M_TES_X_A\",\r\n    \"M_TR_1\",\r\n    \"M_TR_1_A\",\r\n    \"M_TR_2\",\r\n    \"M_TR_2_A\",\r\n    \"M_TR_3\",\r\n    \"M_TR_3_A\",\r\n    \"M_TR_X\",\r\n    \"M_TR_X_A\",\r\n    \"M_YCR\",\r\n    \"M_YCR_A\",\r\n    \"M_YEM\",\r\n    \"M_YEM_A\",\r\n    \"M_YR\",\r\n    \"M_YR_A\",\r\n  ],\r\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\r\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  formula: \"Glossbrenner\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: true,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nconst wrpfDefaults: Partial<MeetState> = {\r\n  divisions: [\r\n    \"Open\",\r\n    \"Y5-13\",\r\n    \"T14-16\",\r\n    \"S17-19\",\r\n    \"J20-23\",\r\n    \"M40-44\",\r\n    \"M45-49\",\r\n    \"M50-54\",\r\n    \"M55-59\",\r\n    \"M60-64\",\r\n    \"M65-69\",\r\n    \"M70-74\",\r\n    \"M75-79\",\r\n    \"M80+\",\r\n  ],\r\n  weightClassesKgMen: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  weightClassesKgWomen: [44, 48, 52, 56, 60, 67.5, 75, 82.5, 90],\r\n  weightClassesKgMx: [52, 56, 60, 67.5, 75, 82.5, 90, 100, 110, 125, 140],\r\n  formula: \"Wilks\",\r\n  ageCoefficients: \"FosterMcCulloch\",\r\n  combineSleevesAndWraps: false,\r\n  allow4thAttempts: true,\r\n};\r\n\r\nclass AutoFillRules extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    this.state = {\r\n      selectedOption: \"Traditional\",\r\n    };\r\n  }\r\n\r\n  handleSelectChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const value = event.currentTarget.value as AutoFillOption;\r\n    // Only handle any valid values & assist the compiler in giving us a compile error if AutoFillOption has more values added\r\n    switch (value) {\r\n      case \"Traditional\":\r\n      case \"BP\":\r\n      case \"GPC\":\r\n      case \"SPF\":\r\n      case \"UPA\":\r\n      case \"USPA\":\r\n      case \"USAPL\":\r\n      case \"WABDL\":\r\n      case \"WPC\":\r\n      case \"WRPF\":\r\n        this.setState({ selectedOption: value });\r\n        break;\r\n\r\n      default:\r\n        checkExhausted(value);\r\n        throw new Error(`Expected a value that corresponds to an AutoFillOption, instead got \"${value}\"`);\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    switch (this.state.selectedOption) {\r\n      case \"Traditional\":\r\n        this.props.updateMeet(traditionalDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"BP\":\r\n        this.props.updateMeet(bpDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"GPC\":\r\n        this.props.updateMeet(gpcDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"SPF\":\r\n        this.props.updateMeet(spfDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"UPA\":\r\n        this.props.updateMeet(upaDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"USAPL\":\r\n        this.props.updateMeet(usaplDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"USPA\":\r\n        this.props.updateMeet(uspaDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"WABDL\":\r\n        this.props.updateMeet(wabdlDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"WPC\":\r\n        this.props.updateMeet(wpcDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      case \"WRPF\":\r\n        this.props.updateMeet(wrpfDefaults);\r\n        this.props.onChange();\r\n        return;\r\n      default:\r\n        checkExhausted(this.state.selectedOption);\r\n        return;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const lang = this.props.language;\r\n\r\n    const stringTraditional = getString(\"meet-setup.rules-traditional\", lang);\r\n    const stringBP = getString(\"meet-setup.rules-bp\", lang);\r\n    const stringGPC = getString(\"meet-setup.rules-gpc\", lang);\r\n    const stringSPF = getString(\"meet-setup.rules-spf\", lang);\r\n    const stringUPA = getString(\"meet-setup.rules-upa\", lang);\r\n    const stringUSAPL = getString(\"meet-setup.rules-usapl\", lang);\r\n    const stringUSPA = getString(\"meet-setup.rules-uspa\", lang);\r\n    const stringWABDL = getString(\"meet-setup.rules-wabdl\", lang);\r\n    const stringWPC = getString(\"meet-setup.rules-wpc\", lang);\r\n    const stringWRPF = getString(\"meet-setup.rules-wrpf\", lang);\r\n\r\n    return (\r\n      <div>\r\n        <FormGroup>\r\n          <Form.Label>\r\n            <FormattedMessage id=\"meet-setup.label-auto-fill-rules\" defaultMessage=\"Auto-Fill Rules\" />\r\n          </Form.Label>\r\n          <div>\r\n            <FormControl\r\n              as=\"select\"\r\n              onChange={this.handleSelectChange}\r\n              value={this.state.selectedOption}\r\n              style={{ width: \"70%\", display: \"inline-block\" }}\r\n              className=\"custom-select\"\r\n            >\r\n              <option key=\"Traditional\" value=\"Traditional\">\r\n                {stringTraditional}\r\n              </option>\r\n              <option key=\"BP\" value=\"BP\">\r\n                {stringBP}\r\n              </option>\r\n              <option key=\"GPC\" value=\"GPC\">\r\n                {stringGPC}\r\n              </option>\r\n              <option key=\"SPF\" value=\"SPF\">\r\n                {stringSPF}\r\n              </option>\r\n              <option key=\"UPA\" value=\"UPA\">\r\n                {stringUPA}\r\n              </option>\r\n              <option key=\"USAPL\" value=\"USAPL\">\r\n                {stringUSAPL}\r\n              </option>\r\n              <option key=\"USPA\" value=\"USPA\">\r\n                {stringUSPA}\r\n              </option>\r\n              <option key=\"WABDL\" value=\"WABDL\">\r\n                {stringWABDL}\r\n              </option>\r\n              <option key=\"WPC\" value=\"WPC\">\r\n                {stringWPC}\r\n              </option>\r\n              <option key=\"WRPF\" value=\"WRPF\">\r\n                {stringWRPF}\r\n              </option>\r\n            </FormControl>\r\n\r\n            <Button onClick={this.handleClick} variant=\"primary\" style={{ width: \"25%\", marginLeft: \"5%\" }}>\r\n              <FormattedMessage id=\"meet-setup.button-autofill\" defaultMessage=\"Auto-Fill\" />\r\n            </Button>\r\n          </div>\r\n        </FormGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  federation: state.meet.federation,\r\n  language: state.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    updateMeet: (changes) => dispatch(updateMeet(changes)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoFillRules);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\n\r\nimport { setDivisions } from \"../../actions/meetSetupActions\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Language } from \"../../types/dataTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ValueType } from \"react-select\";\r\n\r\nconst components = {\r\n  DropdownIndicator: null,\r\n};\r\n\r\ninterface OptionType {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst createOption = (label: string): OptionType => ({\r\n  label,\r\n  value: label,\r\n});\r\n\r\ninterface StateProps {\r\n  divisions: ReadonlyArray<string>;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setDivisions: (divisions: ReadonlyArray<string>) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  inputValue: string;\r\n  value: Array<OptionType>;\r\n}\r\n\r\nclass DivisionSelect extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    const objarray = [];\r\n    for (let i = 0; i < props.divisions.length; i++) {\r\n      const division = props.divisions[i];\r\n      objarray.push({ value: division, label: division });\r\n    }\r\n\r\n    this.state = {\r\n      inputValue: \"\",\r\n      value: objarray,\r\n    };\r\n\r\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  // Updates the Redux store if a division was added or removed.\r\n  // Since updates are synchronous, we can simply check length.\r\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\r\n    // objarray is a list of {value: \"foo\", label: \"foo\"} objects.\r\n    if (objarray.length === this.props.divisions.length) {\r\n      return;\r\n    }\r\n\r\n    // The divisions changed: save to Redux.\r\n    const divisions = [];\r\n    for (let i = 0; i < objarray.length; i++) {\r\n      divisions.push(objarray[i].label);\r\n    }\r\n    this.props.setDivisions(divisions);\r\n  };\r\n\r\n  // Handles the case of deleting an existing division.\r\n  handleChange = (value: ValueType<OptionType> | null): void => {\r\n    if (value instanceof Array) {\r\n      this.setState({ value: value });\r\n      this.maybeUpdateRedux(value);\r\n    } else if (value === null) {\r\n      this.setState({ value: [] });\r\n      this.maybeUpdateRedux([]);\r\n    }\r\n  };\r\n\r\n  // Reflects the current typing status in the state.\r\n  handleInputChange = (inputValue: string): void => {\r\n    this.setState({ inputValue: inputValue });\r\n  };\r\n\r\n  // Handles the case of creating a new division.\r\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\r\n    const { inputValue, value } = this.state;\r\n    if (!inputValue) return;\r\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\r\n      // Disallow creating redundant divisions.\r\n      for (let i = 0; i < value.length; i++) {\r\n        if (value[i].label === inputValue) {\r\n          // Silently drop the redundant division.\r\n          this.setState({ inputValue: \"\" });\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n      }\r\n\r\n      const newValue = [...value, createOption(inputValue)];\r\n      this.setState({\r\n        inputValue: \"\",\r\n        value: newValue,\r\n      });\r\n      this.maybeUpdateRedux(newValue);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inputValue, value } = this.state;\r\n    const placeholder = getString(\"meet-setup.divisions-placeholder\", this.props.language);\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>\r\n          <FormattedMessage id=\"meet-setup.divisions-label\" defaultMessage=\"Divisions (prefer short codes!)\" />\r\n        </Form.Label>\r\n        <CreatableSelect\r\n          components={components}\r\n          inputValue={inputValue}\r\n          isMulti\r\n          menuIsOpen={false}\r\n          onChange={this.handleChange}\r\n          onInputChange={this.handleInputChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          placeholder={placeholder}\r\n          value={value}\r\n        />\r\n      </Form.Group>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  divisions: state.meet.divisions,\r\n  language: state.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setDivisions: (divisions) => dispatch(setDivisions(divisions)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DivisionSelect);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport CreatableSelect from \"react-select/creatable\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\nimport { string2number, displayWeight } from \"../../logic/units\";\r\n\r\nimport { setWeightClasses } from \"../../actions/meetSetupActions\";\r\n\r\nimport { Language, Sex } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ValueType } from \"react-select\";\r\n\r\nconst components = {\r\n  DropdownIndicator: null,\r\n};\r\n\r\ntype OptionType = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst createOption = (label: string): OptionType => ({\r\n  label,\r\n  value: label.replace(\",\", \".\"),\r\n});\r\n\r\ninterface OwnProps {\r\n  label: string;\r\n  sex: Sex;\r\n}\r\n\r\ninterface StateProps {\r\n  classes: ReadonlyArray<number>;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setWeightClasses: (sex: Sex, classesKg: ReadonlyArray<number>) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  inputValue: string;\r\n  value: Array<OptionType>;\r\n}\r\n\r\nclass WeightClassesSelect extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    const objarray: Array<OptionType> = [];\r\n    for (let i = 0; i < props.classes.length; i++) {\r\n      const c = displayWeight(props.classes[i], props.language);\r\n      objarray.push(createOption(c));\r\n    }\r\n\r\n    this.state = {\r\n      inputValue: \"\",\r\n      value: objarray,\r\n    };\r\n\r\n    this.maybeUpdateRedux = this.maybeUpdateRedux.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  // Updates the Redux store if a weightclass was added or removed.\r\n  // Since updates are synchronous, we can simply check length.\r\n  maybeUpdateRedux = (objarray: Array<OptionType>): void => {\r\n    if (objarray.length === this.props.classes.length) {\r\n      return;\r\n    }\r\n\r\n    // The classes changed: save to Redux.\r\n    const classes = [];\r\n    for (let i = 0; i < objarray.length; i++) {\r\n      classes.push(Number(objarray[i].value));\r\n    }\r\n    this.props.setWeightClasses(this.props.sex, classes);\r\n  };\r\n\r\n  handleChange = (value: ValueType<OptionType> | null): void => {\r\n    if (value instanceof Array) {\r\n      this.setState({ value: value });\r\n      this.maybeUpdateRedux(value);\r\n    } else if (value === null) {\r\n      this.setState({ value: [] });\r\n      this.maybeUpdateRedux([]);\r\n    }\r\n  };\r\n\r\n  // Reflects the current typing status in the state.\r\n  handleInputChange = (inputValue: string): void => {\r\n    this.setState({ inputValue: inputValue });\r\n  };\r\n\r\n  // Handles the case of creating a new weightclass.\r\n  handleKeyDown = (event: React.KeyboardEvent<HTMLElement>): void => {\r\n    const { inputValue, value } = this.state;\r\n    if (!inputValue) return;\r\n    if (event.key === \"Enter\" || event.key === \"Tab\") {\r\n      const asNumber = string2number(inputValue);\r\n\r\n      // Disallow creating non-numeric inputs.\r\n      if (isNaN(asNumber) || !isFinite(asNumber)) {\r\n        this.setState({ inputValue: \"\" });\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n\r\n      // Disallow negative inputs.\r\n      // The string check is for negative zero.\r\n      if (asNumber < 0 || inputValue.includes(\"-\")) {\r\n        this.setState({ inputValue: \"\" });\r\n        event.preventDefault();\r\n        return;\r\n      }\r\n\r\n      // Disallow creating redundant classes.\r\n      for (let i = 0; i < value.length; i++) {\r\n        if (string2number(value[i].label) === asNumber) {\r\n          // Silently drop the redundant weightclass.\r\n          this.setState({ inputValue: \"\" });\r\n          event.preventDefault();\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Sort the new value into the array.\r\n      let newValue = [...value, createOption(inputValue)];\r\n      newValue = newValue.sort((a, b) => Number(a.value) - Number(b.value));\r\n\r\n      this.setState({\r\n        inputValue: \"\",\r\n        value: newValue,\r\n      });\r\n      this.maybeUpdateRedux(newValue);\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inputValue, value } = this.state;\r\n    const placeholder = getString(\"meet-setup.placeholder-classes\", this.props.language);\r\n\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>{this.props.label}</Form.Label>\r\n        <CreatableSelect\r\n          components={components}\r\n          inputValue={inputValue}\r\n          isMulti\r\n          menuIsOpen={false}\r\n          onChange={this.handleChange}\r\n          onInputChange={this.handleInputChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          placeholder={placeholder}\r\n          value={value}\r\n        />\r\n      </Form.Group>\r\n    );\r\n  }\r\n}\r\n\r\nconst selectClassesBySex = (sex: Sex, state: GlobalState): ReadonlyArray<number> => {\r\n  switch (sex) {\r\n    case \"M\":\r\n      return state.meet.weightClassesKgMen;\r\n    case \"F\":\r\n      return state.meet.weightClassesKgWomen;\r\n    case \"Mx\":\r\n      return state.meet.weightClassesKgMx;\r\n    default:\r\n      checkExhausted(sex);\r\n      return state.meet.weightClassesKgMen;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\r\n  return {\r\n    classes: selectClassesBySex(ownProps.sex, state),\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setWeightClasses: (sex, classesKg) => dispatch(setWeightClasses(sex, classesKg)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightClassesSelect);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setBarAndCollarsWeightKg } from \"../../actions/meetSetupActions\";\r\nimport { getString } from \"../../logic/strings\";\r\nimport { kg2lbs, lbs2kg } from \"../../logic/units\";\r\n\r\nimport { Language, Lift, Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\nimport { Dispatch } from \"redux\";\r\nimport { SetBarAndCollarsWeightKgAction } from \"../../types/actionTypes\";\r\nimport NumberInput from \"../common/NumberInput\";\r\n\r\ninterface OwnProps {\r\n  lift: Lift;\r\n}\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  squatBarAndCollarsWeightKg: number;\r\n  benchBarAndCollarsWeightKg: number;\r\n  deadliftBarAndCollarsWeightKg: number;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setBarAndCollarsWeightKg: (lift: Lift, weight: number) => SetBarAndCollarsWeightKgAction;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  initialValue: number;\r\n}\r\n\r\nclass BarAndCollarsWeightKg extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.validate = this.validate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    const weight = this.getInitialBarAndCollarsWeightKg(this.props.lift);\r\n\r\n    this.state = {\r\n      initialValue: this.props.inKg ? weight : kg2lbs(weight),\r\n    };\r\n  }\r\n\r\n  getInitialBarAndCollarsWeightKg = (lift: Lift): number => {\r\n    switch (lift) {\r\n      case \"S\":\r\n        return this.props.squatBarAndCollarsWeightKg;\r\n      case \"B\":\r\n        return this.props.benchBarAndCollarsWeightKg;\r\n      case \"D\":\r\n        return this.props.deadliftBarAndCollarsWeightKg;\r\n      default:\r\n        checkExhausted(lift);\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  validate = (n: number): Validation => {\r\n    // Don't use isInteger() since decimals are allowed.\r\n    if (isNaN(n) || !isFinite(n) || n < 5 || n > 1000) {\r\n      return \"error\";\r\n    }\r\n    return \"success\";\r\n  };\r\n\r\n  handleChange = (n: number) => {\r\n    if (this.validate(n) === \"success\") {\r\n      const weight = this.props.inKg ? n : lbs2kg(n);\r\n      this.props.setBarAndCollarsWeightKg(this.props.lift, weight);\r\n    }\r\n  };\r\n\r\n  getLiftLabel = (lift: Lift, inKg: boolean, language: Language): string => {\r\n    switch (lift) {\r\n      case \"S\":\r\n        if (inKg) {\r\n          return getString(\"meet-setup.bar-weight-squat-kg\", language);\r\n        } else {\r\n          return getString(\"meet-setup.bar-weight-squat-lbs\", language);\r\n        }\r\n      case \"B\":\r\n        if (inKg) {\r\n          return getString(\"meet-setup.bar-weight-bench-kg\", language);\r\n        } else {\r\n          return getString(\"meet-setup.bar-weight-bench-lbs\", language);\r\n        }\r\n      case \"D\":\r\n        if (inKg) {\r\n          return getString(\"meet-setup.bar-weight-deadlift-kg\", language);\r\n        } else {\r\n          return getString(\"meet-setup.bar-weight-deadlift-lbs\", language);\r\n        }\r\n      default:\r\n        checkExhausted(lift);\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <NumberInput\r\n        initialValue={this.state.initialValue}\r\n        step={2.5}\r\n        validate={this.validate}\r\n        onChange={this.handleChange}\r\n        label={this.getLiftLabel(this.props.lift, this.props.inKg, this.props.language)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  inKg: state.meet.inKg,\r\n  squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\r\n  benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\r\n  deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\r\n  language: state.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setBarAndCollarsWeightKg: (lift: Lift, weightKg: number) => dispatch(setBarAndCollarsWeightKg(lift, weightKg)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BarAndCollarsWeightKg);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines a widget for selecting a plate color.\r\n\r\nimport React from \"react\";\r\nimport { ColorResult, TwitterPicker } from \"react-color\";\r\n\r\nimport { PlateColors } from \"../../constants/plateColors\";\r\n\r\nimport styles from \"./ColorPicker.module.scss\";\r\nimport * as Popper from \"react-popper\";\r\n\r\ninterface OwnProps {\r\n  color: string;\r\n  onChange: (color: string) => void;\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\ninterface InternalState {\r\n  displayColorPicker: boolean;\r\n  color: string;\r\n\r\n  // Handle returned by setTimeout() for the timeout that closes the color\r\n  // selector popup after the mouse leaves and time has elapsed.\r\n  timeoutId: any;\r\n}\r\n\r\nclass ColorPicker extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      displayColorPicker: false,\r\n      color: props.color,\r\n      timeoutId: null,\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\r\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleClick = () => {\r\n    clearTimeout(this.state.timeoutId);\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker, timeoutId: null });\r\n  };\r\n\r\n  handleMouseLeave = () => {\r\n    // Close the popup after a second has elapsed.\r\n    // This gives the user a chance to bring the mouse back into the popup.\r\n    const timeoutId = setTimeout(() => {\r\n      this.setState({ displayColorPicker: false, timeoutId: null });\r\n    }, 1000);\r\n    this.setState({ timeoutId: timeoutId });\r\n  };\r\n\r\n  handleMouseEnter = () => {\r\n    // Prevent any close-popup timeout from executing.\r\n    if (this.state.timeoutId !== null) {\r\n      clearTimeout(this.state.timeoutId);\r\n      this.setState({ timeoutId: null });\r\n    }\r\n  };\r\n\r\n  handleChange = (color: ColorResult, event: any) => {\r\n    // @types/react-color doesn't define an event for onChange but it is published in\r\n    // their documentation: https://casesandberg.github.io/react-color/#api-onChange\r\n    // If the event was a MouseEvent|TouchEvent (i.e they clicked a swatch) we assume\r\n    // that the user wants the panel to close immediately.\r\n    const displayColorPicker = event.clientX === undefined;\r\n    const hex = color.hex.toUpperCase();\r\n    this.setState({ displayColorPicker, color: hex });\r\n    this.props.onChange(hex);\r\n  };\r\n\r\n  render() {\r\n    const colors = Object.values(PlateColors);\r\n    let picker = null;\r\n    if (this.state.displayColorPicker) {\r\n      picker = (\r\n        <Popper.Popper placement=\"bottom-end\">\r\n          {({ ref, style, placement }) => (\r\n            <div ref={ref} style={style} className={styles.onTop} data-placement={placement}>\r\n              <TwitterPicker\r\n                color={this.state.color}\r\n                colors={colors}\r\n                triangle=\"hide\"\r\n                onChange={this.handleChange as any}\r\n              />\r\n            </div>\r\n          )}\r\n        </Popper.Popper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Popper.Manager>\r\n        <div onMouseLeave={this.handleMouseLeave} onMouseEnter={this.handleMouseEnter}>\r\n          <Popper.Reference>\r\n            {({ ref }) => (\r\n              <div ref={ref} className={styles.swatch} onClick={this.handleClick}>\r\n                <div className={styles.color} style={{ background: this.state.color }} />\r\n              </div>\r\n            )}\r\n          </Popper.Reference>\r\n          {picker}\r\n        </div>\r\n      </Popper.Manager>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Displays the selector for determining how many plates are available\r\n// to loaders on one side, and what color it is, for a single plate weight.\r\n\r\nimport React, { FunctionComponent } from \"react\";\r\n\r\nimport NumberInput from \"../common/NumberInput\";\r\nimport ColorPicker from \"./ColorPicker\";\r\n\r\nimport { Validation } from \"../../types/dataTypes\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  weightKg: number;\r\n  displayWeight: string; // What kind of a plate this is.\r\n  pairCount: number;\r\n  color: string;\r\n  onChange: (weightKg: number, id: string, amount: number, color: string) => void;\r\n}\r\n\r\nconst validate = (n: number): Validation => {\r\n  if (!Number.isInteger(n) || n < 0 || n > 50) {\r\n    return \"error\";\r\n  }\r\n  return \"success\";\r\n};\r\n\r\nconst PlateInput: FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <tr key={props.id}>\r\n      <td>{props.displayWeight}</td>\r\n      <td>\r\n        <div style={{ maxWidth: \"130px\" }}>\r\n          <NumberInput\r\n            initialValue={props.pairCount}\r\n            step={1}\r\n            validate={validate}\r\n            onChange={(count) => props.onChange(props.weightKg, props.id, count, props.color)}\r\n            marginBottom=\"0px\"\r\n          />\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <ColorPicker\r\n          color={props.color}\r\n          onChange={(color) => props.onChange(props.weightKg, props.id, props.pairCount, color)}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default PlateInput;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Displays the selector for determining how many plates are available\r\n// to loaders on one side.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport { setPlateConfig } from \"../../actions/meetSetupActions\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\nimport { displayWeight, kg2lbs } from \"../../logic/units\";\r\n\r\nimport { Language, Plate } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { isString } from \"../../types/utils\";\r\nimport { isNumber } from \"util\";\r\nimport PlateInput from \"./PlateInput\";\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  plates: ReadonlyArray<Plate>;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setPlateConfig: (weight: number, amount: number, color: string) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nclass Plates extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.validateAmountInput = this.validateAmountInput.bind(this);\r\n    this.updateHandler = this.updateHandler.bind(this);\r\n  }\r\n\r\n  validateAmountInput: (id: string) => \"error\" | null | undefined = (id) => {\r\n    const widget: any = document.getElementById(id);\r\n\r\n    // This can happen because the FormGroup is created before the widget exists.\r\n    if (widget === null) return;\r\n    const value = widget.value;\r\n\r\n    if (value === undefined) return \"error\";\r\n\r\n    // Ensure that the value is an integer in a reasonable range.\r\n    const asNum = Number(value);\r\n    if (Math.floor(asNum) !== asNum) return \"error\";\r\n    if (asNum < 0 || asNum > 20) return \"error\";\r\n    if (String(asNum) !== value) return \"error\";\r\n\r\n    return null;\r\n  };\r\n\r\n  updateHandler = (weightKg: number, id: string, amount: string | number | string[] | undefined, color: string) => {\r\n    if (!isString(amount) && !isNumber(amount)) {\r\n      throw new Error(`Expected either a string or a number, but got ${amount}`);\r\n    }\r\n\r\n    if (this.validateAmountInput(id) === \"error\") {\r\n      // Although no state is set, this is used to trigger the FormGroup\r\n      // to re-query the validationState on change.\r\n      return this.setState({});\r\n    }\r\n\r\n    this.props.setPlateConfig(weightKg, Number(amount), color);\r\n  };\r\n\r\n  renderWeightRow = (weightKg: number, amount: number, color: string) => {\r\n    // The input event value isn't passed by the event, so we assign a unique ID\r\n    // and then just search the whole document for it.\r\n    const id = \"weight\" + String(weightKg);\r\n    const weight = this.props.inKg ? weightKg : kg2lbs(weightKg);\r\n\r\n    return (\r\n      <PlateInput\r\n        id={id}\r\n        key={id}\r\n        weightKg={weightKg}\r\n        displayWeight={displayWeight(weight, this.props.language)}\r\n        pairCount={amount}\r\n        color={color}\r\n        onChange={this.updateHandler}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const plateRows = this.props.plates.map((obj: Plate) =>\r\n      this.renderWeightRow(obj.weightKg, obj.pairCount, obj.color)\r\n    );\r\n    const unitId = this.props.inKg ? \"meet-setup.plates-kg\" : \"meet-setup.plates-lbs\";\r\n    const stringPlate = getString(unitId, this.props.language);\r\n\r\n    return (\r\n      <div>\r\n        <Table striped size=\"sm\" hover style={{ margin: \"0px\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>{stringPlate}</th>\r\n              <th>\r\n                <FormattedMessage id=\"meet-setup.plates-num-pairs\" defaultMessage=\"Pairs of Plates\" />\r\n              </th>\r\n              <th>\r\n                <FormattedMessage id=\"meet-setup.plates-color\" defaultMessage=\"Color\" />\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{plateRows}</tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  inKg: state.meet.inKg,\r\n  plates: state.meet.plates,\r\n  language: state.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setPlateConfig: (weightKg, amount, color) => dispatch(setPlateConfig(weightKg, amount, color)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Plates);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n//\r\n// This is a split Yes/No button\r\n\r\nimport React, { FunctionComponent } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\ninterface Props {\r\n  value: boolean;\r\n  setValue: (bool: boolean) => void;\r\n  label: JSX.Element | string;\r\n  yes: string;\r\n  no: string;\r\n}\r\n\r\nconst YesNoButton: FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label>{props.label}</Form.Label>\r\n      <ButtonGroup style={{ width: \"100%\" }}>\r\n        <Button active={!props.value} variant=\"outline-secondary\" onClick={() => props.setValue(false)}>\r\n          {props.no}\r\n        </Button>\r\n        <Button active={props.value} variant=\"outline-secondary\" onClick={() => props.setValue(true)}>\r\n          {props.yes}\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Form.Group>\r\n  );\r\n};\r\n\r\nexport default YesNoButton;\r\n","// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\n\r\nimport NumberInput from \"../common/NumberInput\";\r\nimport YesNoButton from \"../common/YesNoButton\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\nimport { updateMeet } from \"../../actions/meetSetupActions\";\r\n\r\nimport { Language, Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\ninterface StateProps {\r\n  language: Language;\r\n  attemptHandinTimeout: number;\r\n  enableAttemptHandinTimer: boolean;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setAttemptHandinTimeout: (seconds: number) => void;\r\n  setEnableAttemptHandinTimer: (bool: boolean) => void;\r\n}\r\n\r\ninterface OwnProps {\r\n  // Used by the MeetSetup component to cause component updates.\r\n  onChange: () => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps & OwnProps;\r\n\r\ninterface InternalState {\r\n  initialEnabled: boolean;\r\n  initialTimeout: number;\r\n}\r\n\r\nclass AttemptHandinTimer extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      initialEnabled: this.props.enableAttemptHandinTimer,\r\n      initialTimeout: this.props.attemptHandinTimeout,\r\n    };\r\n  }\r\n\r\n  validateAttemptHandinTimeout = (n: number): Validation => {\r\n    if (!Number.isInteger(n) || n <= 0) {\r\n      return \"error\";\r\n    }\r\n    return \"success\";\r\n  };\r\n\r\n  handleToggleChange = (bool: boolean):void => {\r\n    this.props.onChange();\r\n    this.props.setEnableAttemptHandinTimer(bool);\r\n  };\r\n\r\n  render() {\r\n    const language = this.props.language;\r\n    const stringNo = getString(\"common.response-no\", language);\r\n    const stringYes = getString(\"common.response-yes\", language);\r\n\r\n    const timeoutInput = \r\n      <NumberInput\r\n        step={5}\r\n        initialValue={this.state.initialTimeout}\r\n        label={\r\n          <FormattedMessage\r\n            id=\"meet-setup.attempt-handin-timeout\"\r\n            defaultMessage=\"Seconds before automatically setting the next attempt\"\r\n          />\r\n        }\r\n        validate={this.validateAttemptHandinTimeout}\r\n        onChange={this.props.setAttemptHandinTimeout}\r\n      />\r\n\r\n    return (\r\n      <FormGroup>\r\n        <YesNoButton\r\n          label={\r\n            <FormattedMessage\r\n              id=\"meet-setup.enable-attempt-handin-timer\"\r\n              defaultMessage=\"Enable attempt hand-in timer\"\r\n            />\r\n          }\r\n          value={this.state.initialEnabled}\r\n          setValue={this.handleToggleChange}\r\n          yes={stringYes}\r\n          no={stringNo}\r\n        />\r\n        \r\n        {this.props.enableAttemptHandinTimer ? timeoutInput : null}\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  language: state.language,\r\n  attemptHandinTimeout: state.meet.attemptHandinTimeout,\r\n  enableAttemptHandinTimer: state.meet.enableAttemptHandinTimer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setAttemptHandinTimeout: (seconds) => dispatch(updateMeet({ attemptHandinTimeout: seconds })),\r\n    setEnableAttemptHandinTimer: (bool) => dispatch(updateMeet({ enableAttemptHandinTimer: bool })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AttemptHandinTimer);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport ValidatedInput from \"../ValidatedInput\";\r\n\r\nimport MeetDate from \"./MeetDate\";\r\nimport MeetLength from \"./MeetLength\";\r\nimport PlatformCounts from \"./PlatformCounts\";\r\nimport AutoFillRules from \"./AutoFillRules\";\r\nimport DivisionSelect from \"./DivisionSelect\";\r\nimport WeightClassesSelect from \"./WeightClassesSelect\";\r\nimport BarAndCollarsWeightKg from \"./BarAndCollarsWeightKg\";\r\nimport Plates from \"./Plates\";\r\nimport AttemptHandinTimer from \"./AttemptHandinTimer\"\r\nimport YesNoButton from \"../common/YesNoButton\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\nimport { updateMeet, setInKg } from \"../../actions/meetSetupActions\";\r\n\r\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { FormControlTypeHack, assertString, assertFormula, assertAgeCoefficients } from \"../../types/utils\";\r\nimport { Language, Validation } from \"../../types/dataTypes\";\r\n\r\ninterface StateProps {\r\n  meet: MeetState;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setMeetName: (name: string) => void;\r\n  setCountry: (country: string) => void;\r\n  setState: (state: string) => void;\r\n  setCity: (city: string) => void;\r\n  setFederation: (fed: string) => void;\r\n  setCombineSleevesAndWraps: (bool: boolean) => void;\r\n  setAllow4thAttempts: (bool: boolean) => void;\r\n  setInKg: (bool: boolean) => void;\r\n  setShowAlternateUnits: (bool: boolean) => void;\r\n  setFormula: (event: FormEvent<FormControlTypeHack>) => void;\r\n  setAgeCoefficients: (event: FormEvent<FormControlTypeHack>) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  // This is a number used to derive a `key` for many widgets.\r\n  // Incrementing the ticker can be used to force a re-render.\r\n  // This is used to re-render things after the \"Auto-Fill\" button is pressed.\r\n  ticker: number;\r\n}\r\n\r\nclass MeetSetup extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ticker: 0,\r\n    };\r\n  }\r\n\r\n  validateRequiredText = (value?: string): Validation => {\r\n    if (!value) return \"warning\";\r\n    if (value.includes('\"')) return \"error\";\r\n    return \"success\";\r\n  };\r\n\r\n  render() {\r\n    // This is used as a key to force unit-dependent components to re-initialize state.\r\n    const inKg = String(this.props.meet.inKg);\r\n    const language = this.props.language;\r\n\r\n    const stringMeetName = getString(\"meet-setup.meet-name\", language);\r\n    const stringFederation = getString(\"common.federation\", language);\r\n    const stringCountry = getString(\"common.country\", language);\r\n    const stringStateProvince = getString(\"meet-setup.state-province\", language);\r\n    const stringCityTown = getString(\"meet-setup.city-town\", language);\r\n\r\n    const stringKilograms = getString(\"common.kilograms\", language);\r\n    const stringPounds = getString(\"common.pounds\", language);\r\n\r\n    const stringMensClasses = getString(\"meet-setup.label-classes-men\", language);\r\n    const stringWomensClasses = getString(\"meet-setup.label-classes-women\", language);\r\n    const stringMxClasses = getString(\"meet-setup.label-classes-mx\", language);\r\n\r\n    const stringAH = getString(\"formula.ah\", language);\r\n    const stringBodyweightMultiple = getString(\"formula.bodyweight-multiple\", language);\r\n    const stringDots = getString(\"formula.dots\", language);\r\n    const stringGlossbrenner = getString(\"formula.glossbrenner\", language);\r\n    const stringIPFGLPoints = getString(\"formula.ipf-gl-points\", language);\r\n    const stringIPFPoints = getString(\"formula.ipf-points\", language);\r\n    const stringNASAPoints = getString(\"formula.nasa-points\", language);\r\n    // const stringReshel = getString(\"formula.reshel\", language);\r\n    const stringSchwartzMalone = getString(\"formula.schwartz-malone\", language);\r\n    const stringTotal = getString(\"formula.total\", language);\r\n    const stringWilks = getString(\"formula.wilks\", language);\r\n    const stringWilks2020 = getString(\"formula.wilks2020\", language);\r\n    const stringNone = getString(\"age-coefficients.none\", language);\r\n    const stringFosterMcCulloch = getString(\"age-coefficients.foster-mcculloch\", language);\r\n    const stringNo = getString(\"common.response-no\", language);\r\n    const stringYes = getString(\"common.response-yes\", language);\r\n\r\n    const stringAlsoKilograms = getString(\"meet-setup.label-also-show-kilograms\", language);\r\n    const stringAlsoPounds = getString(\"meet-setup.label-also-show-pounds\", language);\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={4}>\r\n            <Card>\r\n              <Card.Header>\r\n                <FormattedMessage id=\"meet-setup.header-sanction-info\" defaultMessage=\"Sanction Information\" />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <ValidatedInput\r\n                  label={stringMeetName}\r\n                  placeholder={stringMeetName}\r\n                  initialValue={this.props.meet.name}\r\n                  validate={this.validateRequiredText}\r\n                  onSuccess={this.props.setMeetName}\r\n                  keepMargin={true}\r\n                />\r\n                <ValidatedInput\r\n                  label={stringFederation}\r\n                  placeholder={stringFederation}\r\n                  initialValue={this.props.meet.federation}\r\n                  validate={this.validateRequiredText}\r\n                  onSuccess={this.props.setFederation}\r\n                  keepMargin={true}\r\n                />\r\n                <ValidatedInput\r\n                  label={stringCountry}\r\n                  placeholder={stringCountry}\r\n                  initialValue={this.props.meet.country}\r\n                  validate={this.validateRequiredText}\r\n                  onSuccess={this.props.setCountry}\r\n                  keepMargin={true}\r\n                />\r\n                <ValidatedInput\r\n                  label={stringStateProvince}\r\n                  placeholder={stringStateProvince}\r\n                  initialValue={this.props.meet.state}\r\n                  validate={this.validateRequiredText}\r\n                  onSuccess={this.props.setState}\r\n                  keepMargin={true}\r\n                />\r\n                <ValidatedInput\r\n                  label={stringCityTown}\r\n                  placeholder={stringCityTown}\r\n                  initialValue={this.props.meet.city}\r\n                  validate={this.validateRequiredText}\r\n                  onSuccess={this.props.setCity}\r\n                  keepMargin={true}\r\n                />\r\n                <MeetDate />\r\n                <MeetLength />\r\n                <PlatformCounts />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card>\r\n              <Card.Header>\r\n                <FormattedMessage id=\"meet-setup.header-rules\" defaultMessage=\"Competition Rules\" />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <AutoFillRules onChange={() => this.setState({ ticker: this.state.ticker + 1 })} />\r\n                <DivisionSelect key={this.state.ticker + \"-divselect\"} />\r\n                <WeightClassesSelect sex=\"M\" label={stringMensClasses} key={this.state.ticker + \"-M\"} />\r\n                <WeightClassesSelect sex=\"F\" label={stringWomensClasses} key={this.state.ticker + \"-F\"} />\r\n                <WeightClassesSelect sex=\"Mx\" label={stringMxClasses} key={this.state.ticker + \"-Mx\"} />\r\n\r\n                <FormGroup key={this.state.ticker + \"-formula\"}>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"meet-setup.formula\" defaultMessage=\"Best Lifter Formula\" />\r\n                  </Form.Label>\r\n                  <FormControl\r\n                    as=\"select\"\r\n                    value={this.props.meet.formula}\r\n                    onChange={this.props.setFormula}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    <option value=\"AH\">{stringAH}</option>\r\n                    <option value=\"Bodyweight Multiple\">{stringBodyweightMultiple}</option>\r\n                    <option value=\"Dots\">{stringDots}</option>\r\n                    <option value=\"Glossbrenner\">{stringGlossbrenner}</option>\r\n                    <option value=\"IPF GL Points\">{stringIPFGLPoints}</option>\r\n                    <option value=\"IPF Points\">{stringIPFPoints}</option>\r\n                    <option value=\"NASA Points\">{stringNASAPoints}</option>\r\n                    <option value=\"Schwartz/Malone\">{stringSchwartzMalone}</option>\r\n                    <option value=\"Total\">{stringTotal}</option>\r\n                    <option value=\"Wilks\">{stringWilks}</option>\r\n                    <option value=\"Wilks2020\">{stringWilks2020}</option>\r\n                  </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup key={this.state.ticker + \"-ageCoefficients\"}>\r\n                  <Form.Label>\r\n                    <FormattedMessage\r\n                      id=\"meet-setup.age-coefficients\"\r\n                      defaultMessage=\"Age Coefficients for Best Juniors/Masters Lifter\"\r\n                    />\r\n                  </Form.Label>\r\n                  <FormControl\r\n                    as=\"select\"\r\n                    value={this.props.meet.ageCoefficients}\r\n                    onChange={this.props.setAgeCoefficients}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    <option key=\"None\" value=\"None\">\r\n                      {stringNone}\r\n                    </option>\r\n                    <option key=\"FosterMcCulloch\" value=\"FosterMcCulloch\">\r\n                      {stringFosterMcCulloch}\r\n                    </option>\r\n                  </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup key={this.state.ticker + \"-sleeves-wraps\"}>\r\n                  <YesNoButton\r\n                    label={\r\n                      <FormattedMessage\r\n                        id=\"meet-setup.combine-sleeves-wraps\"\r\n                        defaultMessage=\"Should Sleeves and Wraps be combined for placing?\"\r\n                      />\r\n                    }\r\n                    value={this.props.meet.combineSleevesAndWraps}\r\n                    setValue={this.props.setCombineSleevesAndWraps}\r\n                    yes={stringYes}\r\n                    no={stringNo}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup key={this.state.ticker + \"-4th-attempts\"}>\r\n                  <YesNoButton\r\n                    label={\r\n                      <FormattedMessage\r\n                        id=\"meet-setup.allow-4th-attempts\"\r\n                        defaultMessage=\"Can lifters take 4th attempts for records?\"\r\n                      />\r\n                    }\r\n                    value={this.props.meet.allow4thAttempts}\r\n                    setValue={this.props.setAllow4thAttempts}\r\n                    yes={stringYes}\r\n                    no={stringNo}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <AttemptHandinTimer \r\n                  key={this.state.ticker + \"-attempt-handin-timer\"}\r\n                  onChange={() => this.setState({ ticker: this.state.ticker + 1 })}\r\n                />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card>\r\n              <Card.Header>\r\n                <FormattedMessage id=\"meet-setup.header-loading\" defaultMessage=\"Weights and Loading\" />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <FormGroup>\r\n                  <YesNoButton\r\n                    label={\r\n                      <FormattedMessage\r\n                        id=\"meet-setup.units\"\r\n                        defaultMessage=\"In what units are attempts and bodyweights?\"\r\n                      />\r\n                    }\r\n                    value={this.props.meet.inKg}\r\n                    setValue={this.props.setInKg}\r\n                    yes={stringKilograms}\r\n                    no={stringPounds}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <YesNoButton\r\n                    label={this.props.meet.inKg ? stringAlsoPounds : stringAlsoKilograms}\r\n                    value={this.props.meet.showAlternateUnits}\r\n                    setValue={this.props.setShowAlternateUnits}\r\n                    yes={stringYes}\r\n                    no={stringNo}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <BarAndCollarsWeightKg key={\"S\" + inKg} lift=\"S\" />\r\n                <BarAndCollarsWeightKg key={\"B\" + inKg} lift=\"B\" />\r\n                <BarAndCollarsWeightKg key={\"D\" + inKg} lift=\"D\" />\r\n                <Plates />\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  meet: state.meet,\r\n  language: state.language,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\r\n  setMeetName: (name: string) => dispatch(updateMeet({ name: name })),\r\n  setCountry: (country: string) => dispatch(updateMeet({ country: country })),\r\n  setState: (state: string) => dispatch(updateMeet({ state: state })),\r\n  setCity: (city: string) => dispatch(updateMeet({ city: city })),\r\n  setFederation: (fed: string) => dispatch(updateMeet({ federation: fed })),\r\n  setCombineSleevesAndWraps: (bool) => dispatch(updateMeet({ combineSleevesAndWraps: bool })),\r\n  setAllow4thAttempts: (bool) => dispatch(updateMeet({ allow4thAttempts: bool })),\r\n  setInKg: (bool) => dispatch(setInKg(bool)),\r\n  setShowAlternateUnits: (bool) => dispatch(updateMeet({ showAlternateUnits: bool })),\r\n  setFormula: (event) =>\r\n    assertString(event.currentTarget.value) &&\r\n    assertFormula(event.currentTarget.value) &&\r\n    dispatch(updateMeet({ formula: event.currentTarget.value })),\r\n  setAgeCoefficients: (event) =>\r\n    assertString(event.currentTarget.value) &&\r\n    assertAgeCoefficients(event.currentTarget.value) &&\r\n    dispatch(updateMeet({ ageCoefficients: event.currentTarget.value })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetSetup);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\n\r\nimport MeetSetup from \"../components/meet-setup/MeetSetup\";\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\nclass MeetSetupContainer extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <div className={styles.contentArea}>\r\n        <MeetSetup />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MeetSetupContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the table of LifterRows\r\n// Generalized to accept a rowRenderer component, so that different pages\r\n// can render different row level items, while re-using the logic in this component\r\n// to handle rendering one row per lifter\r\n// This is the parent component that determines how many rows to render,\r\n// what data each row should see, etc.\r\n\r\nimport React from \"react\";\r\n\r\nimport { Entry } from \"../../types/dataTypes\";\r\n\r\ninterface OwnProps {\r\n  entries: ReadonlyArray<Entry>;\r\n  rowRenderer: any;\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nconst LifterTable: React.FC<Props> = (props) => {\r\n  const renderRows = () => {\r\n    const LifterRow = props.rowRenderer;\r\n    const { entries } = props;\r\n    return entries.map((entry) => <LifterRow key={entry.id} id={entry.id} />);\r\n  };\r\n\r\n  return <div>{renderRows()}</div>;\r\n};\r\n\r\nexport default LifterTable;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// This provides an alternative interface to react-intl's <FormattedMessage/>.\r\n//\r\n// FormattedMessage defines a *new* internationalizable message.\r\n// In contrast, LocalizedString fetches an *existing* message from the same store\r\n// and reports it as a simple string (with no formatting or parsing).\r\n//\r\n// This enables reuse of translations, so long as the IDs are stable.\r\n\r\nimport React from \"react\";\r\nimport { IntlContext } from \"react-intl\";\r\n\r\nimport { TranslationId } from \"../../types/dataTypes\";\r\n\r\ninterface OwnProps {\r\n  id: TranslationId; // As listed in 'src/translations/en.json'.\r\n}\r\n\r\ntype Props = OwnProps;\r\n\r\nclass LocalizedString extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <IntlContext.Consumer>\r\n        {(intl) => {\r\n          return intl.messages[this.props.id];\r\n        }}\r\n      </IntlContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocalizedString;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { Validation } from \"../types/dataTypes\";\r\n\r\n// Validates a string date in the ISO8601 \"YYYY-MM-DD\" format.\r\nexport const validateIso8601Date = (s?: string): Validation => {\r\n  if (typeof s !== \"string\") return \"error\";\r\n\r\n  if (s === \"\") return null;\r\n  if (s.length !== \"YYYY-MM-DD\".length) return \"error\";\r\n\r\n  const pieces: Array<string> = s.split(\"-\");\r\n  if (pieces.length !== 3) return \"error\";\r\n\r\n  const [yearStr, monthStr, dayStr] = pieces;\r\n\r\n  // Ensure that the strings only contain numbers, because the Number() constructor\r\n  // will ignore whitespace.\r\n  const onlyNumbers = /^[0-9]+$/;\r\n\r\n  if (!yearStr.match(onlyNumbers)) return \"error\";\r\n  if (!monthStr.match(onlyNumbers)) return \"error\";\r\n  if (!dayStr.match(onlyNumbers)) return \"error\";\r\n\r\n  const year = Number(yearStr);\r\n  const month = Number(monthStr);\r\n  const day = Number(dayStr);\r\n\r\n  if (isNaN(year) || isNaN(month) || isNaN(day)) return \"error\";\r\n  if (year <= 0 || month <= 0 || month > 12 || day <= 0 || day > 31) return \"error\";\r\n\r\n  // Disallow dates that are out of the plausible range for powerlifting.\r\n  if (year < 1880 || year >= new Date().getFullYear() + 2) return \"error\";\r\n\r\n  return \"success\";\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { Validation } from \"../types/dataTypes\";\r\n\r\n// Validates a simple positive integer.\r\nexport const validatePositiveInteger = (s?: string, inclusiveMax?: number): Validation => {\r\n  if (typeof s !== \"string\") return \"error\";\r\n\r\n  if (s === \"\") return null;\r\n\r\n  // Ensure that the string only contains numbers, because the Number() constructor\r\n  // will ignore whitespace.\r\n  const onlyNumbers = /^[0-9]+$/;\r\n  if (!s.match(onlyNumbers)) return \"error\";\r\n\r\n  // The number shouldn't start with an unnecessary zero.\r\n  if (s.startsWith(\"0\")) return \"error\";\r\n\r\n  const n = Number(s);\r\n\r\n  // Ensure the number is a positive integer.\r\n  if (isNaN(n)) return \"error\";\r\n  if (!Number.isInteger(n)) return \"error\";\r\n  if (n <= 0) return \"error\";\r\n\r\n  // Allow an optional inclusive upper bound check.\r\n  if (typeof inclusiveMax === \"number\") {\r\n    if (n > inclusiveMax) return \"error\";\r\n  }\r\n\r\n  return \"success\";\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport {\r\n  NewRegistrationAction,\r\n  DeleteRegistrationAction,\r\n  UpdateRegistrationAction,\r\n  MergePlatformAction,\r\n  AssignLotNumbersAction,\r\n} from \"../types/actionTypes\";\r\nimport { Entry } from \"../types/dataTypes\";\r\n\r\n// Adds a blank (or default-initalized) row to the registrations table.\r\nexport const newRegistration = (obj: Partial<Entry>): NewRegistrationAction => {\r\n  return {\r\n    type: \"NEW_REGISTRATION\",\r\n    overwriteDefaults: obj,\r\n  };\r\n};\r\n\r\n// Deletes an existing entry from the registrations table.\r\n//\r\n// Corresponding data from the registration is *not* deleted, for example\r\n// from the lifting page, but because the state.registrations.lookups map\r\n// will no longer find an associated entry given a global unique EntryId,\r\n// the data will simply stop being displayed.\r\n//\r\n// The global ID from the deleted entry is not recycled.\r\nexport const deleteRegistration = (entryId: number): DeleteRegistrationAction => {\r\n  return {\r\n    type: \"DELETE_REGISTRATION\",\r\n    entryId: entryId,\r\n  };\r\n};\r\n\r\n// Updates an existing entry in the registrations table.\r\n//\r\n// Because there are a lot of fields in a single entry, for the sake of\r\n// simplicity, this is a general method that knows how to update the\r\n// existing entry object with whatever has changed, as passed\r\n// through object properties.\r\nexport const updateRegistration = (entryId: number, obj: Partial<Entry>): UpdateRegistrationAction => {\r\n  return {\r\n    type: \"UPDATE_REGISTRATION\",\r\n    entryId: entryId,\r\n    changes: obj,\r\n  };\r\n};\r\n\r\n// Deletes all entries assigned to a given (day, platform), and then adds entries\r\n// assigned to that (day, platform) from a foreign save state.\r\nexport const mergePlatform = (day: number, platform: number, platformEntries: Array<Entry>): MergePlatformAction => {\r\n  return {\r\n    type: \"MERGE_PLATFORM\",\r\n    day: day,\r\n    platform: platform,\r\n    platformEntries: platformEntries,\r\n  };\r\n};\r\n\r\nexport const assignLotNumbers = (lotNumbers: number[]): AssignLotNumbersAction => {\r\n  return {\r\n    type: \"ASSIGN_LOT_NUMBERS\",\r\n    lotNumbers,\r\n  };\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines a row in the LifterTable on the Registration page.\r\n// This provides a bunch of widgets, each of which correspond to\r\n// the state of a single entry.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport Select, { ValueType } from \"react-select\";\r\n\r\nimport { getString, localizeEvent } from \"../../logic/strings\";\r\nimport { displayNumber, string2number } from \"../../logic/units\";\r\nimport LocalizedString from \"../translations/LocalizedString\";\r\nimport ValidatedInput from \"../ValidatedInput\";\r\n\r\nimport { validateIso8601Date } from \"../../validation/iso8601Date\";\r\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\r\n\r\nimport { deleteRegistration, updateRegistration } from \"../../actions/registrationActions\";\r\nimport { FormControlTypeHack, checkExhausted, assertString, assertFlight, assertSex } from \"../../types/utils\";\r\nimport { Entry, Equipment, Language, Validation } from \"../../types/dataTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\r\n\r\ntype OptionType = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\ninterface OwnProps {\r\n  id: number;\r\n}\r\n\r\ninterface StateProps {\r\n  meet: MeetState;\r\n  entry: Entry;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  deleteRegistration: (entryId: number) => void;\r\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\r\n}\r\n\r\ninterface InternalState {\r\n  selectedDay: number;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nclass LifterRow extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    // Store the Day in state to update the Platform options when the Day changes.\r\n    // Store the Birth Date in state to re-render when a new date is selected\r\n    this.state = {\r\n      selectedDay: props.entry.day,\r\n    };\r\n\r\n    this.deleteRegistrationClick = this.deleteRegistrationClick.bind(this);\r\n    this.updateRegistrationDay = this.updateRegistrationDay.bind(this);\r\n    this.updateRegistrationPlatform = this.updateRegistrationPlatform.bind(this);\r\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\r\n    this.updateRegistrationName = this.updateRegistrationName.bind(this);\r\n    this.updateRegistrationSex = this.updateRegistrationSex.bind(this);\r\n    this.updateRegistrationLot = this.updateRegistrationLot.bind(this);\r\n    this.updateRegistrationMemberId = this.updateRegistrationMemberId.bind(this);\r\n    this.updateRegistrationBirthDate = this.updateRegistrationBirthDate.bind(this);\r\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\r\n    this.updateRegistrationCountry = this.updateRegistrationCountry.bind(this);\r\n    this.updateRegistrationState = this.updateRegistrationState.bind(this);\r\n    this.updateRegistrationDivisions = this.updateRegistrationDivisions.bind(this);\r\n    this.updateRegistrationEvents = this.updateRegistrationEvents.bind(this);\r\n    this.updateRegistrationEquipment = this.updateRegistrationEquipment.bind(this);\r\n    this.updateRegistrationGuest = this.updateRegistrationGuest.bind(this);\r\n    this.updateRegistrationTeam = this.updateRegistrationTeam.bind(this);\r\n    this.updateRegistrationInstagram = this.updateRegistrationInstagram.bind(this);\r\n    this.updateRegistrationNotes = this.updateRegistrationNotes.bind(this);\r\n  }\r\n\r\n  deleteRegistrationClick() {\r\n    this.props.deleteRegistration(this.props.id);\r\n  }\r\n\r\n  updateRegistrationDay(event: React.FormEvent<FormControlTypeHack>) {\r\n    const day = Number(event.currentTarget.value);\r\n    const entry = this.props.entry;\r\n\r\n    // Also check whether the platform is now impossible.\r\n    let platform = entry.platform;\r\n    if (platform > this.props.meet.platformsOnDays[day - 1]) {\r\n      platform = 1; // This matches the default behavior of the select element.\r\n    }\r\n\r\n    if (entry.day !== day) {\r\n      this.setState({ selectedDay: day });\r\n      this.props.updateRegistration(this.props.id, { day: day, platform: platform });\r\n    }\r\n  }\r\n\r\n  updateRegistrationPlatform(event: React.FormEvent<FormControlTypeHack>) {\r\n    const platform = Number(event.currentTarget.value);\r\n    if (this.props.entry.platform !== platform) {\r\n      this.props.updateRegistration(this.props.id, { platform: platform });\r\n    }\r\n  }\r\n\r\n  updateRegistrationFlight(event: React.FormEvent<FormControlTypeHack>) {\r\n    const value = event.currentTarget.value;\r\n    if (this.props.entry.flight !== value && assertString(value) && assertFlight(value)) {\r\n      this.props.updateRegistration(this.props.id, { flight: value });\r\n    }\r\n  }\r\n\r\n  updateRegistrationName(event: React.FocusEvent<FormControlTypeHack>) {\r\n    const name = event.currentTarget.value;\r\n    if (this.props.entry.name !== name && assertString(name)) {\r\n      this.props.updateRegistration(this.props.id, { name: name });\r\n    }\r\n  }\r\n\r\n  updateRegistrationSex(event: React.FormEvent<FormControlTypeHack>) {\r\n    const sex = event.currentTarget.value;\r\n    if (this.props.entry.sex !== sex && assertString(sex) && assertSex(sex)) {\r\n      this.props.updateRegistration(this.props.id, { sex: sex });\r\n    }\r\n  }\r\n\r\n  updateRegistrationLot(event: React.FormEvent<FormControlTypeHack> & { currentTarget: { value: string } }) {\r\n    const asNumber = string2number(event.currentTarget.value);\r\n    if (asNumber >= 0 && asNumber !== this.props.entry.lot) {\r\n      this.props.updateRegistration(this.props.id, { lot: asNumber });\r\n    }\r\n  }\r\n\r\n  updateRegistrationMemberId = (event: React.FormEvent<FormControlTypeHack>) => {\r\n    const memberId = event.currentTarget.value;\r\n    if (this.props.entry.memberId !== memberId && typeof memberId === \"string\") {\r\n      this.props.updateRegistration(this.props.id, { memberId: memberId });\r\n    }\r\n  };\r\n\r\n  updateRegistrationBirthDate = (birthDate: string) => {\r\n    if (this.props.entry.birthDate !== birthDate) {\r\n      this.props.updateRegistration(this.props.id, { birthDate: birthDate });\r\n    }\r\n  };\r\n\r\n  updateRegistrationAge = (age: string) => {\r\n    const num = string2number(age);\r\n    if (this.props.entry.age !== num) {\r\n      this.props.updateRegistration(this.props.id, { age: num });\r\n    }\r\n  };\r\n\r\n  updateRegistrationCountry = (country: string) => {\r\n    if (this.props.entry.country !== country) {\r\n      this.props.updateRegistration(this.props.id, { country: country });\r\n    }\r\n  };\r\n\r\n  updateRegistrationState = (state: string) => {\r\n    if (this.props.entry.state !== state) {\r\n      this.props.updateRegistration(this.props.id, { state: state });\r\n    }\r\n  };\r\n\r\n  updateRegistrationDivisions(value: ValueType<OptionType> | null) {\r\n    if (value instanceof Array) {\r\n      // Since updates are synchronous, we can just compare lengths.\r\n      if (value.length !== this.props.entry.divisions.length) {\r\n        const divisions = [];\r\n        for (let i = 0; i < value.length; i++) {\r\n          divisions.push(value[i].value);\r\n        }\r\n        this.props.updateRegistration(this.props.id, { divisions: divisions });\r\n      }\r\n    } else if (value === null) {\r\n      // Null happens when the list has been cleared fully.\r\n      if (this.props.entry.divisions.length > 0) {\r\n        this.props.updateRegistration(this.props.id, { divisions: [] });\r\n      }\r\n    }\r\n  }\r\n\r\n  updateRegistrationEvents(value: ValueType<OptionType> | null) {\r\n    if (value instanceof Array) {\r\n      // Since updates are synchronous, we can just compare lengths.\r\n      if (value.length !== this.props.entry.events.length) {\r\n        const events = [];\r\n        for (let i = 0; i < value.length; i++) {\r\n          events.push(value[i].value);\r\n        }\r\n        this.props.updateRegistration(this.props.id, { events: events });\r\n      }\r\n    } else if (value === null) {\r\n      // Null happens when the list has been cleared fully.\r\n      if (this.props.entry.events.length > 0) {\r\n        this.props.updateRegistration(this.props.id, { events: [] });\r\n      }\r\n    }\r\n  }\r\n\r\n  updateRegistrationEquipment(event: React.FormEvent<FormControlTypeHack>) {\r\n    const equipment = event.currentTarget.value as Equipment;\r\n    if (this.props.entry.equipment !== equipment) {\r\n      // Ensure value is something we expect & assist the compiler in helping us\r\n      switch (equipment) {\r\n        case \"Bare\":\r\n        case \"Sleeves\":\r\n        case \"Wraps\":\r\n        case \"Single-ply\":\r\n        case \"Multi-ply\":\r\n        case \"Unlimited\":\r\n          this.props.updateRegistration(this.props.id, { equipment: equipment });\r\n          break;\r\n        default:\r\n          checkExhausted(equipment);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateRegistrationGuest = (event: React.FocusEvent<FormControlTypeHack>) => {\r\n    if (event.currentTarget.value === \"true\") {\r\n      this.props.updateRegistration(this.props.id, { guest: true });\r\n    } else {\r\n      this.props.updateRegistration(this.props.id, { guest: false });\r\n    }\r\n  };\r\n\r\n  updateRegistrationTeam = (event: React.FocusEvent<FormControlTypeHack>) => {\r\n    if (assertString(event.currentTarget.value)) {\r\n      this.props.updateRegistration(this.props.id, { team: event.currentTarget.value });\r\n    }\r\n  };\r\n\r\n  updateRegistrationInstagram = (event: React.FocusEvent<FormControlTypeHack>) => {\r\n    if (assertString(event.currentTarget.value)) {\r\n      this.props.updateRegistration(this.props.id, { instagram: event.currentTarget.value });\r\n    }\r\n  };\r\n\r\n  updateRegistrationNotes = (event: React.FocusEvent<FormControlTypeHack>) => {\r\n    if (assertString(event.currentTarget.value)) {\r\n      this.props.updateRegistration(this.props.id, { notes: event.currentTarget.value });\r\n    }\r\n  };\r\n\r\n  // FIXME: Could be shared with weighins logic.\r\n  validateAge = (value?: string): Validation => {\r\n    if (value === \"\") return null;\r\n\r\n    const pos: Validation = validatePositiveInteger(value);\r\n    if (pos === \"success\") {\r\n      // Complain a little if the age is implausible.\r\n      const n = Number(value);\r\n      if (n <= 4 || n > 100) return \"warning\";\r\n    }\r\n    return pos;\r\n  };\r\n\r\n  render() {\r\n    const entry = this.props.entry;\r\n    const language = this.props.language;\r\n\r\n    const dayOptions = [];\r\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\r\n      dayOptions.push(\r\n        <option value={i} key={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const platformOptions = [];\r\n    for (let i = 1; i <= this.props.meet.platformsOnDays[entry.day - 1]; i++) {\r\n      platformOptions.push(\r\n        <option value={i} key={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const divisionOptions = [];\r\n    for (let i = 0; i < this.props.meet.divisions.length; i++) {\r\n      const division = this.props.meet.divisions[i];\r\n      divisionOptions.push({ value: division, label: division });\r\n    }\r\n\r\n    const selectedDivisions = [];\r\n    for (let i = 0; i < entry.divisions.length; i++) {\r\n      const division = entry.divisions[i];\r\n      selectedDivisions.push({ value: division, label: division });\r\n    }\r\n\r\n    const selectedEvents = [];\r\n    for (let i = 0; i < entry.events.length; i++) {\r\n      const event = entry.events[i];\r\n      selectedEvents.push({ value: event, label: localizeEvent(event, language) });\r\n    }\r\n\r\n    const gridStyle = { padding: \"0px\", margin: \"0px\" };\r\n\r\n    const stringCountry = getString(\"common.country\", language);\r\n    const stringState = getString(\"registration.state-province\", language);\r\n    const stringBirthDatePlaceholder = getString(\"registration.birthdate-placeholder\", language);\r\n    const stringMemberIdPlaceholder = getString(\"registration.member-id-placeholder\", language);\r\n    const stringSelectPlaceholder = getString(\"common.select-placeholder\", language);\r\n\r\n    const eventOptions = [\r\n      { value: \"S\", label: getString(\"event.s\", language) },\r\n      { value: \"B\", label: getString(\"event.b\", language) },\r\n      { value: \"D\", label: getString(\"event.d\", language) },\r\n      { value: \"BD\", label: getString(\"event.bd\", language) },\r\n      { value: \"SBD\", label: getString(\"event.sbd\", language) },\r\n      { value: \"SB\", label: getString(\"event.sb\", language) },\r\n      { value: \"SD\", label: getString(\"event.sd\", language) },\r\n    ];\r\n\r\n    return (\r\n      <Card style={{ overflow: \"visible\", marginBottom: \"17px\" }}>\r\n        <Card.Header style={{ display: \"flex\" }}>\r\n          <Form.Control type=\"text\" placeholder=\"\" value={entry.name} onChange={this.updateRegistrationName} />\r\n          <Button\r\n            onClick={this.deleteRegistrationClick}\r\n            variant=\"danger\"\r\n            style={{ marginLeft: \"15px\", minWidth: \"100px\" }}\r\n          >\r\n            <LocalizedString id=\"registration.button-delete\" />\r\n          </Button>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Container style={gridStyle}>\r\n            <Row>\r\n              {/* Day */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.day-label\" defaultMessage=\"Day\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    value={this.state.selectedDay.toString()}\r\n                    as=\"select\"\r\n                    onChange={this.updateRegistrationDay}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    {dayOptions}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Platform */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.platform-label\" defaultMessage=\"Platform\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    value={entry.platform.toString()}\r\n                    as=\"select\"\r\n                    onChange={this.updateRegistrationPlatform}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    {platformOptions}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Flight */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.flight-label\" defaultMessage=\"Flight\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    value={entry.flight}\r\n                    as=\"select\"\r\n                    onChange={this.updateRegistrationFlight}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    <option value=\"A\">{getString(\"flight.a\", language)}</option>\r\n                    <option value=\"B\">{getString(\"flight.b\", language)}</option>\r\n                    <option value=\"C\">{getString(\"flight.c\", language)}</option>\r\n                    <option value=\"D\">{getString(\"flight.d\", language)}</option>\r\n                    <option value=\"E\">{getString(\"flight.e\", language)}</option>\r\n                    <option value=\"F\">{getString(\"flight.f\", language)}</option>\r\n                    <option value=\"G\">{getString(\"flight.g\", language)}</option>\r\n                    <option value=\"H\">{getString(\"flight.h\", language)}</option>\r\n                    <option value=\"I\">{getString(\"flight.i\", language)}</option>\r\n                    <option value=\"J\">{getString(\"flight.j\", language)}</option>\r\n                    <option value=\"K\">{getString(\"flight.k\", language)}</option>\r\n                    <option value=\"L\">{getString(\"flight.l\", language)}</option>\r\n                    <option value=\"M\">{getString(\"flight.m\", language)}</option>\r\n                    <option value=\"N\">{getString(\"flight.n\", language)}</option>\r\n                    <option value=\"O\">{getString(\"flight.o\", language)}</option>\r\n                    <option value=\"P\">{getString(\"flight.p\", language)}</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Sex */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.sex-label\" defaultMessage=\"Sex\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    value={entry.sex}\r\n                    as=\"select\"\r\n                    onChange={this.updateRegistrationSex}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    <option value=\"M\">{getString(\"sex.m\", language)}</option>\r\n                    <option value=\"F\">{getString(\"sex.f\", language)}</option>\r\n                    <option value=\"Mx\">{getString(\"sex.mx\", language)}</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Equipment */}\r\n              <Col md={2}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.equipment-label\" defaultMessage=\"Equipment\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    value={entry.equipment}\r\n                    as=\"select\"\r\n                    onChange={this.updateRegistrationEquipment}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    <option value=\"Bare\">{getString(\"equipment.bare\", language)}</option>\r\n                    <option value=\"Sleeves\">{getString(\"equipment.sleeves\", language)}</option>\r\n                    <option value=\"Wraps\">{getString(\"equipment.wraps\", language)}</option>\r\n                    <option value=\"Single-ply\">{getString(\"equipment.single-ply\", language)}</option>\r\n                    <option value=\"Multi-ply\">{getString(\"equipment.multi-ply\", language)}</option>\r\n                    <option value=\"Unlimited\">{getString(\"equipment.unlimited\", language)}</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Divisions */}\r\n              <Col md={4}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.divisions-label\" defaultMessage=\"Divisions\" />\r\n                  </Form.Label>\r\n                  <Select\r\n                    menuPlacement=\"auto\"\r\n                    placeholder={stringSelectPlaceholder}\r\n                    options={divisionOptions}\r\n                    isClearable={false}\r\n                    isMulti={true}\r\n                    onChange={this.updateRegistrationDivisions}\r\n                    value={selectedDivisions}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Events */}\r\n              <Col md={2}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.events-label\" defaultMessage=\"Events\" />\r\n                  </Form.Label>\r\n                  <Select\r\n                    menuPlacement=\"auto\"\r\n                    placeholder={stringSelectPlaceholder}\r\n                    options={eventOptions}\r\n                    isClearable={false}\r\n                    isMulti={true}\r\n                    onChange={this.updateRegistrationEvents}\r\n                    value={selectedEvents}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container style={gridStyle}>\r\n            <Row>\r\n              {/* Date of Birth */}\r\n              <Col md={2}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.birthdate-label\" defaultMessage=\"Date of Birth\" />\r\n                  </Form.Label>\r\n                  <ValidatedInput\r\n                    initialValue={entry.birthDate}\r\n                    placeholder={stringBirthDatePlaceholder}\r\n                    validate={validateIso8601Date}\r\n                    onSuccess={this.updateRegistrationBirthDate}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Age */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>{getString(\"common.age\", language)}</Form.Label>\r\n                  <ValidatedInput\r\n                    initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\r\n                    placeholder={getString(\"common.age\", language)}\r\n                    validate={this.validateAge}\r\n                    onSuccess={this.updateRegistrationAge}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Member ID */}\r\n              <Col md={2}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.member-id-label\" defaultMessage=\"Member ID\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={stringMemberIdPlaceholder}\r\n                    value={entry.memberId}\r\n                    onChange={this.updateRegistrationMemberId}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Country */}\r\n              <Col md={2}>\r\n                <Form.Group>\r\n                  <Form.Label>{stringCountry}</Form.Label>\r\n                  <ValidatedInput\r\n                    initialValue={entry.country}\r\n                    placeholder={stringCountry}\r\n                    validate={(s) => (s === \"\" ? null : \"success\")}\r\n                    onSuccess={this.updateRegistrationCountry}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* State */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>{stringState}</Form.Label>\r\n                  <ValidatedInput\r\n                    initialValue={entry.state}\r\n                    placeholder={stringState}\r\n                    validate={(s) => (s === \"\" ? null : \"success\")}\r\n                    onSuccess={this.updateRegistrationState}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Lot Number */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.lot-label\" defaultMessage=\"Lot #\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={entry.lot === 0 ? \"\" : entry.lot.toString()}\r\n                    onChange={this.updateRegistrationLot}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Guest */}\r\n              <Col md={1}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.guest-label\" defaultMessage=\"Guest\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    value={entry.guest ? entry.guest.toString() : \"false\"}\r\n                    as=\"select\"\r\n                    onChange={this.updateRegistrationGuest}\r\n                    className=\"custom-select\"\r\n                  >\r\n                    <option value=\"false\">{getString(\"common.response-no\", language)}</option>\r\n                    <option value=\"true\">{getString(\"common.response-yes\", language)}</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Team */}\r\n              <Col md={2}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.team-label\" defaultMessage=\"Team\" />\r\n                  </Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"\" value={entry.team} onChange={this.updateRegistrationTeam} />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n          <Container style={gridStyle}>\r\n            <Row>\r\n              {/* Notes */}\r\n              <Col md={2}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.instagram-label\" defaultMessage=\"Instagram\" />\r\n                  </Form.Label>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"\"\r\n                      value={entry.instagram}\r\n                      onChange={this.updateRegistrationInstagram}\r\n                    />\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </Col>\r\n\r\n              {/* Notes */}\r\n              <Col md={10}>\r\n                <Form.Group>\r\n                  <Form.Label>\r\n                    <FormattedMessage id=\"registration.notes-label\" defaultMessage=\"Notes (for your personal use)\" />\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"\"\r\n                    value={entry.notes}\r\n                    onChange={this.updateRegistrationNotes}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\r\n  // Only have props for the entry corresponding to this one row.\r\n  const lookup = state.registration.lookup;\r\n  const entry = state.registration.entries[lookup[ownProps.id]];\r\n\r\n  return {\r\n    meet: state.meet,\r\n    entry: entry,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\r\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the button that adds a new entry to the registrations table.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport { newRegistration } from \"../../actions/registrationActions\";\r\n\r\nimport { Entry } from \"../../types/dataTypes\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ninterface DispatchProps {\r\n  newRegistration: (obj: Partial<Entry>) => void;\r\n}\r\n\r\ntype Props = DispatchProps;\r\n\r\nclass NewButton extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.props.newRegistration({});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Button onClick={this.handleClick} variant=\"primary\" size=\"lg\" block>\r\n        <FormattedMessage id=\"registration.button-new-lifter\" defaultMessage=\"New Lifter\" />\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NewButton);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines a general CSV manipulation class.\r\n// This is a JS port of the Python \"oplcsv.py\" library used by the OpenPowerlifting\r\n// main data project.\r\n\r\n// Makes a string suitable for inclusion in a simple CSV file,\r\n// by deleting all commas and double quotes.\r\nexport const csvString = (x?: number | string): string => {\r\n  if (x === undefined) return \"\";\r\n  let s = String(x);\r\n\r\n  // The OpenPowerlifting format uses commas and disallow double-quotes.\r\n  s = s.replace(/,/g, \" \");\r\n  s = s.replace(/\"/g, \" \");\r\n\r\n  // The number \"0\" is also never written out explicitly; the empty string is preferred.\r\n  if (s === \"0\") return \"\";\r\n\r\n  // Clean up some formatting.\r\n  s = s.replace(/ {2}/g, \" \").trim();\r\n  return s;\r\n};\r\n\r\n// Makes a string of a Date object.\r\n//\r\n// By default, Excel will reformat our pretty ISO8601 dates (2019-11-30) into\r\n// a localized, ambiguous variant (11/30/2019). This happens sufficiently often\r\n// in submitted meet results that it's worth a workaround.\r\n//\r\n// Prepending a single-quote character to the date string stops the reformatting.\r\nexport const csvDate = (iso8601?: string): string => {\r\n  if (iso8601 === undefined || iso8601 === \"\") return \"\";\r\n  return csvString(\"'\" + iso8601);\r\n};\r\n\r\n// Returns the in-spreadsheet name of a column. In standard spreadsheet software,\r\n// rows are numeric (1, 2, 3, ...) and columns are alphabetic (A, B, C, ...).\r\n// For errors, we'd like to report the column that's wrong.\r\n//\r\n// The 'index' input is zero-indexed.\r\nexport const getSpreadsheetColumnName = (index: number): string => {\r\n  const alphabet: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\n  // Column name accumulator.\r\n  // It's built by taking repeated mods in base 26: therefore new characters\r\n  // are appended to the left of the accumulator.\r\n  let acc: string = \"\";\r\n  let n: number = index;\r\n\r\n  while (n >= alphabet.length) {\r\n    const mod = n % alphabet.length;\r\n    const remainder = Math.floor(n / alphabet.length);\r\n\r\n    acc = alphabet[mod] + acc;\r\n\r\n    // The subtraction is because this isn't a pure modulus operator:\r\n    // by analogy to base-10, \"AA\" is equivalent to \"00\", and we want to render\r\n    // that.\r\n    n = remainder - 1;\r\n  }\r\n\r\n  return alphabet[n] + acc;\r\n};\r\n\r\n// A class for managing simple CSV files. Double-quotes and commas are disallowed.\r\nexport class Csv {\r\n  fieldnames: Array<string>; // Column names.\r\n  rows: Array<Array<string>>; // Individual rows.\r\n\r\n  constructor() {\r\n    this.fieldnames = [];\r\n    this.rows = [];\r\n  }\r\n\r\n  length(): number {\r\n    return this.rows.length;\r\n  }\r\n\r\n  index(name: string): number {\r\n    return this.fieldnames.indexOf(name);\r\n  }\r\n\r\n  appendColumn(name: string): void {\r\n    this.fieldnames.push(name);\r\n    for (let i = 0; i < this.rows.length; i++) {\r\n      this.rows[i].push(\"\");\r\n    }\r\n  }\r\n\r\n  appendColumns(namelist: Array<string>): void {\r\n    this.fieldnames = this.fieldnames.concat(namelist);\r\n    for (let i = 0; i < this.rows.length; i++) {\r\n      for (let j = 0; j < namelist.length; j++) {\r\n        this.rows[i].push(\"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  insertColumn(index: number, name: string): void {\r\n    this.fieldnames.splice(index, 0, name);\r\n    for (let i = 0; i < this.rows.length; i++) {\r\n      this.rows[i].splice(index, 0, \"\");\r\n    }\r\n  }\r\n\r\n  removeColumnByIndex(index: number): void {\r\n    this.fieldnames.splice(index, 1);\r\n    for (let i = 0; i < this.rows.length; i++) {\r\n      this.rows[i].splice(index, 1);\r\n    }\r\n  }\r\n\r\n  removeColumnByName(name: string): void {\r\n    for (let i = 0; i < this.fieldnames.length; i++) {\r\n      if (this.fieldnames[i] === name) {\r\n        this.removeColumnByIndex(i);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeEmptyColumns(): void {\r\n    for (let i = 0; i < this.fieldnames.length; i++) {\r\n      let empty = true;\r\n      for (let j = 0; j < this.rows.length; j++) {\r\n        if (this.rows[j][i] !== \"\") {\r\n          empty = false;\r\n          break;\r\n        }\r\n      }\r\n      if (empty === true) {\r\n        this.removeColumnByIndex(i);\r\n        this.removeEmptyColumns();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Attempts to fill in this CSV object from a string.\r\n  // On success, returns the `this` Csv object.\r\n  // On failure, returns an error string with a user-presentable message.\r\n  fromString(s: string): Csv | string {\r\n    // The string cannot contain double-quotes: programs use those to allow\r\n    // in-field commas, which we disallow.\r\n    if (s.includes('\"')) {\r\n      let e = 'Double-quotes (\") are disallowed.';\r\n      e += \" Double-quotes can be automatically inserted by spreadsheet software\";\r\n      e += \" when a field contains a comma. Make sure to delete all in-field commas.\";\r\n      return e;\r\n    }\r\n\r\n    // Split by newline. It's OK for \\r to remain: we'll strip each field later.\r\n    // This always produces an array of length at least 1.\r\n    //\r\n    // Trim the string first: it's OK if files end with \"\\n\".\r\n    const lines = s.trim().split(\"\\n\");\r\n\r\n    // The first row contains fieldnames.\r\n    const fieldnames = lines[0].split(\",\").map((x) => x.trim());\r\n\r\n    // Any rows after the first contain data.\r\n    const rows = [];\r\n    for (let i = 1; i < lines.length; ++i) {\r\n      const row = lines[i].split(\",\").map((x) => x.trim());\r\n      rows.push(row);\r\n    }\r\n\r\n    // Sanity checking time!\r\n    // Every column must be named.\r\n    for (let i = 0; i < fieldnames.length; ++i) {\r\n      if (fieldnames[i] === \"\") {\r\n        const colname = getSpreadsheetColumnName(i);\r\n        return \"Column \" + colname + \" is missing a column name.\";\r\n      }\r\n    }\r\n\r\n    // Every row must have the same length as the fieldnames row.\r\n    for (let i = 0; i < rows.length; ++i) {\r\n      if (rows[i].length !== fieldnames.length) {\r\n        const rownum = i + 2; // 1-indexed, and the first row is fieldnames.\r\n        let e = \"Row \" + rownum + \" has \" + rows[i].length + \" columns,\";\r\n        e += \" but the first row has \" + fieldnames.length + \" columns.\";\r\n        return e;\r\n      }\r\n    }\r\n\r\n    this.fieldnames = fieldnames;\r\n    this.rows = rows;\r\n    return this;\r\n  }\r\n\r\n  toString(): string {\r\n    const headers = this.fieldnames.join(\",\");\r\n    const strRows: Array<string> = [];\r\n    for (let i = 0; i < this.rows.length; i++) {\r\n      strRows.push(this.rows[i].join(\",\"));\r\n    }\r\n    return headers + \"\\n\" + strRows.join(\"\\n\") + \"\\n\";\r\n  }\r\n}\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines logic for parsing strings into OpenLifter datatypes.\r\n// The strings can come from the user and are therefore untrusted.\r\n\r\nimport { Equipment, Event, Sex } from \"../types/dataTypes\";\r\n\r\n// Strictly parse a string to an integer. Negatives are allowed.\r\nexport const parseInteger = (s: string): number | undefined => {\r\n  // Characters will be compared to ASCII charcodes.\r\n  const ascii_0 = 0x30;\r\n  const ascii_9 = 0x39;\r\n  const ascii_minus = 0x2d;\r\n\r\n  // Disallow the empty string.\r\n  if (s.length === 0) {\r\n    return;\r\n  }\r\n\r\n  // Check the string character-by-character.\r\n  for (let i = 0; i < s.length; ++i) {\r\n    const charcode = s.charCodeAt(i);\r\n\r\n    // A single negative is allowed at the front.\r\n    if (i === 0 && charcode === ascii_minus) {\r\n      continue;\r\n    } else if (charcode < ascii_0 || charcode > ascii_9) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return parseInt(s, 10);\r\n};\r\n\r\n// Loosely parse a string to a Sex.\r\nexport const parseSex = (s: string): Sex | undefined => {\r\n  const lower = s.toLowerCase();\r\n  if (lower === \"m\") return \"M\";\r\n  if (lower === \"f\") return \"F\";\r\n  if (lower === \"mx\") return \"Mx\";\r\n  return;\r\n};\r\n\r\n// Loosely parse a string to an Equipment.\r\nexport const parseEquipment = (s: string): Equipment | undefined => {\r\n  const lower = s.toLowerCase();\r\n  if (lower === \"bare\") return \"Bare\";\r\n  if (lower === \"sleeves\") return \"Sleeves\";\r\n  if (lower === \"wraps\") return \"Wraps\";\r\n  if (lower === \"unlimited\") return \"Unlimited\";\r\n\r\n  // Be more forgiving on these ones: nobody remembers the dash.\r\n  if (lower.startsWith(\"single\")) return \"Single-ply\";\r\n  if (lower.startsWith(\"multi\")) return \"Multi-ply\";\r\n  return;\r\n};\r\n\r\n// Parse a string to an Event.\r\n// Valid characters are \"SBD\", which must occur in that order.\r\nexport const parseEvent = (s: string): Event | undefined => {\r\n  if (s === \"\") {\r\n    return;\r\n  }\r\n\r\n  // Allow lowercase variants like \"sbd\".\r\n  const lower = s.toLowerCase();\r\n  const has_squat = lower.includes(\"s\");\r\n  const has_bench = lower.includes(\"b\");\r\n  const has_deadlift = lower.includes(\"d\");\r\n\r\n  let acc = \"\";\r\n  if (has_squat) acc += \"S\";\r\n  if (has_bench) acc += \"B\";\r\n  if (has_deadlift) acc += \"D\";\r\n\r\n  // Having reconstructed the string in the right order, check whether it matches.\r\n  if (acc !== s) {\r\n    return;\r\n  }\r\n\r\n  return s as Event;\r\n};\r\n\r\n// Strictly parse a YYYY-MM-DD date.\r\nexport const parseDate = (s: string): string | undefined => {\r\n  // Allow a prepended single-quote, inserted for purposes of preventing\r\n  // Excel auto-localization.\r\n  s = s.replace(\"'\", \"\");\r\n\r\n  // \"YYYY-MM-DD\".length === 10.\r\n  if (s.length !== 10) {\r\n    return;\r\n  }\r\n\r\n  const pieces = s.split(\"-\");\r\n  if (pieces.length !== 3) {\r\n    return;\r\n  }\r\n\r\n  if (pieces[0].length !== 4 || pieces[1].length !== 2 || pieces[2].length !== 2) {\r\n    return;\r\n  }\r\n\r\n  const year = parseInteger(pieces[0]);\r\n  const month = parseInteger(pieces[1]);\r\n  const day = parseInteger(pieces[2]);\r\n\r\n  if (typeof year !== \"number\" || year < 1920) return;\r\n  if (typeof month !== \"number\" || month < 1 || month > 12) return;\r\n  if (typeof day !== \"number\" || day < 1 || day > 31) return;\r\n\r\n  return s;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines logic for importing Registration data from a CSV file.\r\n// The CSV format is very strict: no double-quotes allowed, commas are always\r\n// separators, and the format of each field must exactly match our internal format.\r\n\r\nimport { csvDate, Csv, getSpreadsheetColumnName } from \"../export/csv\";\r\nimport { newDefaultEntry } from \"../entry\";\r\n\r\nimport { parseInteger, parseDate } from \"../parsers\";\r\nimport { getString, delocalizeEquipment, delocalizeEvent, delocalizeFlight, delocalizeSex } from \"../strings\";\r\nimport { displayNumber } from \"../units\";\r\n\r\nimport { Entry, Language } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\n// Generates a string representing a downloadable CSV file, for use as an example\r\n// of the registration format.\r\n//\r\n// This is in code so that it can live right next to loadRegistrations()\r\n// for easier long-term maintenance.\r\nexport const makeExampleRegistrationsCsv = (language: Language): string => {\r\n  const csv = new Csv();\r\n  csv.rows = [[]]; // appendColumns() will resize the dummy row correctly.\r\n\r\n  const day = getString(\"import.column-day\", language);\r\n  const platform = getString(\"import.column-platform\", language);\r\n  const flight = getString(\"import.column-flight\", language);\r\n  const name = getString(\"import.column-name\", language);\r\n  const sex = getString(\"import.column-sex\", language);\r\n  const equipment = getString(\"import.column-equipment\", language);\r\n  const division1 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"1\");\r\n  const division2 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"2\");\r\n  const division3 = getString(\"import.column-division-n\", language).replace(\"{N}\", \"3\");\r\n  const event1 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"1\");\r\n  const event2 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"2\");\r\n  const event3 = getString(\"import.column-event-n\", language).replace(\"{N}\", \"3\");\r\n  const birthdate = getString(\"import.column-birthdate\", language);\r\n  const age = getString(\"import.column-age\", language);\r\n  const memberid = getString(\"import.column-memberid\", language);\r\n  const country = getString(\"import.column-country\", language);\r\n  const state = getString(\"import.column-state\", language);\r\n  const lot = getString(\"import.column-lot\", language);\r\n  const guest = getString(\"import.column-guest\", language);\r\n  const team = getString(\"import.column-team\", language);\r\n  const instagram = getString(\"import.column-instagram\", language);\r\n  const notes = getString(\"import.column-notes\", language);\r\n\r\n  csv.appendColumns([day, platform, flight, name, sex, equipment]);\r\n  csv.appendColumns([division1, division2, division3, event1, event2, event3]);\r\n  csv.appendColumns([birthdate, age, memberid, country, state]);\r\n  csv.appendColumns([lot, team, guest, instagram, notes]);\r\n\r\n  csv.rows[0][csv.index(day)] = \"1\";\r\n  csv.rows[0][csv.index(platform)] = \"1\";\r\n  csv.rows[0][csv.index(flight)] = getString(\"flight.a\", language);\r\n  csv.rows[0][csv.index(name)] = getString(\"import.example-name\", language);\r\n  csv.rows[0][csv.index(sex)] = getString(\"import.example-sex\", language);\r\n  csv.rows[0][csv.index(equipment)] = getString(\"equipment.sleeves\", language);\r\n  csv.rows[0][csv.index(division1)] = getString(\"import.example-division1\", language);\r\n  csv.rows[0][csv.index(division2)] = getString(\"import.example-division2\", language);\r\n  // Intentionally blank: csv.rows[0][csv.index(division3)]\r\n  csv.rows[0][csv.index(event1)] = getString(\"event.sbd\", language);\r\n  csv.rows[0][csv.index(event2)] = getString(\"event.bd\", language);\r\n  // Intentionally blank: csv.rows[0][csv.index(event3)]\r\n  csv.rows[0][csv.index(birthdate)] = csvDate(getString(\"import.example-birthdate\", language));\r\n  // Intentionally blank: csv.rows[0][csv.index(age)]\r\n  // Intentionally blank: csv.rows[0][csv.index(memberid)]\r\n  csv.rows[0][csv.index(country)] = getString(\"import.example-country\", language);\r\n  csv.rows[0][csv.index(state)] = getString(\"import.example-state\", language);\r\n  // Intentionally blank: csv.rows[0][csv.index(lot)]\r\n  csv.rows[0][csv.index(guest)] = getString(\"common.response-yes\", language);\r\n  // Intentionally blank: csv.rows[0][csv.index(team)]\r\n  // Intentionally blank: csv.rows[0][csv.index(team)]\r\n  csv.rows[0][csv.index(instagram)] = getString(\"import.example-instagram\", language);\r\n  csv.rows[0][csv.index(notes)] = getString(\"import.example-notes\", language);\r\n\r\n  return csv.toString();\r\n};\r\n\r\n// Attempts to load registration information from a CSV object.\r\n//\r\n// On success, returns an array of Entry objects.\r\n//   NOTE CAREFULLY that the global state is not updated by this function.\r\n//   The caller must integrate the Entry objects, updating EntryID Tracking.\r\n// On failure, returns an error string with a user-presentable message.\r\nexport const loadRegistrations = (state: GlobalState, csv: Csv, language: Language): Array<Entry> | string => {\r\n  const division_template = getString(\"import.column-division-n\", language);\r\n  const event_template = getString(\"import.column-event-n\", language);\r\n\r\n  const col_day = getString(\"import.column-day\", language);\r\n  const col_platform = getString(\"import.column-platform\", language);\r\n  const col_flight = getString(\"import.column-flight\", language);\r\n  const col_name = getString(\"import.column-name\", language);\r\n  const col_sex = getString(\"import.column-sex\", language);\r\n  const col_equipment = getString(\"import.column-equipment\", language);\r\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\r\n  const col_division2 = division_template.replace(\"{N}\", \"2\");\r\n  const col_division3 = division_template.replace(\"{N}\", \"3\");\r\n  const col_division4 = division_template.replace(\"{N}\", \"4\");\r\n  const col_division5 = division_template.replace(\"{N}\", \"5\");\r\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\r\n  const col_event2 = event_template.replace(\"{N}\", \"2\");\r\n  const col_event3 = event_template.replace(\"{N}\", \"3\");\r\n  const col_event4 = event_template.replace(\"{N}\", \"4\");\r\n  const col_event5 = event_template.replace(\"{N}\", \"5\");\r\n  const col_birthdate = getString(\"import.column-birthdate\", language);\r\n  const col_age = getString(\"import.column-age\", language);\r\n  const col_memberid = getString(\"import.column-memberid\", language);\r\n  const col_country = getString(\"import.column-country\", language);\r\n  const col_state = getString(\"import.column-state\", language);\r\n  const col_lot = getString(\"import.column-lot\", language);\r\n  const col_guest = getString(\"import.column-guest\", language);\r\n  const col_team = getString(\"import.column-team\", language);\r\n  const col_instagram = getString(\"import.column-instagram\", language);\r\n  const col_notes = getString(\"import.column-notes\", language);\r\n\r\n  // Every fieldname must be either mandatory or optional.\r\n  const MANDATORY_FIELDNAMES = [\r\n    col_day,\r\n    col_platform,\r\n    col_flight,\r\n    col_name,\r\n    col_sex,\r\n    col_equipment,\r\n    col_division1,\r\n    col_event1,\r\n  ];\r\n  const OPTIONAL_FIELDNAMES = [\r\n    col_division2,\r\n    col_division3,\r\n    col_division4,\r\n    col_division5,\r\n    col_event2,\r\n    col_event3,\r\n    col_event4,\r\n    col_event5,\r\n    col_birthdate,\r\n    col_age,\r\n    col_memberid,\r\n    col_country,\r\n    col_state,\r\n    col_lot,\r\n    col_guest,\r\n    col_team,\r\n    col_instagram,\r\n    col_notes,\r\n  ];\r\n\r\n  // Check the existent fieldnames for sanity.\r\n  for (let i = 0; i < csv.fieldnames.length; ++i) {\r\n    const name: string = csv.fieldnames[i];\r\n\r\n    // Every fieldname that appears must be known.\r\n    if (!MANDATORY_FIELDNAMES.includes(name) && !OPTIONAL_FIELDNAMES.includes(name)) {\r\n      const colname = getSpreadsheetColumnName(i);\r\n      const allfields: string = MANDATORY_FIELDNAMES.join(\", \") + \", \" + OPTIONAL_FIELDNAMES.join(\", \");\r\n\r\n      const e = getString(\"error.csv-unknown-header\", language);\r\n      return e.replace(\"{name}\", name).replace(\"{ABC}\", colname).replace(\"{validList}\", allfields);\r\n    }\r\n\r\n    // Fieldnames cannot be repeated.\r\n    for (let j = i + 1; j < csv.fieldnames.length; ++j) {\r\n      if (csv.fieldnames[j] === csv.fieldnames[i]) {\r\n        const iname = getSpreadsheetColumnName(i);\r\n        const jname = getSpreadsheetColumnName(j);\r\n\r\n        const e = getString(\"error.csv-duplicate-header\", language);\r\n        return e.replace(\"{name}\", csv.fieldnames[i]).replace(\"{firstABC}\", iname).replace(\"{secondABC}\", jname);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check that all of the MANDATORY_FIELDNAMES are included.\r\n  for (let i = 0; i < MANDATORY_FIELDNAMES.length; ++i) {\r\n    if (!csv.fieldnames.includes(MANDATORY_FIELDNAMES[i])) {\r\n      const e = getString(\"error.csv-missing-header\", language);\r\n      return e.replace(\"{name}\", MANDATORY_FIELDNAMES[i]);\r\n    }\r\n  }\r\n\r\n  // The \"Platform\" column\" must occur after the \"Day\" column: the parsing\r\n  // below is stateful, and needs to know how many platforms are on that day\r\n  // when it reads in the platform value.\r\n  if (csv.fieldnames.indexOf(col_platform) <= csv.fieldnames.indexOf(col_day)) {\r\n    const e = getString(\"error.csv-day-platform-order\", language);\r\n    return e.replace(\"{day}\", col_day).replace(\"{platform}\", col_platform);\r\n  }\r\n\r\n  // The caller needs to update this field on the state later, if successful.\r\n  let nextEntryId = state.registration.nextEntryId;\r\n  const entries: Array<Entry> = [];\r\n\r\n  const errprefix_template = getString(\"error.csv-field-prefix\", language);\r\n\r\n  // The fieldnames are valid! Now we can start building Entries.\r\n  for (let i = 0; i < csv.rows.length; ++i) {\r\n    const entry: Entry = newDefaultEntry(nextEntryId++);\r\n    entries.push(entry);\r\n\r\n    // Iterate over each field and integrate it into the Entry object.\r\n    const row: Array<string> = csv.rows[i];\r\n    for (let j = 0; j < row.length; ++j) {\r\n      const fieldname = csv.fieldnames[j];\r\n      const val = row[j];\r\n\r\n      // User-visible row number, for error messages.\r\n      // The first row is for the fieldnames, and spreadsheet programs are 1-indexed.\r\n      const rowstr = displayNumber(i + 2, language);\r\n\r\n      // Start building the error string early, since it's repeated a lot.\r\n      const errprefix = errprefix_template\r\n        .replace(\"{cellType}\", fieldname)\r\n        .replace(\"{cellValue}\", val)\r\n        .replace(\"{rowNumber}\", rowstr);\r\n\r\n      if (fieldname === col_day) {\r\n        // Default to 1.\r\n        if (val === \"\") {\r\n          entry.day = 1;\r\n        } else {\r\n          const integer = parseInteger(val);\r\n\r\n          // Must be an integer.\r\n          if (typeof integer !== \"number\") {\r\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\r\n          }\r\n\r\n          // Can't be less than one: there's always at least one day.\r\n          if (integer < 1) {\r\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\r\n          }\r\n\r\n          // Can't be greater than the number of days specified in the GlobalState.\r\n          const numDays = state.meet.lengthDays;\r\n          if (integer > numDays) {\r\n            const e = getString(\"error.csv-field-suffix-day-overflow\", language);\r\n            return errprefix + e.replace(\"{numDays}\", String(numDays));\r\n          }\r\n\r\n          // All checks passed!\r\n          entry.day = integer;\r\n        }\r\n      } else if (fieldname === col_platform) {\r\n        // Default to 1.\r\n        if (val === \"\") {\r\n          entry.platform = 1;\r\n        } else {\r\n          const integer = parseInteger(val);\r\n\r\n          // Must be an integer.\r\n          if (typeof integer !== \"number\") {\r\n            return errprefix + getString(\"error.csv-field-suffix-integer\", language);\r\n          }\r\n\r\n          // Can't be less than one: there's always at least one platform.\r\n          if (integer < 1) {\r\n            return errprefix + getString(\"error.csv-field-suffix-positive\", language);\r\n          }\r\n\r\n          // Can't be greater than the number of platforms specified in the GlobalState.\r\n          // The \"Day\" column is guaranteed to already have been parsed: code above\r\n          // makes sure the \"Day\" column is before the \"Platform\" column.\r\n          const day = entry.day;\r\n          const platforms = state.meet.platformsOnDays[day];\r\n          if (integer > platforms) {\r\n            const e = getString(\"error.csv-field-suffix-platform-overflow\", language);\r\n            return errprefix + e.replace(\"{dayNumber}\", String(day)).replace(\"{numPlatforms}\", String(platforms));\r\n          }\r\n\r\n          // All checks passed!\r\n          entry.platform = integer;\r\n        }\r\n      } else if (fieldname === col_flight) {\r\n        // Default to A.\r\n        if (val === \"\") {\r\n          entry.flight = \"A\";\r\n        } else {\r\n          try {\r\n            entry.flight = delocalizeFlight(val, language);\r\n          } catch (err) {\r\n            return errprefix + getString(\"error.csv-field-suffix-flight-invalid\", language);\r\n          }\r\n        }\r\n      } else if (fieldname === col_name) {\r\n        if (val === \"\") {\r\n          return errprefix + getString(\"error.csv-field-suffix-name-blank\", language);\r\n        }\r\n        entry.name = val;\r\n      } else if (fieldname === col_sex) {\r\n        try {\r\n          entry.sex = delocalizeSex(val, language);\r\n        } catch (err) {\r\n          const e = getString(\"error.csv-field-suffix-sex-invalid\", language);\r\n          const m = getString(\"sex.m\", language);\r\n          const f = getString(\"sex.f\", language);\r\n          const mx = getString(\"sex.mx\", language);\r\n          return errprefix + e.replace(\"{M}\", m).replace(\"{F}\", f).replace(\"{Mx}\", mx);\r\n        }\r\n      } else if (fieldname === col_equipment) {\r\n        try {\r\n          entry.equipment = delocalizeEquipment(val, language);\r\n        } catch (err) {\r\n          const e = getString(\"error.csv-field-suffix-equipment-invalid\", language);\r\n          const bare = getString(\"equipment.bare\", language);\r\n          const sleeves = getString(\"equipment.sleeves\", language);\r\n          const wraps = getString(\"equipment.wraps\", language);\r\n          const single = getString(\"equipment.single-ply\", language);\r\n          const multi = getString(\"equipment.multi-ply\", language);\r\n          return (\r\n            errprefix +\r\n            e\r\n              .replace(\"{bare}\", bare)\r\n              .replace(\"{sleeves}\", sleeves)\r\n              .replace(\"{wraps}\", wraps)\r\n              .replace(\"{single}\", single)\r\n              .replace(\"{multi}\", multi)\r\n          );\r\n        }\r\n      } else if (\r\n        fieldname === col_division1 ||\r\n        fieldname === col_division2 ||\r\n        fieldname === col_division3 ||\r\n        fieldname === col_division4 ||\r\n        fieldname === col_division5\r\n      ) {\r\n        if (val === \"\") {\r\n          // Only the first Division is mandatory.\r\n          if (fieldname === col_division1) {\r\n            return errprefix + getString(\"error.csv-field-suffix-division-blank\", language);\r\n          }\r\n        } else {\r\n          // Check that it appears as a valid division.\r\n          if (!state.meet.divisions.includes(val)) {\r\n            return errprefix + getString(\"error.csv-field-suffix-division-invalid\", language);\r\n          }\r\n\r\n          // Check that it wasn't already added.\r\n          if (entry.divisions.includes(val)) {\r\n            return errprefix + getString(\"error.csv-field-suffix-division-duplicate\", language);\r\n          }\r\n\r\n          entry.divisions.push(val);\r\n        }\r\n      } else if (\r\n        fieldname === col_event1 ||\r\n        fieldname === col_event2 ||\r\n        fieldname === col_event3 ||\r\n        fieldname === col_event4 ||\r\n        fieldname === col_event5\r\n      ) {\r\n        if (val === \"\") {\r\n          // Only the first Event is mandatory.\r\n          if (fieldname === col_event1) {\r\n            return errprefix + getString(\"error.csv-field-suffix-event-blank\", language);\r\n          }\r\n        } else {\r\n          try {\r\n            const evt = delocalizeEvent(val, language);\r\n\r\n            // Check for duplicates.\r\n            if (entry.events.includes(evt)) {\r\n              return errprefix + getString(\"error.csv-field-suffix-event-duplicate\", language);\r\n            }\r\n            entry.events.push(evt);\r\n          } catch (err) {\r\n            const e = getString(\"error.csv-field-suffix-event-invalid\", language);\r\n            const sbd = getString(\"event.sbd\", language);\r\n            const bd = getString(\"event.bd\", language);\r\n            const sb = getString(\"event.sb\", language);\r\n            const sd = getString(\"event.sd\", language);\r\n            const s = getString(\"event.s\", language);\r\n            const b = getString(\"event.b\", language);\r\n            const d = getString(\"event.d\", language);\r\n            return (\r\n              errprefix +\r\n              e\r\n                .replace(\"{SBD}\", sbd)\r\n                .replace(\"{BD}\", bd)\r\n                .replace(\"{SB}\", sb)\r\n                .replace(\"{SD}\", sd)\r\n                .replace(\"{S}\", s)\r\n                .replace(\"{B}\", b)\r\n                .replace(\"{D}\", d)\r\n            );\r\n          }\r\n        }\r\n      } else if (fieldname === col_birthdate) {\r\n        // BirthDate is optional.\r\n        if (val !== \"\") {\r\n          const bd = parseDate(val);\r\n          if (typeof bd !== \"string\") {\r\n            return errprefix + getString(\"error.csv-field-suffix-date-format\", language);\r\n          }\r\n\r\n          entry.birthDate = bd;\r\n        }\r\n      } else if (fieldname === col_age) {\r\n        // Age is optional.\r\n        if (val !== \"\") {\r\n          const integer = parseInteger(val);\r\n          if (typeof integer !== \"number\" || integer < 1) {\r\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\r\n          }\r\n\r\n          // All checks passed!\r\n          entry.age = integer;\r\n        }\r\n      } else if (fieldname === col_memberid) {\r\n        entry.memberId = val;\r\n      } else if (fieldname === col_country) {\r\n        entry.country = val;\r\n      } else if (fieldname === col_state) {\r\n        entry.state = val;\r\n      } else if (fieldname === col_lot) {\r\n        // Empty strings are allowed: just doesn't use lots.\r\n        if (val !== \"\") {\r\n          const integer = parseInteger(val);\r\n          if (typeof integer !== \"number\" || integer < 1) {\r\n            return errprefix + getString(\"error.csv-field-empty-or-positive\", language);\r\n          }\r\n\r\n          // All checks passed!\r\n          entry.lot = integer;\r\n        }\r\n      } else if (fieldname === col_guest) {\r\n        if (val === getString(\"common.response-yes\", language)) {\r\n          entry.guest = true;\r\n        } else if (val === getString(\"common.response-no\", language)) {\r\n          entry.guest = false;\r\n        } else if (val === \"\") {\r\n          entry.guest = false;\r\n        } else {\r\n          const e = getString(\"error.csv-field-unknown-boolean\", language);\r\n          const yes = getString(\"common.response-yes\", language);\r\n          const no = getString(\"common.response-no\", language);\r\n          return errprefix + e.replace(\"{Yes}\", yes).replace(\"{No}\", no);\r\n        }\r\n      } else if (fieldname === col_team) {\r\n        entry.team = val;\r\n      } else if (fieldname === col_instagram) {\r\n        entry.instagram = val;\r\n      } else if (fieldname === col_notes) {\r\n        entry.notes = val;\r\n      } else {\r\n        return 'Missing handler for the \"' + fieldname + '\" column';\r\n      }\r\n    }\r\n  }\r\n\r\n  return entries;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Exports registration data to a CSV file.\r\n\r\nimport { csvDate, csvString, Csv } from \"./csv\";\r\nimport { getString, localizeEquipment, localizeEvent, localizeFlight, localizeSex } from \"../strings\";\r\n\r\nimport { Language } from \"../../types/dataTypes\";\r\nimport { RegistrationState } from \"../../types/stateTypes\";\r\n\r\nconst boolToYesNo = (b: boolean, language: Language): string => {\r\n  if (b === true) {\r\n    return getString(\"common.response-yes\", language);\r\n  }\r\n  return getString(\"common.response-no\", language);\r\n};\r\n\r\nexport const makeRegistrationsCsv = (registration: RegistrationState, language: Language): string => {\r\n  const csv = new Csv();\r\n\r\n  const division_template = getString(\"import.column-division-n\", language);\r\n  const event_template = getString(\"import.column-event-n\", language);\r\n\r\n  const col_day = getString(\"import.column-day\", language);\r\n  const col_platform = getString(\"import.column-platform\", language);\r\n  const col_flight = getString(\"import.column-flight\", language);\r\n  const col_name = getString(\"import.column-name\", language);\r\n  const col_sex = getString(\"import.column-sex\", language);\r\n  const col_equipment = getString(\"import.column-equipment\", language);\r\n  const col_division1 = division_template.replace(\"{N}\", \"1\");\r\n  const col_event1 = event_template.replace(\"{N}\", \"1\");\r\n  const col_birthdate = getString(\"import.column-birthdate\", language);\r\n  const col_age = getString(\"import.column-age\", language);\r\n  const col_memberid = getString(\"import.column-memberid\", language);\r\n  const col_country = getString(\"import.column-country\", language);\r\n  const col_state = getString(\"import.column-state\", language);\r\n  const col_lot = getString(\"import.column-lot\", language);\r\n  const col_guest = getString(\"import.column-guest\", language);\r\n  const col_team = getString(\"import.column-team\", language);\r\n  const col_instagram = getString(\"import.column-instagram\", language);\r\n  const col_notes = getString(\"import.column-notes\", language);\r\n\r\n  csv.appendColumns([col_day, col_platform, col_flight, col_name, col_sex, col_equipment]);\r\n  csv.appendColumns([col_division1, col_event1]); // Base cases. Others inserted by need.\r\n  csv.appendColumns([col_birthdate, col_age, col_memberid, col_country, col_state]);\r\n  csv.appendColumns([col_lot, col_guest, col_team, col_instagram, col_notes]);\r\n\r\n  for (let i = 0; i < registration.entries.length; ++i) {\r\n    const entry = registration.entries[i];\r\n\r\n    const row: Array<string> = new Array(csv.fieldnames.length).fill(\"\");\r\n    row[csv.index(col_day)] = csvString(entry.day);\r\n    row[csv.index(col_platform)] = csvString(entry.platform);\r\n    row[csv.index(col_flight)] = csvString(localizeFlight(entry.flight, language));\r\n    row[csv.index(col_name)] = csvString(entry.name);\r\n    row[csv.index(col_sex)] = csvString(localizeSex(entry.sex, language));\r\n    row[csv.index(col_equipment)] = csvString(localizeEquipment(entry.equipment, language));\r\n    row[csv.index(col_birthdate)] = csvDate(entry.birthDate);\r\n    row[csv.index(col_age)] = csvString(entry.age);\r\n    row[csv.index(col_memberid)] = csvString(entry.memberId);\r\n    row[csv.index(col_country)] = csvString(entry.country);\r\n    row[csv.index(col_state)] = csvString(entry.state);\r\n    row[csv.index(col_lot)] = csvString(entry.lot);\r\n    row[csv.index(col_guest)] = csvString(boolToYesNo(entry.guest, language));\r\n    row[csv.index(col_team)] = csvString(entry.team);\r\n    row[csv.index(col_instagram)] = csvString(entry.instagram);\r\n    row[csv.index(col_notes)] = csvString(entry.notes);\r\n\r\n    // Divisions.\r\n    for (let j = 0; j < entry.divisions.length; ++j) {\r\n      const division: string = entry.divisions[j];\r\n      const column: string = division_template.replace(\"{N}\", String(j + 1));\r\n\r\n      // Create the column if necessary. The previously numbered column exists.\r\n      if (csv.index(column) === -1) {\r\n        const prevIndex = csv.index(division_template.replace(\"{N}\", String(j)));\r\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\r\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\r\n      }\r\n      row[csv.index(column)] = csvString(division);\r\n    }\r\n\r\n    // Events.\r\n    for (let j = 0; j < entry.events.length; ++j) {\r\n      const event = entry.events[j];\r\n      const column: string = event_template.replace(\"{N}\", String(j + 1));\r\n\r\n      // Create the column if necessary. The previously numbered column exists.\r\n      if (csv.index(column) === -1) {\r\n        const prevIndex = csv.index(event_template.replace(\"{N}\", String(j)));\r\n        csv.insertColumn(prevIndex + 1, column); // Make space in other rows.\r\n        row.splice(prevIndex + 1, 0, \"\"); // Make space in this row.\r\n      }\r\n      row[csv.index(column)] = csvString(localizeEvent(event, language));\r\n    }\r\n\r\n    csv.rows.push(row);\r\n  }\r\n\r\n  return csv.toString();\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Common functions shared by the Randomize feature.\r\n\r\n// Generate a gibberish string, between 0-11 characters.\r\nexport const randomString = (): string => {\r\n  // Converts each digit to a value in base 36.\r\n  return Math.random().toString(36).substr(2);\r\n};\r\n\r\n// Generate a random integer between max and min, inclusive.\r\nexport const randomInt = (min: number, max: number) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\n// Generate a random floating-point number with a set number of fractional digits.\r\nexport const randomFixedPoint = (min: number, max: number, fixedPoints: number) => {\r\n  const power = Math.pow(10, fixedPoints);\r\n\r\n  // Construct an integer from [0, (max - min + 1) * 10^fixedPoints].\r\n  const k = Math.floor(Math.random() * (max - min + 1) * power);\r\n\r\n  // Translate it back to normal space.\r\n  return k / power + min;\r\n};\r\n\r\n// Randomly shuffle an array in-place using the Fisher-Yates algorithm.\r\n//\r\n// For each element, swap it with a randomly-chosen element of greater or equal index.\r\nexport const shuffle = <T>(array: Array<Readonly<T>>): void => {\r\n  const numElements = array.length;\r\n\r\n  for (let i = 0; i < numElements - 1; i++) {\r\n    // Randomly select an element of greater or equal index.\r\n    const switchIndex = randomInt(i, numElements - 1);\r\n\r\n    // Swap the two elements.\r\n    const temp = array[i];\r\n    array[i] = array[switchIndex];\r\n    array[switchIndex] = temp;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The parent component of the Registration page, contained by the RegistrationContainer.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport { faSpinner, faTimes, faRandom, faSort } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport LifterTable from \"./LifterTable\";\r\nimport LifterRow from \"./LifterRow\";\r\nimport NewButton from \"./NewButton\";\r\nimport ErrorModal from \"../ErrorModal\";\r\n\r\nimport { Csv } from \"../../logic/export/csv\";\r\nimport { makeExampleRegistrationsCsv, loadRegistrations } from \"../../logic/import/registration-csv\";\r\nimport { makeRegistrationsCsv } from \"../../logic/export/registrations\";\r\nimport { getString } from \"../../logic/strings\";\r\n\r\nimport { newRegistration, deleteRegistration, assignLotNumbers } from \"../../actions/registrationActions\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Entry } from \"../../types/dataTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { shuffle } from \"../debug/RandomizeHelpers\";\r\n\r\ninterface StateProps {\r\n  global: GlobalState;\r\n}\r\n\r\ninterface DispatchProps {\r\n  newRegistration: (obj: Partial<Entry>) => void;\r\n  deleteRegistration: (id: number) => void;\r\n  assignLotNumbers: (lotNumbers: number[]) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  // Controls the ErrorModal popup. Shown when error !== \"\".\r\n  error: string;\r\n  // Used for showing spinning indicators when loading files\r\n  isLoadingFiles: boolean;\r\n}\r\n\r\n// Used to distinguish between the Overwrite and Append modes.\r\nlet globalImportKind: string = \"Overwrite\";\r\n\r\nclass RegistrationView extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.handleDownloadCsvTemplateClick = this.handleDownloadCsvTemplateClick.bind(this);\r\n    this.handleExportCsvClick = this.handleExportCsvClick.bind(this);\r\n    this.handleOverwriteClick = this.handleOverwriteClick.bind(this);\r\n    this.handleAppendClick = this.handleAppendClick.bind(this);\r\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\r\n    this.handleSequentialLotNumbersClick = this.handleSequentialLotNumbersClick.bind(this);\r\n    this.handleRandomLotNumbersClick = this.handleRandomLotNumbersClick.bind(this);\r\n    this.handleRemoveLotNumbersClick = this.handleRemoveLotNumbersClick.bind(this);\r\n    this.closeErrorModal = this.closeErrorModal.bind(this);\r\n\r\n    this.state = { error: \"\", isLoadingFiles: false };\r\n  }\r\n\r\n  handleDownloadCsvTemplateClick = () => {\r\n    const text = makeExampleRegistrationsCsv(this.props.global.language);\r\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\r\n    const filename = getString(\"import.template-filename\", this.props.global.language) + \".csv\";\r\n    saveAs(blob, filename);\r\n  };\r\n\r\n  handleExportCsvClick = () => {\r\n    let meetname = this.props.global.meet.name;\r\n    if (meetname === \"\") {\r\n      meetname = getString(\"common.unnamed-filename\", this.props.global.language);\r\n    }\r\n    meetname = meetname.replace(/ /g, \"-\");\r\n\r\n    const language = this.props.global.language;\r\n    const text = makeRegistrationsCsv(this.props.global.registration, language);\r\n    const blob = new Blob([text], { type: \"application/text;charset=utf-8\" });\r\n\r\n    const basename = getString(\"import.export-filename\", this.props.global.language);\r\n    const filename = basename.replace(\"{MeetName}\", meetname) + \".csv\";\r\n    saveAs(blob, filename);\r\n  };\r\n\r\n  handleOverwriteClick = () => {\r\n    globalImportKind = \"Overwrite\";\r\n    const loadhelper = document.getElementById(\"loadhelper\");\r\n    if (loadhelper !== null) {\r\n      loadhelper.click();\r\n    }\r\n  };\r\n\r\n  handleSequentialLotNumbersClick = () => {\r\n    this.updateLotNumbers(\"AssignSequentially\");\r\n  };\r\n\r\n  handleRandomLotNumbersClick = () => {\r\n    this.updateLotNumbers(\"AssignRandomly\");\r\n  };\r\n\r\n  handleRemoveLotNumbersClick = () => {\r\n    this.updateLotNumbers(\"RemoveAll\");\r\n  };\r\n\r\n  updateLotNumbers = (manipulation: \"AssignSequentially\" | \"AssignRandomly\" | \"RemoveAll\"): void => {\r\n    const entries = this.props.global.registration.entries;\r\n    let lotNumbers: number[];\r\n\r\n    // Removing lot numbers is as simple as setting the number to 0\r\n    if (manipulation === \"RemoveAll\") {\r\n      lotNumbers = entries.map(() => 0);\r\n    } else {\r\n      // If not removing, generate a set of sequential lot numbers for all lifters.\r\n      lotNumbers = entries.map((_entry, index) => index + 1);\r\n    }\r\n\r\n    // If randomization was requested, shuffle the lot number array in-place.\r\n    if (manipulation === \"AssignRandomly\") {\r\n      shuffle(lotNumbers);\r\n    }\r\n\r\n    // Finally, update the lot numbers in the state\r\n    this.props.assignLotNumbers(lotNumbers);\r\n  };\r\n\r\n  handleAppendClick = () => {\r\n    globalImportKind = \"Append\";\r\n    const loadhelper = document.getElementById(\"loadhelper\");\r\n    if (loadhelper !== null) {\r\n      loadhelper.click();\r\n    }\r\n  };\r\n\r\n  handleLoadFileInput = () => {\r\n    const loadHelper = document.getElementById(\"loadhelper\");\r\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\r\n      return;\r\n    }\r\n\r\n    const selectedFile = loadHelper.files[0];\r\n    const rememberThis = this;\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function () {\r\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\r\n      // Add this check as a guard so the typing is narrowed\r\n      if (typeof reader.result !== \"string\") {\r\n        window.alert(\"Unable to load file: an unexpected internal error occured\");\r\n        return;\r\n      }\r\n\r\n      const csv = new Csv();\r\n      const maybeError = csv.fromString(reader.result.replace(/;/g, \",\"));\r\n\r\n      // Check if an error message occurred.\r\n      if (typeof maybeError === \"string\") {\r\n        rememberThis.setState({ error: maybeError });\r\n        return;\r\n      }\r\n\r\n      // Convert the Csv to an Array<Entry>.\r\n      const language = rememberThis.props.global.language;\r\n      const maybeEntries = loadRegistrations(rememberThis.props.global, csv, language);\r\n      if (typeof maybeEntries === \"string\") {\r\n        rememberThis.setState({ error: maybeEntries });\r\n        return;\r\n      }\r\n\r\n      // Successfully parsed and loaded!\r\n      const entries: Array<Entry> = maybeEntries;\r\n\r\n      // If the mode is \"Overwrite\", delete all existing Entries.\r\n      if (globalImportKind === \"Overwrite\") {\r\n        const entryIds = rememberThis.props.global.registration.entries.map((e) => e.id);\r\n        for (let i = 0; i < entryIds.length; ++i) {\r\n          rememberThis.props.deleteRegistration(entryIds[i]);\r\n        }\r\n      }\r\n\r\n      // Add all the new Entries.\r\n      for (let i = 0; i < entries.length; ++i) {\r\n        // Deleting the 'id' field causes newRegistration() to assign a valid one.\r\n        delete entries[i].id;\r\n        rememberThis.props.newRegistration(entries[i]);\r\n      }\r\n    };\r\n\r\n    reader.onloadstart = function () {\r\n      rememberThis.setState({ isLoadingFiles: true });\r\n    };\r\n\r\n    reader.onloadend = function () {\r\n      rememberThis.setState({ isLoadingFiles: false });\r\n    };\r\n\r\n    reader.readAsText(selectedFile);\r\n  };\r\n\r\n  closeErrorModal = () => {\r\n    this.setState({ error: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const numEntries = this.props.global.registration.entries.length;\r\n    const dropdownIconStyle = { width: \"16px\", marginRight: \"6px\" };\r\n\r\n    return (\r\n      <div>\r\n        <ErrorModal\r\n          error={this.state.error}\r\n          title={getString(\"registration.importation-error\", this.props.global.language)}\r\n          show={this.state.error !== \"\"}\r\n          close={this.closeErrorModal}\r\n        />\r\n\r\n        <Card style={{ marginBottom: \"17px\" }}>\r\n          <Card.Header>\r\n            <FormattedMessage id=\"registration.auto-import-card-header\" defaultMessage=\"Auto-Import Registrations\" />\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Button variant=\"info\" onClick={this.handleDownloadCsvTemplateClick}>\r\n              <FormattedMessage id=\"registration.button-download-template\" defaultMessage=\"Download Template\" />\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"success\"\r\n              disabled={numEntries === 0}\r\n              onClick={this.handleExportCsvClick}\r\n              style={{ marginLeft: \"14px\" }}\r\n            >\r\n              <FormattedMessage id=\"registration.button-export-to-csv\" defaultMessage=\"Export to CSV\" />\r\n            </Button>\r\n\r\n            <ButtonGroup style={{ marginLeft: \"14px\" }}>\r\n              <Button variant=\"danger\" onClick={this.handleOverwriteClick}>\r\n                {this.state.isLoadingFiles && <FontAwesomeIcon style={{ marginRight: \"5px\" }} icon={faSpinner} spin />}\r\n                <FormattedMessage\r\n                  id=\"registration.button-overwrite-from-csv\"\r\n                  defaultMessage=\"Overwrite Registrations from CSV\"\r\n                />\r\n              </Button>\r\n              <Button variant=\"warning\" onClick={this.handleAppendClick}>\r\n                <FormattedMessage\r\n                  id=\"registration.button-append-from-csv\"\r\n                  defaultMessage=\"Append Registrations from CSV\"\r\n                />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card style={{ marginBottom: \"17px\" }}>\r\n          <Card.Header>\r\n            <FormattedMessage id=\"registration.tools-header\" defaultMessage=\"Tools\" />\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <ButtonGroup vertical>\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                title={\r\n                  <FormattedMessage id=\"registration.dropdown-manage-lot-numbers\" defaultMessage=\"Manage Lot Numbers\" />\r\n                }\r\n                id=\"registration.button-assign-lot-numbers\"\r\n              >\r\n                <Dropdown.Item onClick={this.handleSequentialLotNumbersClick}>\r\n                  <FontAwesomeIcon icon={faSort} style={dropdownIconStyle} />\r\n                  <FormattedMessage\r\n                    id=\"registration.button-assign-lot-numbers-sequentially\"\r\n                    defaultMessage=\"Assign Sequentially\"\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={this.handleRandomLotNumbersClick}>\r\n                  <FontAwesomeIcon icon={faRandom} style={dropdownIconStyle} />\r\n                  <FormattedMessage\r\n                    id=\"registration.button-assign-lot-numbers-randomly\"\r\n                    defaultMessage=\"Assign Randomly\"\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={this.handleRemoveLotNumbersClick}>\r\n                  <FontAwesomeIcon icon={faTimes} style={dropdownIconStyle} />\r\n                  <FormattedMessage id=\"registration.button-remove-lot-numbers\" defaultMessage=\"Remove Lot Numbers\" />\r\n                </Dropdown.Item>\r\n              </DropdownButton>\r\n            </ButtonGroup>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <LifterTable entries={this.props.global.registration.entries} rowRenderer={LifterRow} />\r\n        <NewButton />\r\n\r\n        <input\r\n          id=\"loadhelper\"\r\n          type=\"file\"\r\n          accept=\".csv\"\r\n          style={{ display: \"none\" }}\r\n          onChange={this.handleLoadFileInput}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  global: state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\r\n    deleteRegistration: (id: number) => dispatch(deleteRegistration(id)),\r\n    assignLotNumbers: (lotNumbers: number[]) => dispatch(assignLotNumbers(lotNumbers)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationView);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Container for the Registration page.\r\n\r\nimport React from \"react\";\r\n\r\nimport RegistrationView from \"../components/registration/RegistrationView\";\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\nclass RegistrationContainer extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <div className={styles.contentArea}>\r\n        <RegistrationView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\n\r\nimport { Entry, Language } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\ninterface OwnProps {\r\n  entries: Array<Entry>;\r\n  rowRenderer: any;\r\n  inLiftingPage?: boolean;\r\n}\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  language: Language;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\nclass LifterTable extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.renderRows = this.renderRows.bind(this);\r\n    this.renderHeader = this.renderHeader.bind(this);\r\n  }\r\n\r\n  renderRows = () => {\r\n    const LifterRow = this.props.rowRenderer;\r\n    const { entries } = this.props;\r\n    const inLiftingPage = this.props.inLiftingPage === true;\r\n\r\n    return entries.map((entry) => <LifterRow key={entry.id} id={entry.id} inLiftingPage={inLiftingPage} />);\r\n  };\r\n\r\n  renderHeader = () => {\r\n    // Styling for small, single-character selector columns.\r\n    const shortStyle = { width: \"85px\" };\r\n\r\n    const inKg = this.props.inKg;\r\n\r\n    const bodyweightId = inKg ? \"weigh-ins.bodyweight-header-kg\" : \"weigh-ins.bodyweight-header-lbs\";\r\n    const squatId = inKg ? \"weigh-ins.squat-header-kg\" : \"weigh-ins.squat-header-lbs\";\r\n    const benchId = inKg ? \"weigh-ins.bench-header-kg\" : \"weigh-ins.bench-header-lbs\";\r\n    const deadliftId = inKg ? \"weigh-ins.deadlift-header-kg\" : \"weigh-ins.deadlift-header-lbs\";\r\n\r\n    return (\r\n      <tr>\r\n        <th style={shortStyle}>\r\n          <FormattedMessage id=\"weigh-ins.platform-header\" defaultMessage=\"Platform\" />\r\n        </th>\r\n        <th style={shortStyle}>\r\n          <FormattedMessage id=\"weigh-ins.platform-flight\" defaultMessage=\"Flight\" />\r\n        </th>\r\n        <th>{getString(\"lifting.column-lifter\", this.props.language)}</th>\r\n\r\n        <th style={shortStyle}>{getString(\"common.age\", this.props.language)}</th>\r\n        <th style={shortStyle}>{getString(bodyweightId, this.props.language)}</th>\r\n        <th style={shortStyle}>\r\n          <FormattedMessage id=\"weigh-ins.squat-rack-header\" defaultMessage=\"Squat Rack\" />\r\n        </th>\r\n        <th style={shortStyle}>{getString(squatId, this.props.language)}</th>\r\n        <th style={shortStyle}>\r\n          <FormattedMessage id=\"weigh-ins.bench-rack-header\" defaultMessage=\"Bench Rack\" />\r\n        </th>\r\n        <th style={shortStyle}>{getString(benchId, this.props.language)}</th>\r\n        <th style={shortStyle}>{getString(deadliftId, this.props.language)}</th>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table hover size=\"sm\" style={{ margin: \"0px\" }}>\r\n        <thead>{this.renderHeader()}</thead>\r\n        <tbody>{this.renderRows()}</tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  inKg: state.meet.inKg,\r\n  language: state.language,\r\n});\r\n\r\nexport default connect(mapStateToProps)(LifterTable);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport {\r\n  EnterAttemptAction,\r\n  MarkLiftAction,\r\n  SetLiftingGroupAction,\r\n  OverrideAttemptAction,\r\n  OverrideEntryIdAction,\r\n  SetTableInfoAction,\r\n} from \"../types/actionTypes\";\r\nimport { Flight, Lift } from \"../types/dataTypes\";\r\nimport { LiftingState } from \"../types/stateTypes\";\r\n\r\n// Sets a weightKg that doesn't have a good/failed value, for entering in attempts.\r\nexport const enterAttempt = (\r\n  entryId: number,\r\n  lift: Lift,\r\n  attemptOneIndexed: number,\r\n  weightKg: number\r\n): EnterAttemptAction => {\r\n  return {\r\n    type: \"ENTER_ATTEMPT\",\r\n    entryId: entryId,\r\n    lift: lift,\r\n    attemptOneIndexed: attemptOneIndexed,\r\n    weightKg: weightKg,\r\n  };\r\n};\r\n\r\n// Marks a lift \"good\" or \"failed\".\r\n//\r\n// entryId is the ID of the affected entry, a Number.\r\n// lift is \"S\", \"B\", or \"D\".\r\n// attempt is 1,2,3, etc., up to MAX_ATTEMPTS.\r\n// success is a bool for whether to mark the lift as a success or as a failure.\r\nexport const markLift = (entryId: number, lift: Lift, attemptOneIndexed: number, success: boolean): MarkLiftAction => {\r\n  return {\r\n    type: \"MARK_LIFT\",\r\n    entryId: entryId,\r\n    lift: lift,\r\n    attemptOneIndexed: attemptOneIndexed,\r\n    success: success,\r\n  };\r\n};\r\n\r\n// Sets the current group of lifters.\r\n// This is always manually set by the score table.\r\nexport const setLiftingGroup = (day: number, platform: number, flight: Flight, lift: Lift): SetLiftingGroupAction => {\r\n  return {\r\n    type: \"SET_LIFTING_GROUP\",\r\n    day: day,\r\n    platform: platform,\r\n    flight: flight,\r\n    lift: lift,\r\n  };\r\n};\r\n\r\n// Overrides the calculated meet progress logic by forcing display of an attempt,\r\n// even if it has already been marked \"good lift\" or \"no lift\".\r\nexport const overrideAttempt = (attempt: number): OverrideAttemptAction => {\r\n  return {\r\n    type: \"OVERRIDE_ATTEMPT\",\r\n    attempt: attempt,\r\n  };\r\n};\r\n\r\n// Overrides the calculated meet progress logic by forcing display of a specific lifter,\r\n// even if they have already had their attempt entered.\r\nexport const overrideEntryId = (entryId: number): OverrideEntryIdAction => {\r\n  return {\r\n    type: \"OVERRIDE_ENTRY_ID\",\r\n    entryId: entryId,\r\n  };\r\n};\r\n\r\n// Updates arbitrary fields in the LiftingState.\r\n//\r\n// The intention is to use action just for table customization: things like\r\n// column widths, column visibility, and other such options.\r\n//\r\n// Having this interface lets us keep the number of actions low: separate\r\n// actions for each kind of modification is not really useful.\r\nexport const setTableInfo = (obj: Partial<LiftingState>): SetTableInfoAction => {\r\n  return {\r\n    type: \"SET_TABLE_INFO\",\r\n    changes: obj,\r\n  };\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines an input of a single weight, during configuration.\r\n// Since it's for configuration, it doesn't have an associated success/failure value.\r\n//\r\n// For consistency purposes, weights are always stored in kg.\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\n\r\nimport { updateRegistration } from \"../../actions/registrationActions\";\r\nimport { enterAttempt } from \"../../actions/liftingActions\";\r\n\r\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\r\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\r\n\r\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { FormControlTypeHack, assertString } from \"../../types/utils\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ninterface OwnProps {\r\n  id: number; // The EntryID.\r\n\r\n  // The valid type here should be all keys of Entry where the value is a number\r\n  // Something like keyof<Partial> where (key,value) => typeof value === Number - if that is possible in typescript?\r\n  // Otherwise manually specifying all the valid keys of Entry is a fair approach too!\r\n  field?: \"bodyweightKg\";\r\n  disabled: boolean;\r\n\r\n  // Optional attributes used only for lifts (as opposed to for bodyweights).\r\n  placeholder?: string;\r\n  lift?: Lift;\r\n  attemptOneIndexed?: number;\r\n  multipleOf?: number;\r\n}\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  weightKg: number;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\r\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  weightStr: string;\r\n}\r\n\r\nclass WeightInput extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.validate = this.validate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n    let weight = this.props.weightKg;\r\n    if (!this.props.inKg) {\r\n      weight = kg2lbs(weight);\r\n    }\r\n\r\n    // Internal state, for purposes of validation.\r\n    // To avoid confusion (auto-rounding) when typing, just store a String.\r\n    this.state = {\r\n      // Prefer displaying an empty string to 0.0.\r\n      weightStr: weight === 0.0 ? \"\" : displayWeight(weight, props.language),\r\n    };\r\n  }\r\n\r\n  validate = (): Validation => {\r\n    const weightNum = string2number(this.state.weightStr);\r\n    if (isNaN(weightNum) || weightNum < 0) return \"error\";\r\n    if (this.props.multipleOf !== undefined && weightNum % this.props.multipleOf !== 0.0) {\r\n      return \"warning\";\r\n    }\r\n    if (this.state.weightStr.length > 0) return \"success\";\r\n    return null;\r\n  };\r\n\r\n  // Update the internal state, used for validation.\r\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const weightStr = event.currentTarget.value;\r\n    if (assertString(weightStr)) {\r\n      this.setState({ weightStr: weightStr });\r\n    }\r\n  };\r\n\r\n  // Update the Redux store.\r\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    const weightNum = string2number(event.currentTarget.value);\r\n\r\n    if (this.validate() === \"error\") {\r\n      return;\r\n    }\r\n\r\n    const weightKg = this.props.inKg ? weightNum : lbs2kg(weightNum);\r\n    if (this.props.weightKg === weightKg) {\r\n      return;\r\n    }\r\n\r\n    // If \"attempt\" is set, a specific attempt is selected.\r\n    if (this.props.attemptOneIndexed !== undefined && this.props.lift !== undefined) {\r\n      const attemptOneIndexed = this.props.attemptOneIndexed;\r\n      const lift = this.props.lift;\r\n      this.props.enterAttempt(this.props.id, lift, attemptOneIndexed, weightKg);\r\n    } else if (this.props.field !== undefined) {\r\n      // Otherwise, the field is a Number.\r\n      const newfields: Partial<Entry> = {};\r\n      newfields[this.props.field] = weightKg;\r\n      this.props.updateRegistration(this.props.id, newfields);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // FormGroup provides a default padding of 15, but FormGroup is only being\r\n    // used here to accept a validationState. It's not really a group.\r\n    const undoDefaultPadding = { marginBottom: \"0\" };\r\n    const validation: Validation = this.validate();\r\n\r\n    return (\r\n      <FormGroup style={undoDefaultPadding}>\r\n        <FormControl\r\n          disabled={this.props.disabled}\r\n          placeholder={this.props.placeholder}\r\n          type=\"text\"\r\n          value={this.state.weightStr}\r\n          onChange={this.handleChange}\r\n          onBlur={this.handleBlur}\r\n          isValid={validation === \"success\"}\r\n          isInvalid={validation === \"error\"}\r\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\r\n        />\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\r\n  // Only have props for the entry corresponding to this one row.\r\n  const lookup = state.registration.lookup;\r\n  const entry = state.registration.entries[lookup[ownProps.id]];\r\n\r\n  // If `field` is set, then read the Number from the given field name.\r\n  let weightKg = 0.0;\r\n  if (ownProps.field !== undefined) {\r\n    weightKg = entry[ownProps.field];\r\n  } else if (ownProps.lift !== undefined && ownProps.attemptOneIndexed !== undefined) {\r\n    // Otherwise, refer to a specific lift and attempt.\r\n    const lift = ownProps.lift;\r\n    const attemptOneIndexed = ownProps.attemptOneIndexed;\r\n    const field = liftToAttemptFieldName(lift);\r\n    weightKg = entry[field][attemptOneIndexed - 1];\r\n  }\r\n\r\n  return {\r\n    inKg: state.meet.inKg,\r\n    weightKg: weightKg,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\r\n    enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\r\n      dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightInput);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines a row in the LifterTable on the Weigh-ins page.\r\n// This provides a bunch of widgets, each of which correspond to\r\n// the state of a single entry.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport ValidatedInput from \"../ValidatedInput\";\r\nimport WeightInput from \"./WeightInput\";\r\n\r\nimport { getAge } from \"../../logic/entry\";\r\nimport { getString, localizeFlight } from \"../../logic/strings\";\r\nimport { displayNumber } from \"../../logic/units\";\r\nimport { validatePositiveInteger } from \"../../validation/positiveInteger\";\r\n\r\nimport { updateRegistration } from \"../../actions/registrationActions\";\r\n\r\nimport { Entry, Language, Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { FormControlTypeHack, assertFlight, assertString } from \"../../types/utils\";\r\n\r\ninterface OwnProps {\r\n  id: number;\r\n  inLiftingPage?: boolean;\r\n}\r\n\r\ninterface StateProps {\r\n  meet: MeetState;\r\n  entry: Entry;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nclass LifterRow extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.updateRegistrationFlight = this.updateRegistrationFlight.bind(this);\r\n    this.updateRegistrationSquatRackInfo = this.updateRegistrationSquatRackInfo.bind(this);\r\n    this.updateRegistrationBenchRackInfo = this.updateRegistrationBenchRackInfo.bind(this);\r\n    this.updateRegistrationAge = this.updateRegistrationAge.bind(this);\r\n  }\r\n\r\n  updateRegistrationFlight = (event: React.FormEvent<FormControlTypeHack>) => {\r\n    const flight = event.currentTarget.value;\r\n    if (this.props.entry.flight !== flight && assertString(flight) && assertFlight(flight)) {\r\n      this.props.updateRegistration(this.props.id, { flight: flight });\r\n    }\r\n  };\r\n\r\n  updateRegistrationSquatRackInfo = (value: string) => {\r\n    if (this.props.entry.squatRackInfo !== value) {\r\n      this.props.updateRegistration(this.props.id, { squatRackInfo: value });\r\n    }\r\n  };\r\n\r\n  updateRegistrationBenchRackInfo = (value: string) => {\r\n    if (this.props.entry.benchRackInfo !== value) {\r\n      this.props.updateRegistration(this.props.id, { benchRackInfo: value });\r\n    }\r\n  };\r\n\r\n  updateRegistrationAge = (value: string) => {\r\n    const age: number = value === \"\" ? 0 : Number(value);\r\n    if (this.props.entry.age !== age) {\r\n      this.props.updateRegistration(this.props.id, { age: age });\r\n    }\r\n  };\r\n\r\n  validateAge = (value?: string): Validation => {\r\n    if (value === \"\") return null;\r\n\r\n    const pos: Validation = validatePositiveInteger(value);\r\n    if (pos === \"success\") {\r\n      // Complain a little if the age is implausible.\r\n      const n = Number(value);\r\n      if (n <= 4 || n > 100) return \"warning\";\r\n    }\r\n    return pos;\r\n  };\r\n\r\n  validateRack = (value?: string): Validation => {\r\n    if (value === \"\") return null;\r\n    return \"success\";\r\n  };\r\n\r\n  render() {\r\n    const language = this.props.language;\r\n    const entry = this.props.entry;\r\n\r\n    // Check whether the event(s) include a given lift.\r\n    let hasSquat = false;\r\n    let hasBench = false;\r\n    let hasDeadlift = false;\r\n    for (let i = 0; i < entry.events.length; i++) {\r\n      const event = entry.events[i];\r\n      if (event.includes(\"S\")) {\r\n        hasSquat = true;\r\n      }\r\n      if (event.includes(\"B\")) {\r\n        hasBench = true;\r\n      }\r\n      if (event.includes(\"D\")) {\r\n        hasDeadlift = true;\r\n      }\r\n    }\r\n\r\n    // Check whether the first attempt already occurred.\r\n    const disableSquatWeight = !hasSquat || entry.squatStatus[0] !== 0;\r\n    const disableBenchWeight = !hasBench || entry.benchStatus[0] !== 0;\r\n    const disableDeadliftWeight = !hasDeadlift || entry.deadliftStatus[0] !== 0;\r\n\r\n    // Only show the Flight selector if the Weigh-ins page is non-embedded.\r\n    let flight: string | JSX.Element = localizeFlight(entry.flight, language);\r\n    if (this.props.inLiftingPage !== true) {\r\n      // Can be undefined.\r\n      flight = (\r\n        <FormControl\r\n          value={entry.flight}\r\n          as=\"select\"\r\n          onChange={this.updateRegistrationFlight}\r\n          className=\"custom-select\"\r\n        >\r\n          <option value=\"A\">{getString(\"flight.a\", language)}</option>\r\n          <option value=\"B\">{getString(\"flight.b\", language)}</option>\r\n          <option value=\"C\">{getString(\"flight.c\", language)}</option>\r\n          <option value=\"D\">{getString(\"flight.d\", language)}</option>\r\n          <option value=\"E\">{getString(\"flight.e\", language)}</option>\r\n          <option value=\"F\">{getString(\"flight.f\", language)}</option>\r\n          <option value=\"G\">{getString(\"flight.g\", language)}</option>\r\n          <option value=\"H\">{getString(\"flight.h\", language)}</option>\r\n          <option value=\"I\">{getString(\"flight.i\", language)}</option>\r\n          <option value=\"J\">{getString(\"flight.j\", language)}</option>\r\n          <option value=\"K\">{getString(\"flight.k\", language)}</option>\r\n          <option value=\"L\">{getString(\"flight.l\", language)}</option>\r\n          <option value=\"M\">{getString(\"flight.m\", language)}</option>\r\n          <option value=\"N\">{getString(\"flight.n\", language)}</option>\r\n          <option value=\"O\">{getString(\"flight.o\", language)}</option>\r\n          <option value=\"P\">{getString(\"flight.p\", language)}</option>\r\n        </FormControl>\r\n      );\r\n    }\r\n\r\n    const age = getAge(entry, this.props.meet.date);\r\n    const ageStr = age === 0 ? getString(\"common.age\", language) : displayNumber(age, language);\r\n\r\n    return (\r\n      <tr>\r\n        <td>{entry.platform}</td>\r\n        <td>{flight}</td>\r\n        <td>{entry.name}</td>\r\n\r\n        <td>\r\n          <ValidatedInput\r\n            initialValue={entry.age === 0 ? \"\" : displayNumber(entry.age, language)}\r\n            placeholder={ageStr}\r\n            validate={this.validateAge}\r\n            onSuccess={this.updateRegistrationAge}\r\n          />\r\n        </td>\r\n\r\n        <td>\r\n          <WeightInput\r\n            id={this.props.id}\r\n            field=\"bodyweightKg\"\r\n            placeholder={getString(\"weigh-ins.bodyweight-placeholder\", language)}\r\n            disabled={false}\r\n          />\r\n        </td>\r\n\r\n        <td>\r\n          <ValidatedInput\r\n            initialValue={entry.squatRackInfo}\r\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-rack-placeholder\", language) : undefined}\r\n            disabled={!hasSquat}\r\n            validate={this.validateRack}\r\n            onSuccess={this.updateRegistrationSquatRackInfo}\r\n          />\r\n        </td>\r\n\r\n        <td>\r\n          <WeightInput\r\n            id={this.props.id}\r\n            lift=\"S\"\r\n            multipleOf={2.5}\r\n            attemptOneIndexed={1}\r\n            placeholder={hasSquat ? getString(\"weigh-ins.squat-placeholder\", language) : undefined}\r\n            disabled={disableSquatWeight}\r\n          />\r\n        </td>\r\n\r\n        <td>\r\n          <ValidatedInput\r\n            initialValue={entry.benchRackInfo}\r\n            placeholder={hasBench ? getString(\"weigh-ins.bench-rack-placeholder\", language) : undefined}\r\n            disabled={!hasBench}\r\n            validate={this.validateRack}\r\n            onSuccess={this.updateRegistrationBenchRackInfo}\r\n          />\r\n        </td>\r\n\r\n        <td>\r\n          <WeightInput\r\n            id={this.props.id}\r\n            lift=\"B\"\r\n            multipleOf={2.5}\r\n            attemptOneIndexed={1}\r\n            placeholder={hasBench ? getString(\"weigh-ins.bench-placeholder\", language) : undefined}\r\n            disabled={disableBenchWeight}\r\n          />\r\n        </td>\r\n\r\n        <td>\r\n          <WeightInput\r\n            id={this.props.id}\r\n            lift=\"D\"\r\n            multipleOf={2.5}\r\n            attemptOneIndexed={1}\r\n            placeholder={hasDeadlift ? getString(\"weigh-ins.deadlift-placeholder\", language) : undefined}\r\n            disabled={disableDeadliftWeight}\r\n          />\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\r\n  // Only have props for the entry corresponding to this one row.\r\n  const lookup = state.registration.lookup;\r\n  const entry = state.registration.entries[lookup[ownProps.id]];\r\n\r\n  return {\r\n    meet: state.meet,\r\n    entry: entry,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    updateRegistration: (entryId: number, obj: Partial<Entry>) => dispatch(updateRegistration(entryId, obj)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LifterRow);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The parent component of the Weigh-ins page, contained by the WeighinsContainer.\r\n// The Weigh-ins page updates more information in the Registration state.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport { getLiftersOnDay } from \"../../logic/entry\";\r\nimport LifterTable from \"./LifterTable\";\r\nimport LifterRow from \"./LifterRow\";\r\n\r\nimport { Entry } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\n// For use when embedded inside the Lifting page.\r\ninterface OwnProps {\r\n  day?: number;\r\n  platform?: number;\r\n  inLiftingPage?: boolean; // The weigh-ins page can be embedded.\r\n}\r\n\r\ninterface StateProps {\r\n  entries: ReadonlyArray<Entry>;\r\n}\r\n\r\ntype Props = Readonly<OwnProps> & Readonly<StateProps>;\r\n\r\nclass WeighinsView extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.getNumDaysFromEntries = this.getNumDaysFromEntries.bind(this);\r\n  }\r\n\r\n  // Figure out how many days there are by looking at the entries themselves.\r\n  //\r\n  // The meet page information may be unreliable: someone might have created\r\n  // a second day, added a lifter to it, then removed the second day without\r\n  // yet updating that lifter.\r\n  //\r\n  // This is an attempt to make that error more obvious, so it can be corrected.\r\n  getNumDaysFromEntries = () => {\r\n    let max_day = 0;\r\n    const entries = this.props.entries;\r\n    for (let i = 0; i < entries.length; i++) {\r\n      const entry = entries[i];\r\n      if (entry.day > max_day) {\r\n        max_day = entry.day;\r\n      }\r\n    }\r\n    return max_day;\r\n  };\r\n\r\n  render() {\r\n    // Determine whether this is being shown embedded in the Lifting page.\r\n    const inLiftingPage = this.props.inLiftingPage === true;\r\n\r\n    // Make a separate panel for each day.\r\n    const numDays = this.getNumDaysFromEntries();\r\n    const dayCards = [];\r\n    for (let i = 1; i <= numDays; i++) {\r\n      const lifters = getLiftersOnDay(this.props.entries, i);\r\n\r\n      // Skip if the OwnProps excluded this selection.\r\n      if (lifters.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Present the lifters in sorted order.\r\n      lifters.sort((a, b) => {\r\n        if (a.platform !== b.platform) return a.platform - b.platform;\r\n        if (a.flight !== b.flight) return a.flight < b.flight ? -1 : 1;\r\n        if (a.name < b.name) return -1;\r\n        if (a.name > b.name) return 1;\r\n        return 0;\r\n      });\r\n\r\n      dayCards.push(\r\n        <Card key={i} style={{ marginBottom: \"17px\" }}>\r\n          <Card.Header>\r\n            <FormattedMessage\r\n              id=\"weigh-ins.day-header\"\r\n              defaultMessage=\"Day {dayNumber} Weigh-ins\"\r\n              values={{ dayNumber: i }}\r\n            />\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <LifterTable entries={lifters} rowRenderer={LifterRow} inLiftingPage={inLiftingPage} />\r\n          </Card.Body>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    // If there are no days thus far, show a default warning panel.\r\n    if (dayCards.length === 0) {\r\n      dayCards.push(\r\n        <Card key={0}>\r\n          <Card.Header>\r\n            <FormattedMessage id=\"weigh-ins.empty-header\" defaultMessage=\"Waiting for Registration\" />\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <FormattedMessage\r\n              id=\"weigh-ins.empty-body\"\r\n              defaultMessage=\"Add lifters on the Registration page before weighing them in.\"\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n      );\r\n    }\r\n\r\n    return <div>{dayCards}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\r\n  const { day, platform } = ownProps;\r\n  let entries = state.registration.entries;\r\n\r\n  // Filter if requested by the OwnProps.\r\n  if (typeof day === \"number\" && typeof platform === \"number\") {\r\n    entries = entries.filter((e) => e.day === day && e.platform === platform);\r\n  }\r\n\r\n  return { entries };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeighinsView);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Container for the Weighins page.\r\n\r\nimport React from \"react\";\r\n\r\nimport WeighinsView from \"../components/weighins/WeighinsView\";\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\nclass WeighinsContainer extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <div className={styles.contentArea}>\r\n        <WeighinsView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeighinsContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { kg2lbs, displayWeight } from \"../logic/units\";\r\n\r\nimport { PlateColors } from \"../constants/plateColors\";\r\n\r\nimport { Plate, LoadedPlate } from \"../types/dataTypes\";\r\n\r\n// Convert from kg to lbs with rounding to 2 decimal places.\r\n// It's OK that this is slow, since it rarely executes.\r\nconst safeKg2Lbs = (kg: number): number => {\r\n  return Number(displayWeight(kg2lbs(kg)));\r\n};\r\n\r\n// Returns a list of plate weights in loading order.\r\n// Any unloadable remainder is reported as a final number with a negative value.\r\nexport const selectPlates = (\r\n  loadingKg: number,\r\n  barAndCollarsWeightKg: number,\r\n  plates: ReadonlyArray<Plate>,\r\n  inKg: boolean\r\n): Array<LoadedPlate> => {\r\n  // Flow doesn't like it when arguments get redefined.\r\n  let loadingAny = loadingKg;\r\n  let barAndCollarsWeightAny = barAndCollarsWeightKg;\r\n  let platesAny = plates;\r\n\r\n  // Convert to pounds, avoiding floating point errors.\r\n  if (inKg === false) {\r\n    loadingAny = safeKg2Lbs(loadingKg);\r\n    barAndCollarsWeightAny = safeKg2Lbs(barAndCollarsWeightKg);\r\n    platesAny = plates.map((x) => ({ ...x, weightKg: safeKg2Lbs(x.weightKg) }));\r\n  }\r\n\r\n  // Sort a copy of the platesAny array by descending weight.\r\n  const sortedPlates = platesAny.slice().sort((a, b) => {\r\n    return b.weightKg - a.weightKg;\r\n  });\r\n\r\n  let sideWeightKg = (loadingAny - barAndCollarsWeightAny) / 2;\r\n  const loading: Array<LoadedPlate> = [];\r\n\r\n  // Run through each plate in order, applying as many of that plate as will fit.\r\n  for (let i = 0; i < sortedPlates.length; i++) {\r\n    const weightKg = sortedPlates[i].weightKg;\r\n    const color = sortedPlates[i].color;\r\n    let pairCount = sortedPlates[i].pairCount;\r\n    while (pairCount > 0 && weightKg <= sideWeightKg) {\r\n      pairCount--;\r\n      sideWeightKg -= weightKg;\r\n      loading.push({ weightAny: weightKg, isAlreadyLoaded: false, color: color });\r\n    }\r\n  }\r\n\r\n  // Report any remainder as a negative number.\r\n  if (sideWeightKg > 0) {\r\n    loading.push({ weightAny: -sideWeightKg, isAlreadyLoaded: false, color: PlateColors.PLATE_DEFAULT_RED });\r\n  }\r\n  return loading;\r\n};\r\n\r\n// Helper function: like Array.findIndex(), but starting from a specific index.\r\nconst findWeightFrom = (loading: Array<LoadedPlate>, startFrom: number, weight: number): number => {\r\n  for (let i = startFrom; i < loading.length; i++) {\r\n    if (loading[i].weightAny === weight) return i;\r\n  }\r\n  return -1;\r\n};\r\n\r\n// Sets the 'isAlreadyLoaded' property of each LoadedPlate relative to another loading.\r\n//\r\n// Both 'loading' and 'relativeTo' are sorted in non-ascending order of weight.\r\nexport const makeLoadingRelative = (loading: Array<LoadedPlate>, relativeTo: Array<LoadedPlate>): void => {\r\n  let finger = 0; // Increasing index into the relativeTo array.\r\n\r\n  // For each plate in the loading, look for a matching plate in relativeTo[finger..].\r\n  // When found, move the finger past that point.\r\n  for (let i = 0; i < loading.length; i++) {\r\n    const loadedPlate = loading[i];\r\n    const index = findWeightFrom(relativeTo, finger, loadedPlate.weightAny);\r\n    if (index >= 0) {\r\n      finger = index + 1;\r\n      loadedPlate.isAlreadyLoaded = true;\r\n    }\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// This is the widget that gives a visual display of the weights on the bar,\r\n// used by the loading crew.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { displayWeight } from \"../../logic/units\";\r\nimport { PlateColors } from \"../../constants/plateColors\";\r\n\r\nimport { Language, Lift, LoadedPlate } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\nimport styles from \"./BarLoad.module.scss\";\r\n\r\nconst kgToStyleMap = new Map<number, string>([\r\n  [50, styles.kg50],\r\n  [25, styles.kg25],\r\n  [20, styles.kg20],\r\n  [15, styles.kg15],\r\n  [10, styles.kg10],\r\n  [5, styles.kg5],\r\n  [2.5, styles.kg2p5],\r\n  [1.25, styles.kg1p25],\r\n  [1, styles.kg1],\r\n  [0.75, styles.kg0p75],\r\n  [0.5, styles.kg0p5],\r\n  [0.25, styles.kg0p25],\r\n]);\r\n\r\nconst weightKgToStyle = (weightKg: number): string => kgToStyleMap.get(weightKg) || styles.error;\r\n\r\nconst lbsToStyleMap = new Map<number, string>([\r\n  [100, styles.lbs100],\r\n  [55, styles.lbs55],\r\n  [45, styles.lbs45],\r\n  [35, styles.lbs35],\r\n  [25, styles.lbs25],\r\n  [10, styles.lbs10],\r\n  [5, styles.lbs5],\r\n  [2.5, styles.lbs2p5],\r\n  [1.25, styles.lbs1p25],\r\n  [0.5, styles.lbs0p5],\r\n]);\r\n\r\nconst weightLbsToStyle = (weightLbs: number): string => lbsToStyleMap.get(weightLbs) || styles.error;\r\n\r\nconst weightTextMap = new Map<number, string>([\r\n  [1.25, \"1¼\"],\r\n  [0.75, \"¾\"],\r\n  [0.5, \"½\"],\r\n  [0.25, \"¼\"],\r\n]);\r\n\r\nconst weightAnyToText = (weightAny: number, language: Language): string =>\r\n  weightTextMap.get(weightAny) || displayWeight(weightAny, language);\r\n\r\ninterface PlateInfoProps {\r\n  loading: LoadedPlate[];\r\n  inKg: boolean;\r\n  language: Language;\r\n}\r\n\r\n// Turns the selectPlates() array into divs.\r\nconst PlatesDiv: React.FC<PlateInfoProps> = ({ loading, inKg, language }) => {\r\n  const divs = [];\r\n  let i = 0;\r\n\r\n  // Iterate on a group of plates of the same weight at a time.\r\n  while (i < loading.length) {\r\n    const weightAny = loading[i].weightAny;\r\n\r\n    // If the weight is negative, it's an error report.\r\n    if (weightAny < 0) {\r\n      divs.push(\r\n        <div key={\"error\"} className={styles.error}>\r\n          ?{displayWeight(-1 * weightAny, language)}\r\n        </div>\r\n      );\r\n      break;\r\n    }\r\n\r\n    // Count how many times this same plate kind appears consecutively.\r\n    let plateCount = 1;\r\n    for (let j = i + 1; j < loading.length && loading[j].weightAny === weightAny; j++) {\r\n      plateCount++;\r\n    }\r\n\r\n    // If that plate is large and occurs a bunch, show a counter.\r\n    const showCounter = plateCount >= 3;\r\n\r\n    // Push each of the plates individually.\r\n    for (let j = 0; j < plateCount; j++) {\r\n      const plate = loading[i + j];\r\n      const counter = String(j + 1);\r\n\r\n      // Light backgrounds need dark text.\r\n      const is_light =\r\n        plate.color === PlateColors.PLATE_DEFAULT_WHITE || plate.color === PlateColors.PLATE_DEFAULT_YELLOW;\r\n\r\n      const style = {\r\n        backgroundColor: plate.color,\r\n        opacity: plate.isAlreadyLoaded ? 0.25 : undefined,\r\n        color: is_light ? \"#232323\" : \"#FFFFFF\",\r\n        // White plates need a border.\r\n        border: plate.color === PlateColors.PLATE_DEFAULT_WHITE ? \"1.5px solid #232323\" : undefined,\r\n      };\r\n\r\n      divs.push(\r\n        <div\r\n          key={weightAny + \"-\" + counter}\r\n          className={inKg ? weightKgToStyle(weightAny) : weightLbsToStyle(weightAny)}\r\n          style={style}\r\n        >\r\n          <div>{weightAnyToText(weightAny, language)}</div>\r\n          {showCounter ? <div>{counter}</div> : null}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    i += plateCount;\r\n  }\r\n\r\n  return <>{divs}</>;\r\n};\r\n\r\ninterface RackInfoProps {\r\n  lift: Lift;\r\n  rackInfo: string;\r\n}\r\n\r\nconst RackInfoDiv: React.FC<RackInfoProps> = ({ lift, rackInfo }) => {\r\n  // Only show rack info for lifts that use a rack.\r\n  if (lift === \"D\") return null;\r\n\r\n  return (\r\n    <div key={rackInfo} className={styles.rackInfo}>\r\n      <FormattedMessage\r\n        id=\"lifting.rack-info\"\r\n        defaultMessage=\"Rack {rackInfo}\"\r\n        values={{\r\n          rackInfo: rackInfo,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface OwnProps {\r\n  loading: Array<LoadedPlate>;\r\n  rackInfo: string;\r\n  inKg: boolean;\r\n}\r\n\r\ninterface StateProps {\r\n  lift: Lift;\r\n  language: Language;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\nconst BarLoad: React.FC<Props> = ({ lift, loading, inKg, language, rackInfo }) => (\r\n  <div className={styles.container}>\r\n    <div className={styles.bar} />\r\n    <PlatesDiv loading={loading} inKg={inKg} language={language} />\r\n    <div className={styles.collar} />\r\n    <div className={styles.bar} />\r\n    <RackInfoDiv lift={lift} rackInfo={rackInfo} />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  lift: state.lifting.lift,\r\n  language: state.language,\r\n});\r\n\r\nexport default connect(mapStateToProps)(BarLoad);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The left card on the lifting page, showing information about the current lifter\r\n// and helpful information for the loading crew.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport { selectPlates, makeLoadingRelative } from \"../../logic/barLoad\";\r\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\r\nimport { getString } from \"../../logic/strings\";\r\nimport { kg2lbs, displayWeightOnePlace } from \"../../logic/units\";\r\n\r\nimport BarLoad from \"./BarLoad\";\r\n\r\nimport styles from \"./LeftCard.module.scss\";\r\n\r\nimport { Entry, Language, LoadedPlate, Plate } from \"../../types/dataTypes\";\r\nimport { GlobalState, LiftingState, RegistrationState } from \"../../types/stateTypes\";\r\n\r\ninterface OwnProps {\r\n  attemptOneIndexed: number;\r\n  orderedEntries: Array<Entry>;\r\n  currentEntryId: number | null;\r\n  nextEntryId: number | null;\r\n  nextAttemptOneIndexed: number | null;\r\n}\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  showAlternateUnits: boolean;\r\n  squatBarAndCollarsWeightKg: number;\r\n  benchBarAndCollarsWeightKg: number;\r\n  deadliftBarAndCollarsWeightKg: number;\r\n  plates: ReadonlyArray<Plate>;\r\n  registration: RegistrationState;\r\n  lifting: LiftingState;\r\n  language: Language;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\ninterface BarLoadOptions {\r\n  weightKg: number;\r\n  weightLbs: number;\r\n  rackInfo: string;\r\n}\r\n\r\nclass LeftCard extends React.Component<Props> {\r\n  getBarLoadProps = (entryId: number | null, attemptOneIndexed: number | null): BarLoadOptions => {\r\n    const lift = this.props.lifting.lift;\r\n    const fieldKg = liftToAttemptFieldName(lift);\r\n\r\n    // Defaults, in case of no lifter.\r\n    if (entryId === null || entryId === undefined || attemptOneIndexed === null || attemptOneIndexed === undefined) {\r\n      return { weightKg: 0, weightLbs: 0, rackInfo: \"\" };\r\n    }\r\n\r\n    const idx = this.props.registration.lookup[entryId];\r\n    const entry = this.props.registration.entries[idx];\r\n\r\n    const weightKg = entry[fieldKg][attemptOneIndexed - 1];\r\n    const weightLbs = kg2lbs(weightKg);\r\n\r\n    let rackInfo = \"\";\r\n    if (lift === \"S\") rackInfo = entry.squatRackInfo;\r\n    if (lift === \"B\") rackInfo = entry.benchRackInfo;\r\n\r\n    return { weightKg, weightLbs, rackInfo };\r\n  };\r\n\r\n  getBarAndCollarsWeightKg = (): number => {\r\n    switch (this.props.lifting.lift) {\r\n      case \"S\":\r\n        return this.props.squatBarAndCollarsWeightKg;\r\n      case \"B\":\r\n        return this.props.benchBarAndCollarsWeightKg;\r\n      case \"D\":\r\n        return this.props.deadliftBarAndCollarsWeightKg;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const current = this.getBarLoadProps(this.props.currentEntryId, this.props.attemptOneIndexed);\r\n    const next = this.getBarLoadProps(this.props.nextEntryId, this.props.nextAttemptOneIndexed);\r\n\r\n    // Show one decimal point, and omit it if possible.\r\n    const language = this.props.language;\r\n    const weightKgText = displayWeightOnePlace(current.weightKg, language);\r\n    const weightLbsText = displayWeightOnePlace(current.weightLbs, language);\r\n\r\n    const barAndCollarsWeightKg = this.getBarAndCollarsWeightKg();\r\n\r\n    // Calculate both loadings.\r\n    const currentLoading: Array<LoadedPlate> = selectPlates(\r\n      current.weightKg,\r\n      barAndCollarsWeightKg,\r\n      this.props.plates,\r\n      this.props.inKg\r\n    );\r\n    const nextLoading: Array<LoadedPlate> = selectPlates(\r\n      next.weightKg,\r\n      barAndCollarsWeightKg,\r\n      this.props.plates,\r\n      this.props.inKg\r\n    );\r\n\r\n    // Set the next loading relative to the current loading.\r\n    if (next.weightKg >= current.weightKg) {\r\n      makeLoadingRelative(nextLoading, currentLoading);\r\n    }\r\n\r\n    let nextEntryName = undefined;\r\n    if (typeof this.props.nextEntryId === \"number\") {\r\n      const idx = this.props.registration.lookup[this.props.nextEntryId];\r\n      nextEntryName = this.props.registration.entries[idx].name;\r\n    }\r\n\r\n    const nextBarLoad =\r\n      next.weightKg === 0 ? undefined : (\r\n        <div className={styles.loadingBar}>\r\n          <div className={styles.nextText}>\r\n            <FormattedMessage\r\n              id=\"lifting.next-up\"\r\n              defaultMessage=\"NEXT UP – {lifter}\"\r\n              values={{\r\n                lifter: nextEntryName,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={styles.barArea}>\r\n            <BarLoad\r\n              key={String(next.weightKg) + next.rackInfo}\r\n              loading={nextLoading}\r\n              rackInfo={next.rackInfo}\r\n              inKg={this.props.inKg}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    let attemptTemplate = \"\";\r\n    if (this.props.inKg) {\r\n      if (this.props.showAlternateUnits) {\r\n        attemptTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\r\n      } else {\r\n        attemptTemplate = getString(\"lifting.current-weight-kg\", language);\r\n      }\r\n    } else {\r\n      if (this.props.showAlternateUnits) {\r\n        attemptTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\r\n      } else {\r\n        attemptTemplate = getString(\"lifting.current-weight-lbs\", language);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.activeCard}>\r\n          <div className={styles.loadingBar}>\r\n            <div className={styles.attemptText}>\r\n              {attemptTemplate.replace(\"{kg}\", weightKgText).replace(\"{lbs}\", weightLbsText)}\r\n            </div>\r\n            <div className={styles.barArea}>\r\n              <BarLoad\r\n                key={String(current.weightKg) + current.rackInfo}\r\n                loading={currentLoading}\r\n                rackInfo={current.rackInfo}\r\n                inKg={this.props.inKg}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {nextBarLoad}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    inKg: state.meet.inKg,\r\n    showAlternateUnits: state.meet.showAlternateUnits,\r\n    squatBarAndCollarsWeightKg: state.meet.squatBarAndCollarsWeightKg,\r\n    benchBarAndCollarsWeightKg: state.meet.benchBarAndCollarsWeightKg,\r\n    deadliftBarAndCollarsWeightKg: state.meet.deadliftBarAndCollarsWeightKg,\r\n    plates: state.meet.plates,\r\n    registration: state.registration,\r\n    lifting: state.lifting,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LeftCard);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// An editable component for attempt manipulation in the LiftingContent.\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\r\nimport { enterAttempt } from \"../../actions/liftingActions\";\r\nimport { kg2lbs, lbs2kg, string2number, displayWeight } from \"../../logic/units\";\r\n\r\nimport { Entry, Language, Lift, Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\nimport styles from \"./LiftingTable.module.scss\";\r\nimport { FormControlTypeHack } from \"../../types/utils\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  language: Language;\r\n  attemptHandinTimeout: number;\r\n  enableAttemptHandinTimer: boolean;\r\n}\r\n\r\ninterface OwnProps {\r\n  entry: Entry;\r\n  lift: Lift;\r\n  attemptOneIndexed: number;\r\n  id: string;\r\n}\r\n\r\ninterface DispatchProps {\r\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\r\n}\r\n\r\ntype Props = StateProps & OwnProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  lastGoodValue: string;\r\n  value: string;\r\n  timeLeft: number;\r\n}\r\n\r\nclass AttemptInput extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.validate = this.validate.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n    const fieldStatus = liftToStatusFieldName(this.props.lift);\r\n    const attempt: number = this.props.attemptOneIndexed - 1;\r\n    const fieldKg = liftToAttemptFieldName(this.props.lift);\r\n    const weightKg: number = this.props.entry[fieldKg][attempt];\r\n\r\n    let weightStr = \"\";\r\n    let timeLeft = -1;\r\n    if (weightKg !== 0) {\r\n      weightStr = displayWeight(this.props.inKg ? weightKg : kg2lbs(weightKg), this.props.language);\r\n    } else if (this.props.enableAttemptHandinTimer) {\r\n      if (attempt > 0 && this.props.entry[fieldStatus][attempt - 1] !== 0) {\r\n        const lastAttemptKg = this.props.entry[fieldKg][attempt - 1];\r\n        const lastAttemptStatus = this.props.entry[fieldStatus][attempt - 1];\r\n        const extraWeight = lastAttemptStatus == 1 ? (this.props.inKg ? 2.5 : 5) : 0;\r\n        const lastWeightKg = lastAttemptKg + extraWeight;\r\n  \r\n        const PADDING = 1000; // to show 0s before timeout \r\n        const seconds = this.props.attemptHandinTimeout * 1000 + PADDING;\r\n        setTimeout(this.setToDefault.bind(this, lastWeightKg), seconds);\r\n        setInterval(this.countDown, 1000);\r\n        timeLeft = this.props.attemptHandinTimeout;\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      lastGoodValue: weightStr,\r\n      value: weightStr,\r\n      timeLeft: timeLeft,\r\n    };\r\n  }\r\n\r\n  countDown = () => {\r\n    this.setState({\r\n      timeLeft: this.state.timeLeft - 1,\r\n    });\r\n  }\r\n\r\n  setToDefault = (weightKg: number) => {\r\n    if (this.state.value) {\r\n      return;\r\n    }\r\n    const weightStr = displayWeight(this.props.inKg ? weightKg : kg2lbs(weightKg), this.props.language);\r\n    this.setState({\r\n      lastGoodValue: weightStr,\r\n      value: weightStr,\r\n    })\r\n    this.handleBlur()\r\n  }\r\n\r\n  validate = (): Validation => {\r\n    let { value } = this.state;\r\n    if (value === \"\") return null;\r\n\r\n    // Allow use of commas as decimal separator.\r\n    value = value.replace(\",\", \".\");\r\n\r\n    // Handle all errors before all warnings.\r\n    // Check that the input is a number.\r\n    const asNumber = Number(value);\r\n    if (isNaN(asNumber)) return \"error\";\r\n    if (!isFinite(asNumber)) return \"error\";\r\n    if (asNumber < 0) return \"error\";\r\n\r\n    // The bar weight must be monotonically increasing between attempts.\r\n    if (this.props.attemptOneIndexed > 1) {\r\n      const asKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\r\n\r\n      const entry = this.props.entry;\r\n      const fieldKg = liftToAttemptFieldName(this.props.lift);\r\n      const fieldStatus = liftToStatusFieldName(this.props.lift);\r\n\r\n      const prevAttemptOneIndexed = this.props.attemptOneIndexed - 1;\r\n\r\n      // Check for validity against all previous attempts.\r\n      for (let i = 0; i < prevAttemptOneIndexed; ++i) {\r\n        const prevWeightKg = entry[fieldKg][i];\r\n\r\n        // Disallow this weight if it's a decrease from a previous attempt.\r\n        if (prevWeightKg > asKg) return \"error\";\r\n\r\n        if (prevWeightKg === asKg) {\r\n          const prevStatus = entry[fieldStatus][i];\r\n\r\n          // Disallow this weight if it was already successfully lifted.\r\n          if (prevStatus === 1) return \"error\";\r\n\r\n          // If the weight is a repeat but has no status, allow it, but complain.\r\n          if (prevStatus === 0) return \"warning\";\r\n        }\r\n      }\r\n    }\r\n\r\n    if (asNumber % 2.5 !== 0) return \"warning\";\r\n    return null;\r\n  };\r\n\r\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      event.currentTarget.blur();\r\n    }\r\n  };\r\n\r\n  handleChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const value = event.currentTarget.value;\r\n    if (typeof value === \"string\") {\r\n      let fixups = value.replace(\" \", \"\");\r\n\r\n      // Dvorak \"e\" corresponds to QWERTY \".\", but also is used in exponential\r\n      // notation, which is a fairly impactful typo.\r\n      fixups = value.replace(\"e\", \".\");\r\n\r\n      this.setState({ value: fixups });\r\n    }\r\n  };\r\n\r\n  handleBlur = () => {\r\n    if (this.validate() === \"error\") {\r\n      this.setState({ value: this.state.lastGoodValue });\r\n      return;\r\n    }\r\n\r\n    const entryId = this.props.entry.id;\r\n    const lift = this.props.lift;\r\n    const attemptOneIndexed = this.props.attemptOneIndexed;\r\n    const asNumber = string2number(this.state.value);\r\n    const weightKg = this.props.inKg ? asNumber : lbs2kg(asNumber);\r\n\r\n    this.props.enterAttempt(entryId, lift, attemptOneIndexed, weightKg);\r\n    this.setState({ lastGoodValue: this.state.value });\r\n  };\r\n\r\n  render() {\r\n    const validation: Validation = this.validate();\r\n\r\n    return (\r\n      <Form.Group style={{ marginBottom: 0 }}>\r\n        <Form.Control\r\n          id={this.props.id}\r\n          type=\"text\"\r\n          placeholder={this.state.timeLeft > -1 ? this.state.timeLeft.toString() + \"s\" : \"\"}\r\n          value={this.state.value}\r\n          onKeyDown={this.handleKeyDown}\r\n          onChange={this.handleChange}\r\n          onBlur={this.handleBlur}\r\n          // Nothing for Valid == we don't want borders.\r\n          isInvalid={validation === \"error\"}\r\n          // Special rules in the _openlifter.scss override warning styles.\r\n          // Makes the borders look normal but shows a yellow background.\r\n          className={(validation === \"warning\" ? \"is-warning \" : \"\") + styles.attemptInput + \" attempt-input\"}\r\n        />\r\n      </Form.Group>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  inKg: state.meet.inKg,\r\n  language: state.language,\r\n  attemptHandinTimeout: state.meet.attemptHandinTimeout,\r\n  enableAttemptHandinTimer: state.meet.enableAttemptHandinTimer,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\r\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\r\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AttemptInput);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of AH points, used by ParaPL.\r\n// Taken from https://gitlab.com/openpowerlifting/opl-data/blob/master/modules/coefficients/src/ah.rs\r\n\r\nimport { Sex } from \"../../types/dataTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\n// Calculates the AH coefficient for men.\r\n//\r\n// The full formula is defined in Excel:\r\n//  =ROUND($AM$1/(POWER(LOG(I13),$AM$2))*M13,2)\r\n//\r\n// Where:\r\n//  I13: Bodyweight\r\n//  M13: Lift Attempt\r\n//  AM1: 3.2695\r\n//  AM2: 1.95\r\nfunction ahMen(bodyweightKg: number): number {\r\n  const AM1: number = 3.2695;\r\n  const AM2: number = 1.95;\r\n\r\n  const adjusted = Math.min(Math.max(bodyweightKg, 32.0), 157.0);\r\n\r\n  return AM1 / Math.pow(Math.log10(adjusted), AM2);\r\n}\r\n\r\n// Calculates the AH coefficient for women.\r\n//\r\n// The full formula is defined in Excel:\r\n//  =ROUND($AG$1/(POWER(LOG(I13),$AG$10))*M13,2)\r\n//\r\n// Where:\r\n//  I13: Bodyweight\r\n//  M13: Lift Attempt\r\n//  AG1: 2.7566\r\n//  AG10: 1.8\r\nfunction ahWomen(bodyweightKg: number): number {\r\n  const AG1: number = 2.7566;\r\n  const AG10: number = 1.8;\r\n\r\n  const adjusted = Math.min(Math.max(bodyweightKg, 28.0), 112.0);\r\n\r\n  return AG1 / Math.pow(Math.log10(adjusted), AG10);\r\n}\r\n\r\n// Calculates AH (Haleczko) points, used in ParaPL bench-only meets.\r\nexport const ah = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\r\n  switch (sex) {\r\n    case \"M\":\r\n    case \"Mx\":\r\n      return ahMen(bodyweightKg) * totalKg;\r\n    case \"F\":\r\n      return ahWomen(bodyweightKg) * totalKg;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of Dots points.\r\n//\r\n// Dots were introduced by the German IPF Affiliate BVDK after the IPF switched to\r\n// IPF Points, which do not allow comparing between sexes. The BVDK hosts team\r\n// competitions that allow lifters of all sexes to compete on a singular team.\r\n//\r\n// Since Wilks points have been ostracized from the IPF, and IPF Points are\r\n// unsuitable, German lifters therefore came up with their own formula.\r\n//\r\n// The author of the Dots formula is Tim Konertz <tim.konertz@outlook.com>.\r\n//\r\n// Tim says that Dots is an acronym for \"Dynamic Objective Team Scoring,\"\r\n// but that they chose the acronym before figuring out the expansion.\r\n//\r\n// Implementation taken from the main OpenPowerlifting repo, also AGPLv3+.\r\n\r\nimport { Sex } from \"../../types/dataTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nfunction dotsPoly(a: number, b: number, c: number, d: number, e: number, x: number): number {\r\n  const x2 = x * x;\r\n  const x3 = x2 * x;\r\n  const x4 = x3 * x;\r\n  return 500.0 / (a * x4 + b * x3 + c * x2 + d * x + e);\r\n}\r\n\r\nexport function dotsMen(bodyweightKg: number): number {\r\n  const A = -0.000001093;\r\n  const B = 0.0007391293;\r\n  const C = -0.1918759221;\r\n  const D = 24.0900756;\r\n  const E = -307.75076;\r\n\r\n  const adjusted = Math.max(Math.min(bodyweightKg, 210.0), 40.0);\r\n  return dotsPoly(A, B, C, D, E, adjusted);\r\n}\r\n\r\nexport function dotsWomen(bodyweightKg: number): number {\r\n  const A = -0.0000010706;\r\n  const B = 0.0005158568;\r\n  const C = -0.1126655495;\r\n  const D = 13.6175032;\r\n  const E = -57.96288;\r\n\r\n  const adjusted = Math.max(Math.min(bodyweightKg, 150.0), 40.0);\r\n  return dotsPoly(A, B, C, D, E, adjusted);\r\n}\r\n\r\nexport const dots = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\r\n  if (bodyweightKg === 0 || totalKg === 0) {\r\n    return 0.0;\r\n  }\r\n\r\n  switch (sex) {\r\n    case \"M\":\r\n    case \"Mx\":\r\n      return dotsMen(bodyweightKg) * totalKg;\r\n    case \"F\":\r\n      return dotsWomen(bodyweightKg) * totalKg;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines Foster-McCulloch age coefficients.\r\n//\r\n// These are taken from the OpenPowerlifting coefficients module,\r\n// translated from the original Rust code.\r\n\r\nconst AGE_COEFFICIENTS = [\r\n  // Coefficients in the range of 0-4 are clearly nonsense.\r\n  0.0, // 0\r\n  0.0, // 1\r\n  0.0, // 2\r\n  0.0, // 3\r\n  0.0, // 4\r\n  // These coefficients don't actually exist, and are just low-balled best guesses.\r\n  // Kids really shouldn't be competing in this sport...\r\n  // Ranges from age 5 to 13.\r\n  1.73, // 5\r\n  1.67, // 6\r\n  1.61, // 7\r\n  1.55, // 8\r\n  1.49, // 9\r\n  1.43, // 10\r\n  1.38, // 11\r\n  1.33, // 12\r\n  1.28, // 13\r\n  // Foster coefficients:\r\n  // http://www.usapl-sd.com/Formulas/Foster.htm\r\n  // Ranges from age 14 to 22.\r\n  1.23, // 14\r\n  1.18, // 15\r\n  1.13, // 16\r\n  1.08, // 17\r\n  1.06, // 18\r\n  1.04, // 19\r\n  1.03, // 20\r\n  1.02, // 21\r\n  1.01, // 22\r\n  // Lifters in the range 23-40 receive no handicap.\r\n  1.0, // 23\r\n  1.0, // 24\r\n  1.0, // 25\r\n  1.0, // 26\r\n  1.0, // 27\r\n  1.0, // 28\r\n  1.0, // 29\r\n  1.0, // 30\r\n  1.0, // 31\r\n  1.0, // 32\r\n  1.0, // 33\r\n  1.0, // 34\r\n  1.0, // 35\r\n  1.0, // 36\r\n  1.0, // 37\r\n  1.0, // 38\r\n  1.0, // 39\r\n  1.0, // 40\r\n  // McCulloch coefficients:\r\n  //  http://www.usapl-sd.com/Formulas/Mcculloch.htm (contains some errors).\r\n  // Errors were corrected using the Masters coefficients from:\r\n  //  http://worldpowerliftingcongress.com/wp-content/uploads/2015/02/Glossbrenner.htm\r\n  // Ranges from age 41 to 80.\r\n  1.01, // 41\r\n  1.02, // 42\r\n  1.031, // 43\r\n  1.043, // 44\r\n  1.055, // 45\r\n  1.068, // 46\r\n  1.082, // 47\r\n  1.097, // 48\r\n  1.113, // 49\r\n  1.13, // 50\r\n  1.147, // 51\r\n  1.165, // 52\r\n  1.184, // 53\r\n  1.204, // 54\r\n  1.225, // 55\r\n  1.246, // 56\r\n  1.268, // 57\r\n  1.291, // 58\r\n  1.315, // 59\r\n  1.34, // 60\r\n  1.366, // 61\r\n  1.393, // 62\r\n  1.421, // 63\r\n  1.45, // 64\r\n  1.48, // 65\r\n  1.511, // 66\r\n  1.543, // 67\r\n  1.576, // 68\r\n  1.61, // 69\r\n  1.645, // 70\r\n  1.681, // 71\r\n  1.718, // 72\r\n  1.756, // 73\r\n  1.795, // 74\r\n  1.835, // 75\r\n  1.876, // 76\r\n  1.918, // 77\r\n  1.961, // 78\r\n  2.005, // 79\r\n  2.05, // 80\r\n  // These coefficients taken from:\r\n  // http://www.usapltwinportsrawopen.com/resources/USAPL+Age+Coefficients.pdf\r\n  // Ranges from age 81 to 90.\r\n  2.096, // 81\r\n  2.143, // 82\r\n  2.19, // 83\r\n  2.238, // 84\r\n  2.287, // 85\r\n  2.337, // 86\r\n  2.388, // 87\r\n  2.44, // 88\r\n  2.494, // 89\r\n  2.549, // 90\r\n  // Coefficients above 90 were just guessed at, and are unstandardized.\r\n  2.605, // 91\r\n  2.662, // 92\r\n  2.72, // 93\r\n  2.779, // 94\r\n  2.839, // 95\r\n  2.9, // 96\r\n  2.962, // 97\r\n  3.025, // 98\r\n  3.089, // 99\r\n  3.154, // 100\r\n];\r\n\r\n// Maps the given age into the table above.\r\nexport const fosterMcCulloch = (age: number): number => {\r\n  if (!Number.isInteger(age) || age <= 0) {\r\n    return 1.0;\r\n  }\r\n\r\n  // Greater-than is correct here: (age) is used to index into table, not (age-1).\r\n  if (age > AGE_COEFFICIENTS.length) {\r\n    return 1.0;\r\n  }\r\n\r\n  return AGE_COEFFICIENTS[age];\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of Schwartz-Malone points.\r\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\r\n\r\nimport { Sex } from \"../../types/dataTypes\";\r\n\r\n// Calculates the Schwartz coefficient, used for men.\r\n//\r\n// The Schwartz formula replaced the Hoffinan formula.\r\n// Schwartz was proposed around February 1971.\r\n//\r\n// The exact formula was found in the magazine Powerlifting USA,\r\n// Vol.6, No.2, August 1982, on page 61. That text is reproduced below:\r\n//\r\n// Computerized Schwartz Formula...Dr. Lyle Schwartz has often been\r\n// asked for a means by which the formula he has given Powerlifting can be\r\n// programmed into a computer or a hand held calculator with sufficient\r\n// memory. To obtain the Schwartz Formula (SF) for bodyweights (BW) bet-\r\n// ween 40 and 126 kg, the expression is: SF = 0.631926 exp(+01) -\r\n// 0.262349 exp(+00) (BW) + 0.511550 exp(-02) (BW)^2 - 0.519738\r\n// exp(-04) (BW)^3 + 0.267626 exp(-06) (BW)^4 - 0.540132 exp(-09)\r\n// (BW)^5 - 0.728875 exp(-13) (BW)^6. For higher bodyweights, the follow-\r\n// ing simple formulae are used: for BW 126-136, SF = 0.5210-0.0012\r\n// (BW - 125), for BW 136-146, SF = 0.5090-0011 (BW - 135), for BW\r\n// 146-156, SF = 0.4980-0.0010 (BW - 145), and for BW 156-166, SF =\r\n// 0.4880-0.0090 (BW - 156)\r\n//\r\n// Schwartz is quoted as saying about the formula's development,\r\n//\r\n// \"Since powerlifting was still a young sport in the early 1970s\r\n// there was uneven development in the three lifts on the part of most\r\n// self-trained athletes. I compensated for such unevenness by creating\r\n// artificial 'best' totals by adding together the current records in the\r\n// individual lifts. A 'best' total would have been achieved by that ideal\r\n// lifter who could match the best performances to date in all three\r\n// powerlifts. Then I fitted these data to an artificial curve and picked\r\n// off numbers from the curve.\"\r\nexport const schwartz_coefficient = (bodyweightKg: number): number => {\r\n  const adjusted = Math.min(Math.max(bodyweightKg, 40.0), 166.0);\r\n\r\n  if (adjusted <= 126.0) {\r\n    const x0 = 0.631926 * 10.0;\r\n    const x1 = 0.262349 * adjusted;\r\n    const x2 = 0.51155 * Math.pow(10.0, -2) * Math.pow(adjusted, 2);\r\n    const x3 = 0.519738 * Math.pow(10.0, -4) * Math.pow(adjusted, 3);\r\n    const x4 = 0.267626 * Math.pow(10.0, -6) * Math.pow(adjusted, 4);\r\n    const x5 = 0.540132 * Math.pow(10.0, -9) * Math.pow(adjusted, 5);\r\n    const x6 = 0.728875 * Math.pow(10.0, -13) * Math.pow(adjusted, 6);\r\n    return x0 - x1 + x2 - x3 + x4 - x5 - x6;\r\n  } else if (adjusted <= 136.0) {\r\n    return 0.521 - 0.0012 * (adjusted - 125.0);\r\n  } else if (adjusted <= 146.0) {\r\n    return 0.509 - 0.0011 * (adjusted - 135.0);\r\n  } else if (adjusted <= 156.0) {\r\n    return 0.498 - 0.001 * (adjusted - 145.0);\r\n  } else {\r\n    // The final formula as published for this piece does not match\r\n    // the coefficient tables.\r\n    //\r\n    // From the tables, the step is exactly 0.0004 per pound, which\r\n    // has been converted to kg below.\r\n    //\r\n    // For reference, the published original is:\r\n    //   0.4880 - 0.0090 * (adjusted - 156.0)\r\n    return 0.4879 - 0.00088185 * (adjusted - 155.0);\r\n  }\r\n};\r\n\r\n// Calculates the Malone coefficient, used for women.\r\nexport const malone_coefficient = (bodyweightKg: number): number => {\r\n  // Values calculated by fitting to coefficient tables.\r\n  const A = 106.011586323613;\r\n  const B = -1.293027130579051;\r\n  const C = 0.322935585328304;\r\n\r\n  // Lower bound chosen at point where Malone = max(Wilks).\r\n  const adjusted = Math.max(bodyweightKg, 29.24);\r\n\r\n  return A * Math.pow(adjusted, B) + C;\r\n};\r\n\r\n// Calculates Schwartz-Malone points.\r\n//\r\n// Schwartz-Malone is an older system that was superseded by Wilks.\r\nexport const schwartzmalone = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\r\n  switch (sex) {\r\n    case \"M\":\r\n      return schwartz_coefficient(bodyweightKg) * totalKg;\r\n    case \"F\":\r\n      return malone_coefficient(bodyweightKg) * totalKg;\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of Wilks points.\r\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\r\n\r\nimport { Sex } from \"../../types/dataTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nfunction wilksPoly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\r\n  const x2 = x * x;\r\n  const x3 = x2 * x;\r\n  const x4 = x3 * x;\r\n  const x5 = x4 * x;\r\n  return 500.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\r\n}\r\n\r\nexport function wilksMen(bodyweightKg: number): number {\r\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 201.9);\r\n  return wilksPoly(-216.0475144, 16.2606339, -0.002388645, -0.00113732, 7.01863e-6, -1.291e-8, normalized);\r\n}\r\n\r\nexport function wilksWomen(bodyweightKg: number): number {\r\n  const normalized = Math.min(Math.max(bodyweightKg, 26.51), 154.53);\r\n  return wilksPoly(\r\n    594.31747775582,\r\n    -27.23842536447,\r\n    0.82112226871,\r\n    -0.00930733913,\r\n    0.00004731582,\r\n    -0.00000009054,\r\n    normalized\r\n  );\r\n}\r\n\r\nexport const wilks = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\r\n  switch (sex) {\r\n    case \"M\":\r\n    case \"Mx\":\r\n      return wilksMen(bodyweightKg) * totalKg;\r\n    case \"F\":\r\n      return wilksWomen(bodyweightKg) * totalKg;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of Glossbrenner points.\r\n// Taken from https://gitlab.com/openpowerlifting/opl-data.\r\n\r\nimport { schwartz_coefficient, malone_coefficient } from \"./schwartzmalone\";\r\nimport { wilksMen, wilksWomen } from \"./wilks\";\r\n\r\nimport { Sex } from \"../../types/dataTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nconst glossbrenner_coefficient_men = (bodyweightKg: number): number => {\r\n  // Glossbrenner is defined piecewise.\r\n  if (bodyweightKg < 153.05) {\r\n    return (schwartz_coefficient(bodyweightKg) + wilksMen(bodyweightKg)) / 2.0;\r\n  } else {\r\n    // Linear coefficients found by fitting to a table.\r\n    const A = -0.000821668402557;\r\n    const B = 0.676940740094416;\r\n    return (schwartz_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\r\n  }\r\n};\r\n\r\nconst glossbrenner_coefficient_women = (bodyweightKg: number): number => {\r\n  // Glossbrenner is defined piecewise.\r\n  if (bodyweightKg < 106.3) {\r\n    return (malone_coefficient(bodyweightKg) + wilksWomen(bodyweightKg)) / 2.0;\r\n  } else {\r\n    // Linear coefficients found by fitting to a table.\r\n    const A = -0.000313738002024;\r\n    const B = 0.852664892884785;\r\n    return (malone_coefficient(bodyweightKg) + A * bodyweightKg + B) / 2.0;\r\n  }\r\n};\r\n\r\n// Calculates Glossbrenner points.\r\n//\r\n// Glossbrenner is the average of two older systems, Schwartz-Malone and Wilks,\r\n// with a piecewise linear section.\r\n//\r\n// This points system is most often used by GPC affiliates.\r\nexport const glossbrenner = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\r\n  switch (sex) {\r\n    case \"M\":\r\n    case \"Mx\":\r\n      return glossbrenner_coefficient_men(bodyweightKg) * totalKg;\r\n    case \"F\":\r\n      return glossbrenner_coefficient_women(bodyweightKg) * totalKg;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of IPF GL (GOODLIFT) Points.\r\n\r\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\r\n\r\ntype Coefficients = Array<number>;\r\ntype ByEvent = {\r\n  SBD: Coefficients;\r\n  B: Coefficients;\r\n};\r\ntype ByEquipment = {\r\n  Sleeves: ByEvent;\r\n  \"Single-ply\": ByEvent;\r\n};\r\ntype BySex = {\r\n  M: ByEquipment;\r\n  F: ByEquipment;\r\n};\r\n\r\nconst PARAMETERS: BySex = {\r\n  M: {\r\n    Sleeves: {\r\n      SBD: [1199.72839, 1025.18162, 0.00921],\r\n      B: [320.98041, 281.40258, 0.01008],\r\n    },\r\n    \"Single-ply\": {\r\n      SBD: [1236.25115, 1449.21864, 0.01644],\r\n      B: [381.22073, 733.79378, 0.02398],\r\n    },\r\n  },\r\n  F: {\r\n    Sleeves: {\r\n      SBD: [610.32796, 1045.59282, 0.03048],\r\n      B: [142.40398, 442.52671, 0.04724],\r\n    },\r\n    \"Single-ply\": {\r\n      SBD: [758.63878, 949.31382, 0.02435],\r\n      B: [221.82209, 357.00377, 0.02937],\r\n    },\r\n  },\r\n};\r\n\r\nexport const goodlift = (\r\n  totalKg: number,\r\n  bodyweightKg: number,\r\n  sex: Sex,\r\n  equipment: Equipment,\r\n  event: Event\r\n): number => {\r\n  if (totalKg === 0) return 0;\r\n  if (bodyweightKg < 40) return 0;\r\n\r\n  // Restrict inputs to only the defined subset.\r\n  let normalizedEquipment = equipment;\r\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\r\n    normalizedEquipment = \"Sleeves\";\r\n  } else if (equipment === \"Multi-ply\" || equipment === \"Unlimited\") {\r\n    normalizedEquipment = \"Single-ply\";\r\n  }\r\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\r\n    return 0;\r\n  }\r\n\r\n  // Consider Mx athletes as M, since that's the harsher formula.\r\n  let normalizedSex = sex;\r\n  if (sex === \"Mx\") normalizedSex = \"M\";\r\n\r\n  if (event !== \"SBD\" && event !== \"B\") return 0;\r\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\r\n\r\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\r\n  const denom = params[0] - params[1] * Math.exp(-1.0 * params[2] * bodyweightKg);\r\n  const glp = denom === 0 ? 0 : Math.max(0, (totalKg * 100.0) / denom);\r\n  if (isNaN(glp) || bodyweightKg < 35) {\r\n    return 0.0;\r\n  }\r\n  return glp;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of IPF Points.\r\n// Taken from https://gitlab.com/openpowerlifting/ipf-points-calculator.\r\n\r\nimport { Sex, Event, Equipment } from \"../../types/dataTypes\";\r\n\r\ntype Coefficients = Array<number>;\r\ntype ByEvent = {\r\n  SBD: Coefficients;\r\n  S: Coefficients;\r\n  B: Coefficients;\r\n  D: Coefficients;\r\n};\r\ntype ByEquipment = {\r\n  Sleeves: ByEvent;\r\n  \"Single-ply\": ByEvent;\r\n};\r\ntype BySex = {\r\n  M: ByEquipment;\r\n  F: ByEquipment;\r\n};\r\n\r\nconst PARAMETERS: BySex = {\r\n  M: {\r\n    Sleeves: {\r\n      SBD: [310.67, 857.785, 53.216, 147.0835],\r\n      S: [123.1, 363.085, 25.1667, 75.4311],\r\n      B: [86.4745, 259.155, 17.57845, 53.122],\r\n      D: [103.5355, 244.765, 15.3714, 31.5022],\r\n    },\r\n    \"Single-ply\": {\r\n      SBD: [387.265, 1121.28, 80.6324, 222.4896],\r\n      S: [150.485, 446.445, 36.5155, 103.7061],\r\n      B: [133.94, 441.465, 35.3938, 113.0057],\r\n      D: [110.135, 263.66, 14.996, 23.011],\r\n    },\r\n  },\r\n  F: {\r\n    Sleeves: {\r\n      SBD: [125.1435, 228.03, 34.5246, 86.8301],\r\n      S: [50.479, 105.632, 19.1846, 56.2215],\r\n      B: [25.0485, 43.848, 6.7172, 13.952],\r\n      D: [47.136, 67.349, 9.1555, 13.67],\r\n    },\r\n    \"Single-ply\": {\r\n      SBD: [176.58, 373.315, 48.4534, 110.0103],\r\n      S: [74.6855, 171.585, 21.9475, 52.2948],\r\n      B: [49.106, 124.209, 23.199, 67.4926],\r\n      D: [51.002, 69.8265, 8.5802, 5.7258],\r\n    },\r\n  },\r\n};\r\n\r\nexport const ipfpoints = (\r\n  totalKg: number,\r\n  bodyweightKg: number,\r\n  sex: Sex,\r\n  equipment: Equipment,\r\n  event: Event\r\n): number => {\r\n  if (totalKg === 0) return 0;\r\n  if (bodyweightKg < 40) return 0;\r\n\r\n  // Restrict inputs to only the defined subset.\r\n  let normalizedEquipment = equipment;\r\n  if (equipment === \"Bare\" || equipment === \"Wraps\") {\r\n    normalizedEquipment = \"Sleeves\";\r\n  } else if (equipment === \"Multi-ply\" || equipment === \"Unlimited\") {\r\n    normalizedEquipment = \"Single-ply\";\r\n  }\r\n  if (normalizedEquipment !== \"Sleeves\" && normalizedEquipment !== \"Single-ply\") {\r\n    return 0;\r\n  }\r\n\r\n  // Consider Mx athletes as M, since that's the harsher formula.\r\n  let normalizedSex = sex;\r\n  if (sex === \"Mx\") normalizedSex = \"M\";\r\n\r\n  if (event !== \"SBD\" && event !== \"S\" && event !== \"B\" && event !== \"D\") return 0;\r\n  if (normalizedSex !== \"M\" && normalizedSex !== \"F\") return 0;\r\n\r\n  const params = PARAMETERS[normalizedSex][normalizedEquipment][event];\r\n  const bw_log = Math.log(bodyweightKg);\r\n\r\n  const mean = params[0] * bw_log - params[1];\r\n  const dev = params[2] * bw_log - params[3];\r\n\r\n  const points = 500 + (100 * (totalKg - mean)) / dev;\r\n  if (isNaN(points) || points < 0) {\r\n    return 0;\r\n  }\r\n  return points;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of Reshel points.\r\n//\r\n// Reshel is published as a table, with rounded x-values and rounded y-values.\r\n// No formula is given. We attempted to fit a function to the curve.\r\n//\r\n// The formula here is accurate to about 0.01, and is most inaccurate between\r\n// 70-80kg for men. Elsewhere it fits very closely.\r\n\r\nimport { Sex } from \"../../types/dataTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nexport function reshelMen(bodyweightKg: number): number {\r\n  // Coefficients determined by GNUPlot. They need improvement.\r\n  const a: number = 23740.8329088123;\r\n  const b: number = -9.75618720662844;\r\n  const c: number = 0.787990994925928;\r\n  const d: number = -2.68445158813578;\r\n\r\n  const normalized = Math.min(Math.max(bodyweightKg, 50.0), 174.75);\r\n  return a * Math.pow(normalized + b, d) + c;\r\n}\r\n\r\nexport function reshelWomen(bodyweightKg: number): number {\r\n  // Coefficients determined by GNUPlot. They need improvement.\r\n  const a: number = 239.894659799145;\r\n  const b: number = -20.5105859285582;\r\n  const c: number = 1.16052601684125;\r\n  const d: number = -1.61417872668708;\r\n\r\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 118.75);\r\n  return a * Math.pow(normalized + b, d) + c;\r\n}\r\n\r\nexport const reshel = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\r\n  switch (sex) {\r\n    case \"M\":\r\n    case \"Mx\":\r\n      return reshelMen(bodyweightKg) * totalKg;\r\n    case \"F\":\r\n      return reshelWomen(bodyweightKg) * totalKg;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of Wilks 2020 points.\r\n\r\nimport { Sex } from \"../../types/dataTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nfunction wilks2020Poly(a: number, b: number, c: number, d: number, e: number, f: number, x: number): number {\r\n  const x2 = x * x;\r\n  const x3 = x2 * x;\r\n  const x4 = x3 * x;\r\n  const x5 = x4 * x;\r\n  return 600.0 / (a + b * x + c * x2 + d * x3 + e * x4 + f * x5);\r\n}\r\n\r\nexport function wilks2020Men(bodyweightKg: number): number {\r\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 200.95);\r\n  return wilks2020Poly(\r\n    47.4617885411949,\r\n    8.47206137941125,\r\n    0.073694103462609,\r\n    -0.00139583381094385,\r\n    0.00000707665973070743,\r\n    -0.0000000120804336482315,\r\n    normalized\r\n  );\r\n}\r\n\r\nexport function wilks2020Women(bodyweightKg: number): number {\r\n  const normalized = Math.min(Math.max(bodyweightKg, 40.0), 150.95);\r\n  return wilks2020Poly(\r\n    -125.425539779509,\r\n    13.7121941940668,\r\n    -0.0330725063103405,\r\n    -0.0010504000506583,\r\n    0.00000938773881462799,\r\n    -0.000000023334613884954,\r\n    normalized\r\n  );\r\n}\r\n\r\nexport const wilks2020 = (sex: Sex, bodyweightKg: number, totalKg: number): number => {\r\n  switch (sex) {\r\n    case \"M\":\r\n    case \"Mx\":\r\n      return wilks2020Men(bodyweightKg) * totalKg;\r\n    case \"F\":\r\n      return wilks2020Women(bodyweightKg) * totalKg;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Wraps all the points functions into a common interface.\r\n\r\nimport { ah } from \"./ah\";\r\nimport { bodyweight_multiple } from \"./bodyweight-multiple\";\r\nimport { dots } from \"./dots\";\r\nimport { fosterMcCulloch } from \"./foster-mcculloch\";\r\nimport { glossbrenner } from \"./glossbrenner\";\r\nimport { goodlift } from \"./goodlift\";\r\nimport { ipfpoints } from \"./ipf\";\r\nimport { nasapoints } from \"./nasa\";\r\nimport { reshel } from \"./reshel\";\r\nimport { schwartzmalone } from \"./schwartzmalone\";\r\nimport { wilks } from \"./wilks\";\r\nimport { wilks2020 } from \"./wilks2020\";\r\n\r\nimport { getAge } from \"../entry\";\r\nimport { kg2lbs } from \"../units\";\r\n\r\nimport { AgeCoefficients, Entry, Event, Equipment, Formula, Sex } from \"../../types/dataTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nexport const getPoints = (formula: Formula, entry: Entry, event: Event, totalKg: number, inKg: boolean): number => {\r\n  // Some of the data are singular properties of the entry.\r\n  const sex: Sex = entry.sex;\r\n  const equipment: Equipment = entry.equipment;\r\n  const bodyweightKg: number = entry.bodyweightKg;\r\n\r\n  switch (formula) {\r\n    case \"AH\":\r\n      return ah(sex, bodyweightKg, totalKg);\r\n    case \"Bodyweight Multiple\":\r\n      return bodyweight_multiple(bodyweightKg, totalKg);\r\n    case \"Dots\":\r\n      return dots(sex, bodyweightKg, totalKg);\r\n    case \"Glossbrenner\":\r\n      return glossbrenner(sex, bodyweightKg, totalKg);\r\n    case \"IPF GL Points\":\r\n      return goodlift(totalKg, bodyweightKg, sex, equipment, event);\r\n    case \"IPF Points\":\r\n      return ipfpoints(totalKg, bodyweightKg, sex, equipment, event);\r\n    case \"NASA Points\":\r\n      return nasapoints(bodyweightKg, totalKg);\r\n    case \"Reshel\":\r\n      return reshel(sex, bodyweightKg, totalKg);\r\n    case \"Schwartz/Malone\":\r\n      return schwartzmalone(sex, bodyweightKg, totalKg);\r\n    case \"Total\":\r\n      return inKg ? totalKg : kg2lbs(totalKg);\r\n    case \"Wilks\":\r\n      return wilks(sex, bodyweightKg, totalKg);\r\n    case \"Wilks2020\":\r\n      return wilks2020(sex, bodyweightKg, totalKg);\r\n    default:\r\n      checkExhausted(formula);\r\n      return 0;\r\n  }\r\n};\r\n\r\nexport const getAgeAdjustedPoints = (\r\n  ageCoefficients: AgeCoefficients,\r\n  meetDate: string,\r\n  formula: Formula,\r\n  entry: Entry,\r\n  event: Event,\r\n  totalKg: number,\r\n  inKg: boolean\r\n): number => {\r\n  const points = getPoints(formula, entry, event, totalKg, inKg);\r\n\r\n  switch (ageCoefficients) {\r\n    case \"None\":\r\n      return points;\r\n    case \"FosterMcCulloch\":\r\n      return fosterMcCulloch(getAge(entry, meetDate)) * points;\r\n    default:\r\n      checkExhausted(ageCoefficients);\r\n      return 0;\r\n  }\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of points as a multiple of bodyweight.\r\n//\r\n// Although this logic is very simple, there is some finesse to avoid\r\n// division by zero that is easier to write once and import than repeat.\r\n\r\nexport const bodyweight_multiple = (bodyweightKg: number, totalKg: number): number => {\r\n  if (bodyweightKg <= 0 || totalKg <= 0) {\r\n    return 0;\r\n  }\r\n  return totalKg / bodyweightKg;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the calculation of NASA Points.\r\n// They are defined in a coefficient table: http://nasa-sports.com/coefficient-system/\r\n// It turns out that they are a simple line.\r\n\r\nexport const nasapoints = (bodyweightKg: number, totalKg: number): number => {\r\n  // The function was determined using fitting in GNUPlot:\r\n  //\r\n  // Final set of parameters            Asymptotic Standard Error\r\n  // =======================            ==========================\r\n  // m               = 0.00620912       +/- 1.265e-06    (0.02037%)\r\n  // b               = 0.565697         +/- 0.0001322    (0.02337%)\r\n  const m = 0.00620912;\r\n  const b = 0.565697;\r\n\r\n  if (bodyweightKg < 30) return 0; // Arbitrary lower bound.\r\n  return (totalKg / bodyweightKg) * (m * bodyweightKg + b);\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { liftToAttemptFieldName, liftToStatusFieldName, MAX_ATTEMPTS } from \"./entry\";\r\n\r\nimport { LiftingOrder, Entry, FieldKg, FieldStatus } from \"../types/dataTypes\";\r\nimport { LiftingState } from \"../types/stateTypes\";\r\n\r\n// Helper function: for a given entry, see what attempt number would be next.\r\n//\r\n// Returns a number >= 1 if the entry is still lifting, representing the next attempt.\r\n// Returns zero if the entry does not have any pending attempts.\r\nconst getNextAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\r\n  const weightsKg = entry[fieldKg];\r\n  const statuses = entry[fieldStatus];\r\n\r\n  // Lifters only set the next attempt, so loop backwards,\r\n  // looking for the first attempt that meets the criteria.\r\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\r\n    if (weightsKg[i] !== 0 && statuses[i] === 0) {\r\n      return i + 1;\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\n// Helper function: for a given entry, see the maximum attempt number made.\r\n//\r\n// Returns a number >= 1 representing the highest-numbered attempt attempted.\r\n// Returns zero if the entry has not attempted any attempts.\r\nconst getMaxAttemptNumberForEntry = (entry: Entry, fieldKg: FieldKg, fieldStatus: FieldStatus): number => {\r\n  const weightsKg = entry[fieldKg];\r\n  const statuses = entry[fieldStatus];\r\n\r\n  for (let i = MAX_ATTEMPTS - 1; i >= 0; i--) {\r\n    if (weightsKg[i] !== 0 && statuses[i] !== 0) {\r\n      return i + 1;\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\n// Determine the current active attempt for the current lift.\r\n//\r\n// An attempt is active if either:\r\n// 1. It has been overridden by the Attempt selector.\r\n// 2. There exists an attempt of that number with no success/failure value,\r\n//    and there is no lower attempt number with that property.\r\n//\r\n// Returns a number in the (inclusive) range of [1, MAX_ATTEMPTS].\r\n// If there is not enough data to make a decision, returns 1.\r\nconst getActiveAttemptNumber = (entriesInFlight: Array<Entry>, lifting: LiftingState): number => {\r\n  const lift = lifting.lift;\r\n  const fieldKg = liftToAttemptFieldName(lift);\r\n  const fieldStatus = liftToStatusFieldName(lift);\r\n\r\n  // Allow manual override.\r\n  if (lifting.overrideAttempt !== null) {\r\n    return Number(lifting.overrideAttempt);\r\n  }\r\n\r\n  // Iterate in reverse, looking for the earliest attempt that hasn't been lifted.\r\n  let earliestAttemptOneIndexed = MAX_ATTEMPTS + 1;\r\n  for (let i = 0; i < entriesInFlight.length; i++) {\r\n    const entry = entriesInFlight[i];\r\n    const next = getNextAttemptNumberForEntry(entry, fieldKg, fieldStatus);\r\n    // Zero return value means \"no pending attempts for this entry.\"\r\n    if (next > 0 && next < earliestAttemptOneIndexed) {\r\n      earliestAttemptOneIndexed = next;\r\n    }\r\n  }\r\n\r\n  // The lowest pending attempt number is the current one.\r\n  if (earliestAttemptOneIndexed < MAX_ATTEMPTS + 1) {\r\n    return earliestAttemptOneIndexed;\r\n  }\r\n\r\n  // In the case of no pending lifts, try to helpfully infer the next attempt.\r\n  let latestAttemptOneIndexed = 0;\r\n  for (let i = 0; i < entriesInFlight.length; i++) {\r\n    const entry = entriesInFlight[i];\r\n    const max = getMaxAttemptNumberForEntry(entry, fieldKg, fieldStatus);\r\n    // Zero return value means \"no attempted attempts for this entry.\"\r\n    if (max > latestAttemptOneIndexed) {\r\n      latestAttemptOneIndexed = max;\r\n    }\r\n  }\r\n\r\n  // If >0, we know there are no pending attempts, and we know that everyone\r\n  // has taken all of the Nth attempt. So we should display the (N+1)th attempt.\r\n  if (latestAttemptOneIndexed > 0) {\r\n    // Don't auto-advance from 3rd to 4th attempts.\r\n    // However, if we're already on 4th attempts, stay there.\r\n    if (latestAttemptOneIndexed + 1 >= 4) {\r\n      return latestAttemptOneIndexed;\r\n    }\r\n\r\n    // Roll-over to the next attempt (with no pending entries).\r\n    return latestAttemptOneIndexed + 1;\r\n  }\r\n\r\n  // Otherwise, just default to the first attempt.\r\n  return 1;\r\n};\r\n\r\n// Helper function for recursive comparison.\r\nexport const compareEntriesByAttempt = (a: Entry, b: Entry, fieldKg: FieldKg, attemptOneIndexed: number): number => {\r\n  const aKg = a[fieldKg][attemptOneIndexed - 1];\r\n  const bKg = b[fieldKg][attemptOneIndexed - 1];\r\n\r\n  // If non-equal, sort by weight, ascending.\r\n  if (aKg !== bKg) return aKg - bKg;\r\n\r\n  // If the federation uses lot numbers, break ties using lot.\r\n  if (a.lot !== 0 && b.lot !== 0) return a.lot - b.lot;\r\n\r\n  // If this is not the first attempt, preserve the order from the last attempt.\r\n  if (attemptOneIndexed > 1) {\r\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed - 1);\r\n  }\r\n\r\n  // Try to break ties using bodyweight, with the lighter lifter going first.\r\n  if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\r\n\r\n  // If we've run out of properties by which to compare them, resort to Name.\r\n  if (a.name < b.name) return -1;\r\n  if (a.name > b.name) return 1;\r\n  return 0;\r\n};\r\n\r\n// Helper function: performs an in-place sort on an array of entries.\r\n// Assumes that zero entries are not mixed in with non-zero entries.\r\nexport const orderEntriesByAttempt = (\r\n  entries: Array<Entry>,\r\n  fieldKg: FieldKg,\r\n  attemptOneIndexed: number\r\n): Array<Entry> => {\r\n  return entries.sort((a, b) => {\r\n    return compareEntriesByAttempt(a, b, fieldKg, attemptOneIndexed);\r\n  });\r\n};\r\n\r\n// Returns a copy of the entries in lifting order for the current attempt.\r\nconst orderEntriesForAttempt = (\r\n  entriesInFlight: Array<Entry>,\r\n  lifting: LiftingState,\r\n  attemptOneIndexed: number\r\n): Array<Entry> => {\r\n  const lift = lifting.lift;\r\n  const fieldKg = liftToAttemptFieldName(lift);\r\n\r\n  const attemptZeroIndexed = attemptOneIndexed - 1;\r\n  const existsNextAttempt = attemptOneIndexed + 1 <= MAX_ATTEMPTS;\r\n  const existsPrevAttempt = attemptOneIndexed > 1;\r\n\r\n  // Divide the entries into disjoint groups:\r\n  const byNextAttempt: Array<Entry> = []; // Entries sorted by their next attempt.\r\n  const byThisAttempt: Array<Entry> = []; // Entries sorted by this attempt.\r\n  const byPrevAttempt: Array<Entry> = []; // Entries sorted by previous attempt.\r\n  const notLifting: Array<Entry> = []; // Entries that don't have this or next attempts in.\r\n\r\n  for (let i = 0; i < entriesInFlight.length; i++) {\r\n    const entry = entriesInFlight[i];\r\n\r\n    if (existsNextAttempt && entry[fieldKg][attemptZeroIndexed + 1] !== 0) {\r\n      byNextAttempt.push(entry);\r\n    } else if (entry[fieldKg][attemptZeroIndexed] !== 0) {\r\n      byThisAttempt.push(entry);\r\n    } else if (existsPrevAttempt && entry[fieldKg][attemptZeroIndexed - 1] !== 0) {\r\n      byPrevAttempt.push(entry);\r\n    } else {\r\n      notLifting.push(entry);\r\n    }\r\n  }\r\n\r\n  // Perform sorting on the relative groups.\r\n  if (existsNextAttempt) {\r\n    orderEntriesByAttempt(byNextAttempt, fieldKg, attemptOneIndexed + 1);\r\n  }\r\n  orderEntriesByAttempt(byThisAttempt, fieldKg, attemptOneIndexed);\r\n  if (existsPrevAttempt) {\r\n    orderEntriesByAttempt(byPrevAttempt, fieldKg, attemptOneIndexed - 1);\r\n  }\r\n  orderEntriesByAttempt(notLifting, fieldKg, attemptOneIndexed);\r\n\r\n  // Arrange these three groups consecutively.\r\n  return Array.prototype.concat(byNextAttempt, byThisAttempt, byPrevAttempt, notLifting);\r\n};\r\n\r\n// Returns either the current entry ID or null if no active entry.\r\n//\r\n// In the ordered entries, the earliest lifter that hasn't gone yet is going.\r\n// This can be manually overridden by UI controls.\r\nconst getCurrentEntryId = (\r\n  lifting: LiftingState,\r\n  orderedEntries: Array<Entry>,\r\n  attemptOneIndexed: number\r\n): number | null => {\r\n  const lift = lifting.lift;\r\n  const fieldKg = liftToAttemptFieldName(lift);\r\n  const fieldStatus = liftToStatusFieldName(lift);\r\n\r\n  if (lifting.overrideEntryId !== null) {\r\n    return Number(lifting.overrideEntryId);\r\n  }\r\n\r\n  for (let i = 0; i < orderedEntries.length; i++) {\r\n    const entry = orderedEntries[i];\r\n    const idx = attemptOneIndexed - 1;\r\n    if (entry[fieldKg][idx] !== 0 && entry[fieldStatus][idx] === 0) {\r\n      return entry.id;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\ntype NextEntryInfo = {\r\n  entryId: number;\r\n  attemptOneIndexed: number;\r\n};\r\n\r\n// Returns either an Object of {entryId, attemptOneIndexed}, or null.\r\nconst getNextEntryInfo = (\r\n  lifting: LiftingState,\r\n  currentEntryId: number | null,\r\n  orderedEntries: Array<Entry>,\r\n  attemptOneIndexed: number\r\n): NextEntryInfo | null => {\r\n  const lift = lifting.lift;\r\n  const fieldKg = liftToAttemptFieldName(lift);\r\n  const fieldStatus = liftToStatusFieldName(lift);\r\n\r\n  if (currentEntryId === null) {\r\n    return null;\r\n  }\r\n\r\n  // Find the index of the currentEntryId in the orderedEntries.\r\n  const currentEntryIndex = orderedEntries.findIndex((e) => e.id === currentEntryId);\r\n  if (currentEntryIndex === -1) {\r\n    return null;\r\n  }\r\n\r\n  // Walk forward, looking for additional valid attempts.\r\n  for (let i = currentEntryIndex + 1; i < orderedEntries.length; i++) {\r\n    const hasAttempt = orderedEntries[i][fieldKg][attemptOneIndexed - 1] !== 0;\r\n    const notTaken = orderedEntries[i][fieldStatus][attemptOneIndexed - 1] === 0;\r\n\r\n    if (hasAttempt && notTaken) {\r\n      return {\r\n        entryId: orderedEntries[i].id,\r\n        attemptOneIndexed: attemptOneIndexed,\r\n      };\r\n    }\r\n  }\r\n\r\n  // If none were found walking forward, check the next attempt by wrapping around.\r\n  if (attemptOneIndexed + 1 > MAX_ATTEMPTS) {\r\n    return null;\r\n  }\r\n  const nextAttemptOneIndexed = attemptOneIndexed + 1;\r\n\r\n  for (let i = 0; i < currentEntryIndex; i++) {\r\n    const hasAttempt = orderedEntries[i][fieldKg][nextAttemptOneIndexed - 1] !== 0;\r\n    const notTaken = orderedEntries[i][fieldStatus][nextAttemptOneIndexed - 1] === 0;\r\n\r\n    if (hasAttempt && notTaken) {\r\n      return {\r\n        entryId: orderedEntries[i].id,\r\n        attemptOneIndexed: nextAttemptOneIndexed,\r\n      };\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// Main application logic. Resolves the LiftingState to a LiftingOrder.\r\nexport const getLiftingOrder = (entriesInFlight: Array<Entry>, lifting: LiftingState): LiftingOrder => {\r\n  const attemptOneIndexed = getActiveAttemptNumber(entriesInFlight, lifting);\r\n  const orderedEntries = orderEntriesForAttempt(entriesInFlight, lifting, attemptOneIndexed);\r\n  const currentEntryId = getCurrentEntryId(lifting, orderedEntries, attemptOneIndexed);\r\n  const nextEntryInfo = getNextEntryInfo(lifting, currentEntryId, orderedEntries, attemptOneIndexed);\r\n\r\n  return {\r\n    orderedEntries: orderedEntries,\r\n    attemptOneIndexed: attemptOneIndexed,\r\n    currentEntryId: currentEntryId,\r\n    nextAttemptOneIndexed: nextEntryInfo ? nextEntryInfo.attemptOneIndexed : null,\r\n    nextEntryId: nextEntryInfo ? nextEntryInfo.entryId : null,\r\n  };\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the logic for calculating the division Place of a lifter, shared between\r\n// the Lifting page, the Rankings page, and data export code.\r\n//\r\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\r\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\r\n// which have slightly different needs.\r\n\r\nimport { getProjectedEventTotalKg, getFinalEventTotalKg, liftToAttemptFieldName } from \"./entry\";\r\nimport { compareEntriesByAttempt } from \"./liftingOrder\";\r\nimport { getWeightClassStr } from \"../reducers/meetReducer\";\r\n\r\nimport { Sex, Event, Equipment, Entry, Lift } from \"../types/dataTypes\";\r\nimport { checkExhausted } from \"../types/utils\";\r\n\r\nexport type Place = number | \"DQ\";\r\n\r\n// Determines how the total is calculated.\r\ntype ResultsType = \"Projected\" | \"Final\";\r\n\r\n// Specifies a competition category under which entries can be ranked together.\r\nexport type Category = {\r\n  sex: Sex;\r\n  event: Event;\r\n  equipment: Equipment;\r\n  division: string;\r\n  weightClassStr: string;\r\n};\r\n\r\n// Wraps up all the entries in a category with the category's descriptors.\r\nexport type CategoryResults = {\r\n  category: Category;\r\n  orderedEntries: Array<Entry>;\r\n};\r\n\r\n// Generates a unique String out of a Category, for purposes of using as a Map key.\r\nconst categoryToKey = (category: Category): string => {\r\n  return JSON.stringify(category);\r\n};\r\nconst keyToCategory = (key: string): Category => {\r\n  return JSON.parse(key);\r\n};\r\n\r\n// Helper function for sortByPlaceInCategory().\r\n//\r\n// Determines the last successful Lift (for example, \"B\") for the Entry in\r\n// the given Event category.\r\n//\r\n// Lifters have already been checked to have a non-zero total.\r\nconst getLastSuccessfulLift = (event: Event, entry: Entry): Lift => {\r\n  // Iterate backwards over the Event types.\r\n  for (let i = event.length - 1; i >= 0; --i) {\r\n    const lift = event[i];\r\n    switch (lift) {\r\n      case \"S\":\r\n        if (entry.squatStatus.includes(1)) {\r\n          return \"S\";\r\n        }\r\n        break;\r\n      case \"B\":\r\n        if (entry.benchStatus.includes(1)) {\r\n          return \"B\";\r\n        }\r\n        break;\r\n      case \"D\":\r\n        if (entry.deadliftStatus.includes(1)) {\r\n          return \"D\";\r\n        }\r\n        break;\r\n      default:\r\n        return \"S\";\r\n    }\r\n  }\r\n  return \"S\";\r\n};\r\n\r\n// Helper function for sortByPlaceInCategory().\r\n//\r\n// Determines the last successful attempt (only counting the first three) for\r\n// the Entry for the given Lift.\r\n//\r\n// The caller already knows that a successful attempt was made, since it\r\n// passed getLastSuccessfulLift().\r\nconst getLastSuccessfulAttempt = (lift: Lift, entry: Entry): number => {\r\n  let statuses = null;\r\n  switch (lift) {\r\n    case \"S\":\r\n      statuses = entry.squatStatus;\r\n      break;\r\n    case \"B\":\r\n      statuses = entry.benchStatus;\r\n      break;\r\n    case \"D\":\r\n      statuses = entry.deadliftStatus;\r\n      break;\r\n    default:\r\n      checkExhausted(lift);\r\n      return 0;\r\n  }\r\n\r\n  // Consider only the first three attempts, in reverse.\r\n  for (let i = 2; i >= 0; --i) {\r\n    if (statuses[i] === 1) return i;\r\n  }\r\n  return 0;\r\n};\r\n\r\n// Returns a copy of the entries array sorted by Place.\r\n// All entries are assumed to be part of the same category.\r\nconst sortByPlaceInCategory = (entries: ReadonlyArray<Entry>, category: Category, type: ResultsType): Array<Entry> => {\r\n  const event = category.event;\r\n\r\n  // Clone the entries array to avoid modifying the original.\r\n  const clonedEntries = entries.slice();\r\n\r\n  // Sort in the given category, first place having the lowest index.\r\n  clonedEntries.sort((a, b) => {\r\n    // If either of the lifters are guests, sort the guest last\r\n    if (a.guest !== b.guest) {\r\n      return Number(a.guest) - Number(b.guest);\r\n    }\r\n    // Otherwise, both lifters are non-guests or guests, so sort as per usual\r\n    let aTotal = 0;\r\n\r\n    // First sort by Total, higher sorting lower.\r\n    if (type === \"Projected\") {\r\n      aTotal = getProjectedEventTotalKg(a, event);\r\n      const bTotal = getProjectedEventTotalKg(b, event);\r\n      if (aTotal !== bTotal) return bTotal - aTotal;\r\n    } else if (type === \"Final\") {\r\n      aTotal = getFinalEventTotalKg(a, event);\r\n      const bTotal = getFinalEventTotalKg(b, event);\r\n      if (aTotal !== bTotal) return bTotal - aTotal;\r\n    }\r\n\r\n    // If totals are equal, sort by Bodyweight, lower sorting lower.\r\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\r\n\r\n    // If totals are zero, neither lifter took a successful attempt,\r\n    // so just sort arbitrarily by name.\r\n    if (aTotal === 0) {\r\n      if (a.name < b.name) return -1;\r\n      if (a.name > b.name) return 1;\r\n      return 0;\r\n    }\r\n\r\n    // If totals are equal and bodyweights are equal, the winner is the\r\n    // lifter who reached the total first. Because our implementation is\r\n    // stateless and doesn't remember lifting order, this gets complicated.\r\n    //\r\n    // For purposes of simplicity, this is broken into cases.\r\n    //\r\n    // At this point, the logic requires that each lifter have taken at least\r\n    // one successful attempt -- this is validated by checking the total\r\n    // against zero above.\r\n    //\r\n    // Case 1: If the lifters' last successful lifts were for different Lifts,\r\n    //         then the lifter with the earlier lift in SBD order wins.\r\n    const aLastSuccessfulLift = getLastSuccessfulLift(event, a);\r\n    const bLastSuccessfulLift = getLastSuccessfulLift(event, b);\r\n    const aLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(aLastSuccessfulLift);\r\n    const bLastSuccessfulLiftIndex = [\"S\", \"B\", \"D\"].indexOf(bLastSuccessfulLift);\r\n    if (aLastSuccessfulLiftIndex !== bLastSuccessfulLiftIndex) {\r\n      return aLastSuccessfulLiftIndex - bLastSuccessfulLiftIndex;\r\n    }\r\n\r\n    // Case 2: If the lifters reached the total on the same lift but on different\r\n    //         attempts, the lifter with the earlier attempt wins.\r\n    const lift: Lift = aLastSuccessfulLift;\r\n    const aLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, a);\r\n    const bLastSuccessfulAttempt: number = getLastSuccessfulAttempt(lift, b);\r\n    if (aLastSuccessfulAttempt !== bLastSuccessfulAttempt) {\r\n      return aLastSuccessfulAttempt - bLastSuccessfulAttempt;\r\n    }\r\n\r\n    // Case 3: If the lifters reached the total on the same lift and on the same\r\n    //         attempt, defer to the lifting order to determine who lifted first.\r\n    const attempt = aLastSuccessfulAttempt;\r\n    return compareEntriesByAttempt(a, b, liftToAttemptFieldName(lift), attempt);\r\n  });\r\n\r\n  return clonedEntries;\r\n};\r\n\r\n// Determines the sort order by Event.\r\nconst getEventSortOrder = (ev: Event): number => {\r\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\r\n};\r\n\r\n// Determines the sort order by Equipment.\r\nconst getEquipmentSortOrder = (eq: Equipment): number => {\r\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\", \"Unlimited\"].indexOf(eq);\r\n};\r\n\r\n// Determines the sort order by Sex.\r\nconst getSexSortOrder = (sex: Sex): number => {\r\n  switch (sex) {\r\n    case \"F\":\r\n      return 0;\r\n    case \"M\":\r\n      return 1;\r\n    case \"Mx\":\r\n      return 2;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 3;\r\n  }\r\n};\r\n\r\n// Determines the sort (and therefore presentation) order for the Category Results.\r\n// The input array is sorted in-place; nothing is returned.\r\nexport const sortCategoryResults = (results: Array<CategoryResults>): void => {\r\n  results.sort((a, b) => {\r\n    const catA = a.category;\r\n    const catB = b.category;\r\n\r\n    // First, sort by Sex.\r\n    const aSex = getSexSortOrder(catA.sex);\r\n    const bSex = getSexSortOrder(catB.sex);\r\n    if (aSex !== bSex) return aSex - bSex;\r\n\r\n    // Next, sort by Event.\r\n    const aEvent = getEventSortOrder(catA.event);\r\n    const bEvent = getEventSortOrder(catB.event);\r\n    if (aEvent !== bEvent) return aEvent - bEvent;\r\n\r\n    // Next, sort by Equipment.\r\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\r\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\r\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\r\n\r\n    // Next, sort by Division as string.\r\n    if (catA.division < catB.division) return -1;\r\n    if (catA.division > catB.division) return 1;\r\n\r\n    // Finally, sort by WeightClass.\r\n    // Any SHW class should be placed at the end.\r\n    const aIsSHW: boolean = catA.weightClassStr.includes(\"+\");\r\n    const bIsSHW: boolean = catB.weightClassStr.includes(\"+\");\r\n    if (aIsSHW && !bIsSHW) return 1;\r\n    if (!aIsSHW && bIsSHW) return -1;\r\n    // parseInt() ignores the \"+\" at the end of SHW class strings.\r\n    const aWeightClass = catA.weightClassStr === \"\" ? 0 : parseInt(catA.weightClassStr);\r\n    const bWeightClass = catB.weightClassStr === \"\" ? 0 : parseInt(catB.weightClassStr);\r\n    return aWeightClass - bWeightClass;\r\n  });\r\n};\r\n\r\nconst mapSexToClasses = (\r\n  sex: Sex,\r\n  men: ReadonlyArray<number>,\r\n  women: ReadonlyArray<number>,\r\n  mx: ReadonlyArray<number>\r\n): ReadonlyArray<number> => {\r\n  switch (sex) {\r\n    case \"M\":\r\n      return men;\r\n    case \"F\":\r\n      return women;\r\n    case \"Mx\":\r\n      return mx;\r\n    default:\r\n      checkExhausted(sex);\r\n      return men;\r\n  }\r\n};\r\n\r\n// Generates objects representing every present category of competition,\r\n// with each entry given a Place designation.\r\n//\r\n// The returned objects are sorted in intended order of presentation.\r\nconst getAllResults = (\r\n  entries: ReadonlyArray<Entry>,\r\n  weightClassesKgMen: ReadonlyArray<number>,\r\n  weightClassesKgWomen: ReadonlyArray<number>,\r\n  weightClassesKgMx: ReadonlyArray<number>,\r\n  combineSleevesAndWraps: boolean,\r\n  type: ResultsType\r\n): Array<CategoryResults> => {\r\n  // Generate a map from category to the entries within that category.\r\n  // The map is populated by iterating over each entry and having the entry\r\n  // append itself to per-category lists.\r\n  const categoryMap = new Map<string, Entry[]>();\r\n  for (let i = 0; i < entries.length; i++) {\r\n    const e = entries[i];\r\n\r\n    // Remember consistent properties.\r\n    const sex = e.sex;\r\n    const classesForSex = mapSexToClasses(sex, weightClassesKgMen, weightClassesKgWomen, weightClassesKgMx);\r\n    const weightClassStr = getWeightClassStr(classesForSex, e.bodyweightKg);\r\n\r\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\r\n    let equipment = e.equipment;\r\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\r\n      equipment = \"Wraps\";\r\n    }\r\n\r\n    // Iterate over every combination of division and event, adding to the map.\r\n    //\r\n    // This code also intentionally executes if `e.divisions.length === 0`.\r\n    // This is used to handle an exceptional case where a meet director expects\r\n    // all lifters to compete Open, but has failed to specify any division\r\n    // on the registration page, believing that to be unneeded.\r\n    //\r\n    // If that special case were not handled, the lifter would disappear from results.\r\n    const numDivisions = e.divisions.length;\r\n    let dividx: number = 0;\r\n    do {\r\n      const division = numDivisions > 0 ? e.divisions[dividx] : \"\";\r\n\r\n      for (let evidx = 0; evidx < e.events.length; evidx++) {\r\n        const event = e.events[evidx];\r\n        const category = { sex, event, equipment, division, weightClassStr };\r\n        const key = categoryToKey(category);\r\n\r\n        const catEntries = categoryMap.get(key);\r\n        catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\r\n      }\r\n    } while (++dividx < numDivisions);\r\n  }\r\n\r\n  // Iterate over each category and assign a Place to the entries therein.\r\n  const results = [];\r\n  for (const [key, catEntries] of categoryMap) {\r\n    const category = keyToCategory(key);\r\n    const orderedEntries = sortByPlaceInCategory(catEntries, category, type);\r\n    results.push({ category, orderedEntries });\r\n  }\r\n\r\n  sortCategoryResults(results);\r\n  return results;\r\n};\r\n\r\nexport const getProjectedResults = (\r\n  entries: ReadonlyArray<Entry>,\r\n  weightClassesKgMen: ReadonlyArray<number>,\r\n  weightClassesKgWomen: ReadonlyArray<number>,\r\n  weightClassesKgMx: ReadonlyArray<number>,\r\n  combineSleevesAndWraps: boolean\r\n): Array<CategoryResults> => {\r\n  return getAllResults(\r\n    entries,\r\n    weightClassesKgMen,\r\n    weightClassesKgWomen,\r\n    weightClassesKgMx,\r\n    combineSleevesAndWraps,\r\n    \"Projected\"\r\n  );\r\n};\r\n\r\nexport const getFinalResults = (\r\n  entries: ReadonlyArray<Entry>,\r\n  weightClassesKgMen: ReadonlyArray<number>,\r\n  weightClassesKgWomen: ReadonlyArray<number>,\r\n  weightClassesKgMx: ReadonlyArray<number>,\r\n  combineSleevesAndWraps: boolean\r\n): Array<CategoryResults> => {\r\n  return getAllResults(\r\n    entries,\r\n    weightClassesKgMen,\r\n    weightClassesKgWomen,\r\n    weightClassesKgMx,\r\n    combineSleevesAndWraps,\r\n    \"Final\"\r\n  );\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The main component of the Lifting page, contained by the LiftingView.\r\n\r\nimport React, { CSSProperties } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport AttemptInput from \"./AttemptInput\";\r\nimport LocalizedString from \"../translations/LocalizedString\";\r\n\r\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\r\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\r\nimport { getProjectedTotalKg, getFinalTotalKg, liftToAttemptFieldName, liftToStatusFieldName } from \"../../logic/entry\";\r\n\r\nimport { getProjectedResults, getFinalResults } from \"../../logic/divisionPlace\";\r\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\r\n\r\nimport { CategoryResults } from \"../../logic/divisionPlace\";\r\nimport { Entry, Equipment, Language, Lift, Sex } from \"../../types/dataTypes\";\r\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\r\n\r\nimport styles from \"./LiftingTable.module.scss\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\nimport { getString } from \"../../logic/strings\";\r\n\r\ninterface OwnProps {\r\n  attemptOneIndexed: number;\r\n  orderedEntries: Array<Entry>;\r\n  currentEntryId: number | null;\r\n}\r\n\r\ninterface StateProps {\r\n  meet: MeetState;\r\n  lifting: LiftingState;\r\n  language: Language;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\n// List of possible columns that can be rendered.\r\n// The main render() function decides what columns to render,\r\n// and communicates its selection with each row's renderer.\r\ntype ColumnType =\r\n  | \"Lifter\"\r\n  | \"Bodyweight\"\r\n  | \"WeightClass\"\r\n  | \"Division\"\r\n  | \"Lot\"\r\n  | \"Equipment\"\r\n  | \"Age\"\r\n  | \"S1\"\r\n  | \"S2\"\r\n  | \"S3\"\r\n  | \"S4\" // eslint-disable-line\r\n  | \"B1\"\r\n  | \"B2\"\r\n  | \"B3\"\r\n  | \"B4\" // eslint-disable-line\r\n  | \"D1\"\r\n  | \"D2\"\r\n  | \"D3\"\r\n  | \"D4\" // eslint-disable-line\r\n  | \"BestSquat\"\r\n  | \"BestBench\" // eslint-disable-line\r\n  | \"Spacer1\"\r\n  | \"Spacer2\"\r\n  | \"ProjectedTotal\"\r\n  | \"ProjectedPoints\"\r\n  | \"FinalTotal\"\r\n  | \"FinalPoints\"\r\n  | \"Place\";\r\n\r\n// This is a global for remembering the last AttemptInput that was rendered.\r\n// After the \"No Lift\" or \"Good Lift\" buttons are clicked, the last-rendered\r\n// AttemptInput is given focus by an event handler.\r\n//\r\n// This works because the LiftingTable is always re-rendered when one of\r\n// those buttons is clicked, and because there's only one LiftingTable.\r\nexport let globalFocusAttemptInputId: string | null = null;\r\n\r\n// The logic for globalFocusAttemptInputId is looking for the AttemptInput\r\n// that's all the way on the right, and as far down the table as possible.\r\nlet globalHighestAttemptInputAttempt: number = 0;\r\n\r\nclass LiftingTable extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.renderRows = this.renderRows.bind(this);\r\n    this.renderBest3AttemptField = this.renderBest3AttemptField.bind(this);\r\n    this.renderAttemptField = this.renderAttemptField.bind(this);\r\n    this.renderCell = this.renderCell.bind(this);\r\n  }\r\n\r\n  renderBest3AttemptField = (entry: Entry, lift: Lift, columnType: ColumnType) => {\r\n    const fieldKg = liftToAttemptFieldName(lift);\r\n    const fieldStatus = liftToStatusFieldName(lift);\r\n\r\n    // Look for either the best lift or the lightest no-lift.\r\n    let best3 = 0.0;\r\n    let lightestFailed = 0.0;\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      const kg = entry[fieldKg][i];\r\n\r\n      if (entry[fieldStatus][i] === 1) {\r\n        best3 = Math.max(best3, kg);\r\n      } else if (entry[fieldStatus][i] === -1) {\r\n        lightestFailed = lightestFailed === 0 ? kg : Math.min(lightestFailed, kg);\r\n      }\r\n    }\r\n\r\n    // Render cells using attempt coloring.\r\n    if (best3 !== 0) {\r\n      const asNumber = this.props.meet.inKg ? best3 : kg2lbs(best3);\r\n      return (\r\n        <td key={columnType} className={styles.goodlift}>\r\n          {displayWeight(asNumber, this.props.language)}\r\n        </td>\r\n      );\r\n    }\r\n    if (lightestFailed !== 0) {\r\n      const asNumber = this.props.meet.inKg ? lightestFailed : kg2lbs(lightestFailed);\r\n      return (\r\n        <td key={columnType} className={styles.nolift}>\r\n          {displayWeight(asNumber, this.props.language)}\r\n        </td>\r\n      );\r\n    }\r\n\r\n    // Show an empty cell by default.\r\n    return <td key={columnType} />;\r\n  };\r\n\r\n  renderAttemptField = (entry: Entry, lift: Lift, attemptOneIndexed: number, columnType: ColumnType) => {\r\n    const fieldKg = liftToAttemptFieldName(lift);\r\n    const fieldStatus = liftToStatusFieldName(lift);\r\n\r\n    const kg = entry[fieldKg][attemptOneIndexed - 1];\r\n    const status = entry[fieldStatus][attemptOneIndexed - 1];\r\n    const wStr = displayWeight(this.props.meet.inKg ? kg : kg2lbs(kg), this.props.language);\r\n    const displayStr = kg === 0 ? \"\" : wStr;\r\n\r\n    // Get a unique ID for each AttemptInput.\r\n    // This is used in combination with the globalFocusAttemptInputId to give\r\n    // focus to the last-rendered AttemptInput after a button is clicked.\r\n    const id = \"AttemptInput-\" + entry.id + \"-\" + lift + attemptOneIndexed;\r\n\r\n    // If the lifter was manually selected, always show an AttemptInput.\r\n    // This allows manual correction of weights when a misload occurs,\r\n    // even though the lift has already been marked good lift / no lift.\r\n    if (this.props.lifting.overrideEntryId === entry.id && attemptOneIndexed === this.props.attemptOneIndexed) {\r\n      // Is this a better match for giving focus?\r\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\r\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\r\n        globalFocusAttemptInputId = id;\r\n      }\r\n\r\n      return (\r\n        <td key={columnType} className={styles.attemptInputCell}>\r\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\r\n        </td>\r\n      );\r\n    }\r\n\r\n    // If the attempt was already made, render a colored text field.\r\n    // The weight cannot be changed after the fact.\r\n    if (status !== 0) {\r\n      const className = status === 1 ? styles.goodlift : styles.nolift;\r\n      const maybeNegative = status === 1 ? \"\" : \"-\";\r\n      return (\r\n        <td key={columnType} className={className}>\r\n          {maybeNegative}\r\n          {displayStr}\r\n        </td>\r\n      );\r\n    }\r\n\r\n    // If the attempt isn't for the current lift, just show the number.\r\n    if (lift !== this.props.lifting.lift) {\r\n      return <td key={columnType}>{displayStr}</td>;\r\n    }\r\n\r\n    // Was any previous attempt taken?\r\n    let anyPreviousAttemptTaken = false;\r\n    for (let i = 1; i < attemptOneIndexed; i++) {\r\n      if (entry[fieldStatus][i - 1] !== 0) {\r\n        anyPreviousAttemptTaken = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Show a text input box if either:\r\n    // 1. This column is for the current attempt, and the lifter has a previous attempt.\r\n    // 2. This column is for the next attempt, and the lifter took the current attempt.\r\n    // 3. For whatever reason, someone managed to specify a weight.\r\n    const currentAndHasPrevious = attemptOneIndexed === this.props.attemptOneIndexed && anyPreviousAttemptTaken;\r\n    const nextAndTookLast =\r\n      attemptOneIndexed === this.props.attemptOneIndexed + 1 &&\r\n      entry[fieldStatus][this.props.attemptOneIndexed - 1] !== 0;\r\n\r\n    if (kg !== 0 || currentAndHasPrevious || nextAndTookLast) {\r\n      // Is this a better match for giving focus?\r\n      if (attemptOneIndexed >= globalHighestAttemptInputAttempt) {\r\n        globalHighestAttemptInputAttempt = attemptOneIndexed;\r\n        globalFocusAttemptInputId = id;\r\n      }\r\n\r\n      return (\r\n        <td key={columnType} className={styles.attemptInputCell}>\r\n          <AttemptInput id={id} entry={entry} lift={lift} attemptOneIndexed={attemptOneIndexed} />\r\n        </td>\r\n      );\r\n    }\r\n\r\n    // Default handler.\r\n    return <td key={columnType}>{displayStr}</td>;\r\n  };\r\n\r\n  mapSexToClasses = (sex: Sex, meetState: MeetState): ReadonlyArray<number> => {\r\n    switch (sex) {\r\n      case \"M\":\r\n        return meetState.weightClassesKgMen;\r\n      case \"F\":\r\n        return meetState.weightClassesKgWomen;\r\n      case \"Mx\":\r\n        return meetState.weightClassesKgMx;\r\n      default:\r\n        checkExhausted(sex);\r\n        return meetState.weightClassesKgMen;\r\n    }\r\n  };\r\n\r\n  renderCell = (entry: Entry, columnType: ColumnType, categoryResults: Array<CategoryResults>): JSX.Element => {\r\n    switch (columnType) {\r\n      case \"Lifter\": {\r\n        let cell: string | JSX.Element = entry.name;\r\n\r\n        // Bold the name of the current lifter.\r\n        if (this.props.currentEntryId === entry.id) {\r\n          cell = <b>{entry.name}</b>;\r\n        }\r\n\r\n        return (\r\n          <td key={columnType} className={styles.textCell}>\r\n            {cell}\r\n          </td>\r\n        );\r\n      }\r\n      case \"Bodyweight\": {\r\n        const bw = entry.bodyweightKg;\r\n        const bwStr = displayWeight(this.props.meet.inKg ? bw : kg2lbs(bw), this.props.language);\r\n        return <td key={columnType}>{bw === 0 ? null : bwStr}</td>;\r\n      }\r\n      case \"WeightClass\": {\r\n        const bw = entry.bodyweightKg;\r\n        const classesForSex = this.mapSexToClasses(entry.sex, this.props.meet);\r\n        const weightClass = this.props.meet.inKg\r\n          ? getWeightClassStr(classesForSex, bw, this.props.language)\r\n          : getWeightClassLbsStr(classesForSex, bw);\r\n        return <td key={columnType}>{bw === 0 ? null : weightClass}</td>;\r\n      }\r\n      case \"Division\": {\r\n        // Just show the first division in the list, if any.\r\n        // Changing this requires coordination with the \"Place\" column code.\r\n        const firstDiv = entry.divisions.length > 0 ? entry.divisions[0] : null;\r\n        return (\r\n          <td key={columnType} className={styles.textCell}>\r\n            {firstDiv}\r\n          </td>\r\n        );\r\n      }\r\n      case \"Lot\": {\r\n        return (\r\n          <td key={columnType} className={styles.textCell}>\r\n            {entry.lot === 0 ? \"\" : entry.lot}\r\n          </td>\r\n        );\r\n      }\r\n      case \"Equipment\": {\r\n        // Use shorter names to actually fit in the table.\r\n        let equipment: string | Equipment = entry.equipment;\r\n        if (equipment === \"Single-ply\") equipment = \"Single\";\r\n        if (equipment === \"Multi-ply\") equipment = \"Multi\";\r\n        return <td key={columnType}>{equipment}</td>;\r\n      }\r\n      case \"Age\":\r\n        return <td key={columnType}>{entry.age}</td>;\r\n      case \"S1\":\r\n        return this.renderAttemptField(entry, \"S\", 1, columnType);\r\n      case \"S2\":\r\n        return this.renderAttemptField(entry, \"S\", 2, columnType);\r\n      case \"S3\":\r\n        return this.renderAttemptField(entry, \"S\", 3, columnType);\r\n      case \"S4\":\r\n        return this.renderAttemptField(entry, \"S\", 4, columnType);\r\n      case \"B1\":\r\n        return this.renderAttemptField(entry, \"B\", 1, columnType);\r\n      case \"B2\":\r\n        return this.renderAttemptField(entry, \"B\", 2, columnType);\r\n      case \"B3\":\r\n        return this.renderAttemptField(entry, \"B\", 3, columnType);\r\n      case \"B4\":\r\n        return this.renderAttemptField(entry, \"B\", 4, columnType);\r\n      case \"D1\":\r\n        return this.renderAttemptField(entry, \"D\", 1, columnType);\r\n      case \"D2\":\r\n        return this.renderAttemptField(entry, \"D\", 2, columnType);\r\n      case \"D3\":\r\n        return this.renderAttemptField(entry, \"D\", 3, columnType);\r\n      case \"D4\":\r\n        return this.renderAttemptField(entry, \"D\", 4, columnType);\r\n      case \"BestSquat\":\r\n        return this.renderBest3AttemptField(entry, \"S\", columnType);\r\n      case \"BestBench\":\r\n        return this.renderBest3AttemptField(entry, \"B\", columnType);\r\n      case \"Spacer1\": // fallthrough\r\n      case \"Spacer2\":\r\n        return <td key={columnType} className={styles.spacerCell} />;\r\n      case \"ProjectedTotal\": {\r\n        const totalKg = getProjectedTotalKg(entry);\r\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\r\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\r\n      }\r\n      case \"ProjectedPoints\": {\r\n        const totalKg: number = getProjectedTotalKg(entry);\r\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\r\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\r\n\r\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\r\n        if (this.props.meet.formula === \"Total\") {\r\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\r\n        }\r\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\r\n      }\r\n      case \"FinalTotal\": {\r\n        const totalKg = getFinalTotalKg(entry);\r\n        const asNumber = this.props.meet.inKg ? totalKg : kg2lbs(totalKg);\r\n        return <td key={columnType}>{totalKg === 0 ? null : displayWeight(asNumber, this.props.language)}</td>;\r\n      }\r\n      case \"FinalPoints\": {\r\n        const totalKg: number = getFinalTotalKg(entry);\r\n        const event = entry.events.length > 0 ? entry.events[0] : \"SBD\";\r\n        const points: number = getPoints(this.props.meet.formula, entry, event, totalKg, this.props.meet.inKg);\r\n\r\n        // Normally this column is hidden for \"Total\", but it's handled just in case.\r\n        if (this.props.meet.formula === \"Total\") {\r\n          return <td key={columnType}>{points !== 0 ? displayWeight(points, this.props.language) : null}</td>;\r\n        }\r\n        return <td key={columnType}>{points !== 0 ? displayPoints(points, this.props.language) : null}</td>;\r\n      }\r\n      case \"Place\": {\r\n        // If the lifter has no total, then don't report a place.\r\n        if (getFinalTotalKg(entry) === 0) return <td key={columnType} />;\r\n\r\n        // If the lifter is a guest, they cannot place, so just display the guest symbol.\r\n        if (entry.guest) return <td key={columnType}>{getString(\"results.lifter-guest\", this.props.language)}</td>;\r\n\r\n        // Just show the Place from the first division in the list.\r\n        // This is the same division as shown in the \"Division\" column.\r\n        if (entry.divisions.length === 0) return <td key={columnType} />;\r\n        const firstDiv = entry.divisions[0];\r\n\r\n        // Look at all the categories, and find the first one including this division\r\n        // and entry. Because the categories are in sorted order, SBD takes priority\r\n        // over B by default.\r\n        for (let i = 0; i < categoryResults.length; i++) {\r\n          const result = categoryResults[i];\r\n          if (result.category.division !== firstDiv) {\r\n            continue;\r\n          }\r\n\r\n          const catEntries = result.orderedEntries;\r\n          for (let j = 0; j < catEntries.length; j++) {\r\n            const catEntry = catEntries[j];\r\n\r\n            if (catEntry.id === entry.id) {\r\n              // We can use the index into the array as their place, since it sorted and guests will be last in the array\r\n              const ordinal = displayPlaceOrdinal(j + 1, entry, this.props.language);\r\n              return <td key={columnType}>{ordinal}</td>;\r\n            }\r\n          }\r\n        }\r\n\r\n        return <td key={columnType} />; // Shouldn't happen.\r\n      }\r\n      default:\r\n        checkExhausted(columnType);\r\n        return <td key={columnType} />;\r\n    }\r\n  };\r\n\r\n  renderRows = (columns: Array<ColumnType>, categoryResults: Array<CategoryResults>) => {\r\n    const orderedEntries = this.props.orderedEntries;\r\n    const currentEntryId = this.props.currentEntryId;\r\n\r\n    const rows = [];\r\n    for (let i = 0; i < orderedEntries.length; i++) {\r\n      const entry = orderedEntries[i];\r\n\r\n      // Iterate over each columnType, handling each.\r\n      const cells = [];\r\n      for (let col = 0; col < columns.length; col++) {\r\n        const columnType = columns[col];\r\n        cells.push(this.renderCell(entry, columnType, categoryResults));\r\n      }\r\n\r\n      const isCurrent = entry.id === currentEntryId;\r\n      const rowClassName = isCurrent ? styles.current : \"\";\r\n      rows.push(\r\n        <tr key={entry.id} className={rowClassName}>\r\n          {cells}\r\n        </tr>\r\n      );\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  getColumnHeaderLabel = (columnType: ColumnType) => {\r\n    switch (columnType) {\r\n      case \"Lifter\":\r\n        return <LocalizedString id=\"lifting.column-lifter\" />;\r\n      case \"Bodyweight\":\r\n        return <LocalizedString id=\"lifting.column-bodyweight\" />;\r\n      case \"WeightClass\":\r\n        return <LocalizedString id=\"lifting.column-weightclass\" />;\r\n      case \"Division\":\r\n        return <LocalizedString id=\"lifting.column-division\" />;\r\n      case \"Lot\":\r\n        return <LocalizedString id=\"lifting.column-lot\" />;\r\n      case \"Equipment\":\r\n        return <LocalizedString id=\"lifting.column-equipment\" />;\r\n      case \"Age\":\r\n        return <LocalizedString id=\"lifting.column-age\" />;\r\n      case \"S1\":\r\n        return <LocalizedString id=\"lifting.column-s1\" />;\r\n      case \"S2\":\r\n        return <LocalizedString id=\"lifting.column-s2\" />;\r\n      case \"S3\":\r\n        return <LocalizedString id=\"lifting.column-s3\" />;\r\n      case \"S4\":\r\n        return <LocalizedString id=\"lifting.column-s4\" />;\r\n      case \"B1\":\r\n        return <LocalizedString id=\"lifting.column-b1\" />;\r\n      case \"B2\":\r\n        return <LocalizedString id=\"lifting.column-b2\" />;\r\n      case \"B3\":\r\n        return <LocalizedString id=\"lifting.column-b3\" />;\r\n      case \"B4\":\r\n        return <LocalizedString id=\"lifting.column-b4\" />;\r\n      case \"D1\":\r\n        return <LocalizedString id=\"lifting.column-d1\" />;\r\n      case \"D2\":\r\n        return <LocalizedString id=\"lifting.column-d2\" />;\r\n      case \"D3\":\r\n        return <LocalizedString id=\"lifting.column-d3\" />;\r\n      case \"D4\":\r\n        return <LocalizedString id=\"lifting.column-d4\" />;\r\n      case \"BestSquat\":\r\n        return <LocalizedString id=\"lifting.column-bestsquat\" />;\r\n      case \"BestBench\":\r\n        return <LocalizedString id=\"lifting.column-bestbench\" />;\r\n      case \"Spacer1\": // fallthrough\r\n      case \"Spacer2\":\r\n        return \"\";\r\n      case \"ProjectedTotal\":\r\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\r\n      case \"ProjectedPoints\":\r\n        return <LocalizedString id=\"lifting.column-projectedpoints\" />;\r\n      case \"FinalTotal\":\r\n        return <LocalizedString id=\"lifting.column-projectedtotal\" />;\r\n      case \"FinalPoints\":\r\n        return <LocalizedString id=\"lifting.column-finalpoints\" />;\r\n      case \"Place\":\r\n        return <LocalizedString id=\"lifting.column-place\" />;\r\n      default:\r\n        checkExhausted(columnType);\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // Reset this: hunting for a new AttemptIndex.\r\n    globalHighestAttemptInputAttempt = 0;\r\n\r\n    // Select the columns for display.\r\n    const columns: Array<ColumnType> = [\"Lifter\"];\r\n    // If the score table set the division column with to zero, hide it.\r\n    if (this.props.lifting.columnDivisionWidthPx !== 0) {\r\n      columns.push(\"Division\");\r\n    }\r\n    columns.push(\"Bodyweight\", \"WeightClass\");\r\n\r\n    // The \"Lot\" column is only shown if lot numbers are used.\r\n    for (let i = 0; i < this.props.orderedEntries.length; ++i) {\r\n      if (this.props.orderedEntries[i].lot !== 0) {\r\n        columns.push(\"Lot\");\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Select lift columns based off the current lift.\r\n    if (this.props.lifting.lift === \"S\") {\r\n      columns.push(\"Spacer1\");\r\n      columns.push(\"S1\", \"S2\", \"S3\");\r\n      if (this.props.attemptOneIndexed === 4) {\r\n        columns.push(\"S4\");\r\n      }\r\n      columns.push(\"Spacer2\");\r\n      columns.push(\"B1\", \"D1\");\r\n    } else if (this.props.lifting.lift === \"B\") {\r\n      columns.push(\"BestSquat\", \"Spacer1\", \"B1\", \"B2\", \"B3\");\r\n      if (this.props.attemptOneIndexed === 4) {\r\n        columns.push(\"B4\");\r\n      }\r\n      columns.push(\"Spacer2\", \"D1\");\r\n    } else if (this.props.lifting.lift === \"D\") {\r\n      columns.push(\"BestSquat\", \"BestBench\", \"Spacer1\", \"D1\", \"D2\", \"D3\");\r\n      if (this.props.attemptOneIndexed === 4) {\r\n        columns.push(\"D4\");\r\n      }\r\n      columns.push(\"Spacer2\");\r\n    }\r\n\r\n    // Use projected totals for everything before 2nd attempt deadlifts.\r\n    const useProjected = this.props.lifting.lift !== \"D\" || this.props.attemptOneIndexed < 2;\r\n    columns.push(useProjected ? \"ProjectedTotal\" : \"FinalTotal\");\r\n    if (this.props.meet.formula !== \"Total\") {\r\n      columns.push(useProjected ? \"ProjectedPoints\" : \"FinalPoints\");\r\n    }\r\n    columns.push(\"Place\");\r\n\r\n    // Build headers.\r\n    const headers = [];\r\n    const highlightColumn = this.props.lifting.lift + String(this.props.attemptOneIndexed);\r\n    for (let i = 0; i < columns.length; i++) {\r\n      const column = columns[i];\r\n      let className = styles.smallCell;\r\n      let style: CSSProperties | undefined;\r\n\r\n      if (column === \"Lifter\") {\r\n        className = styles.nameCell;\r\n      } else if (column === \"Division\") {\r\n        className = styles.divisionCell;\r\n        if (this.props.lifting.columnDivisionWidthPx) {\r\n          style = { width: this.props.lifting.columnDivisionWidthPx + \"px\" };\r\n        }\r\n      } else if (column === \"Spacer1\" || column === \"Spacer2\") {\r\n        className = styles.spacerCell;\r\n      } else if (column === highlightColumn) {\r\n        className = styles.activeColumn;\r\n      }\r\n\r\n      headers.push(\r\n        <th key={column} className={className} style={style}>\r\n          {this.getColumnHeaderLabel(column)}\r\n        </th>\r\n      );\r\n    }\r\n\r\n    // Calculate the Division placings for each of the lifters.\r\n    const categoryResults = useProjected\r\n      ? getProjectedResults(\r\n          this.props.orderedEntries,\r\n          this.props.meet.weightClassesKgMen,\r\n          this.props.meet.weightClassesKgWomen,\r\n          this.props.meet.weightClassesKgMx,\r\n          this.props.meet.combineSleevesAndWraps\r\n        )\r\n      : getFinalResults(\r\n          this.props.orderedEntries,\r\n          this.props.meet.weightClassesKgMen,\r\n          this.props.meet.weightClassesKgWomen,\r\n          this.props.meet.weightClassesKgMx,\r\n          this.props.meet.combineSleevesAndWraps\r\n        );\r\n\r\n    return (\r\n      <table className={styles.liftingtable}>\r\n        <thead>\r\n          <tr>{headers}</tr>\r\n        </thead>\r\n        <tbody>{this.renderRows(columns, categoryResults)}</tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    meet: state.meet,\r\n    lifting: state.lifting,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LiftingTable);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The footer of the Lifting page, contained by the LiftingView.\r\n// This is the parent element of the controls that affect present lifting state.\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { globalFocusAttemptInputId } from \"./LiftingTable\";\r\n\r\nimport { getString, localizeFlight } from \"../../logic/strings\";\r\nimport { displayNumber } from \"../../logic/units\";\r\n\r\nimport { markLift, overrideAttempt, overrideEntryId, setLiftingGroup } from \"../../actions/liftingActions\";\r\n\r\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\r\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\r\n\r\nimport styles from \"./LiftingFooter.module.scss\";\r\nimport { Dispatch } from \"redux\";\r\nimport { FormControlTypeHack, assertFlight, assertString, assertLift } from \"../../types/utils\";\r\n\r\ninterface OwnProps {\r\n  attemptOneIndexed: number;\r\n  orderedEntries: ReadonlyArray<Readonly<Entry>>;\r\n  currentEntryId: number | null;\r\n  flightsOnPlatform: ReadonlyArray<Flight>;\r\n  toggleReplaceTableWithWeighins: () => void;\r\n}\r\n\r\ninterface StateProps {\r\n  lifting: LiftingState;\r\n  lengthDays: number;\r\n  platformsOnDays: ReadonlyArray<number>;\r\n  allow4thAttempts: boolean;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) => void;\r\n  overrideAttempt: (attempt: number) => void;\r\n  overrideEntryId: (entryId: number) => void;\r\n  markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\nclass LiftingFooter extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.handleDayChange = this.handleDayChange.bind(this);\r\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\r\n    this.handleFlightChange = this.handleFlightChange.bind(this);\r\n    this.handleLiftChange = this.handleLiftChange.bind(this);\r\n\r\n    this.handleOnMouseEnter = this.handleOnMouseEnter.bind(this);\r\n    this.handleGoodLift = this.handleGoodLift.bind(this);\r\n    this.handleNoLift = this.handleNoLift.bind(this);\r\n\r\n    this.handleAttemptChange = this.handleAttemptChange.bind(this);\r\n    this.handleLifterChange = this.handleLifterChange.bind(this);\r\n\r\n    this.setFocusAttemptInputTimeout = this.setFocusAttemptInputTimeout.bind(this);\r\n\r\n    this.makeLifterOptions = this.makeLifterOptions.bind(this);\r\n  }\r\n\r\n  handleDayChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const day = Number(event.currentTarget.value);\r\n    const flight = this.props.lifting.flight;\r\n    const lift = this.props.lifting.lift;\r\n\r\n    // If the new day has fewer platforms, reset the platform selector also.\r\n    let platform = this.props.lifting.platform;\r\n    if (platform > this.props.platformsOnDays[day - 1]) {\r\n      platform = 1;\r\n    }\r\n\r\n    this.props.setLiftingGroup(day, platform, flight, lift);\r\n  };\r\n\r\n  handlePlatformChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const day = this.props.lifting.day;\r\n    const platform = Number(event.currentTarget.value);\r\n    const flight = this.props.lifting.flight;\r\n    const lift = this.props.lifting.lift;\r\n    this.props.setLiftingGroup(day, platform, flight, lift);\r\n  };\r\n\r\n  handleFlightChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const day = this.props.lifting.day;\r\n    const platform = this.props.lifting.platform;\r\n    const flight = event.currentTarget.value;\r\n    const lift = this.props.lifting.lift;\r\n    if (assertString(flight) && assertFlight(flight)) {\r\n      this.props.setLiftingGroup(day, platform, flight, lift);\r\n    }\r\n  };\r\n\r\n  handleLiftChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const day = this.props.lifting.day;\r\n    const platform = this.props.lifting.platform;\r\n    const flight = \"A\"; // Always reset to Flight A.\r\n    const lift = event.currentTarget.value;\r\n    if (assertString(lift) && assertLift(lift)) {\r\n      this.props.setLiftingGroup(day, platform, flight, lift);\r\n    }\r\n  };\r\n\r\n  handleAttemptChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const attempt = Number(event.currentTarget.value);\r\n    this.props.overrideAttempt(attempt);\r\n  };\r\n\r\n  handleLifterChange = (event: FormEvent<FormControlTypeHack>) => {\r\n    const entryId = Number(event.currentTarget.value);\r\n    this.props.overrideEntryId(entryId);\r\n  };\r\n\r\n  // After a \"No Lift\" or \"Good Lift\" button is clicked, try to change focus\r\n  // to the AttemptInput that the score table is likely to want to type into.\r\n  setFocusAttemptInputTimeout = () => {\r\n    if (globalFocusAttemptInputId === null) {\r\n      return;\r\n    }\r\n\r\n    // Auto-focusing is significantly less useful on 3rd attempts and beyond.\r\n    if (this.props.attemptOneIndexed >= 3) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(function () {\r\n      if (globalFocusAttemptInputId === null) {\r\n        return;\r\n      }\r\n\r\n      const elem = document.getElementById(globalFocusAttemptInputId);\r\n      if (elem) {\r\n        elem.focus();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  // This resolves Issue #224. The Good Lift and No Lift buttons are connected\r\n  // to onMouseDown handlers to greatly improve responsive feel. However, that\r\n  // means that an onBlur event is not fired for any AttemptInput that is\r\n  // currently being edited. We need to ensure that it's fired, just as if we\r\n  // were using a normal onClick handler.\r\n  //\r\n  // To ensure that any current AttemptInput is blurred, an onMouseEnter handler\r\n  // is added that always blurs the currently-focused element. Because there are\r\n  // several hundred milliseconds between onMouseEnter and onMouseDown due to\r\n  // human reaction timing, the onBlur event will fully-execute before onMouseDown.\r\n  handleOnMouseEnter = () => {\r\n    const activeElement = document.activeElement;\r\n    if (activeElement instanceof HTMLElement) {\r\n      activeElement.blur();\r\n    }\r\n  };\r\n\r\n  handleGoodLift = () => {\r\n    // If there's no active entry, there's nothing to set.\r\n    if (this.props.currentEntryId === null) {\r\n      return;\r\n    }\r\n\r\n    const entryId = Number(this.props.currentEntryId);\r\n    const lift = this.props.lifting.lift;\r\n    const attempt = this.props.attemptOneIndexed;\r\n    this.props.markLift(entryId, lift, attempt, true);\r\n    this.setFocusAttemptInputTimeout();\r\n  };\r\n\r\n  handleNoLift = () => {\r\n    // If there's no active entry, there's nothing to set.\r\n    if (this.props.currentEntryId === null) {\r\n      return;\r\n    }\r\n\r\n    const entryId = Number(this.props.currentEntryId);\r\n    const lift = this.props.lifting.lift;\r\n    const attempt = this.props.attemptOneIndexed;\r\n    this.props.markLift(entryId, lift, attempt, false);\r\n    this.setFocusAttemptInputTimeout();\r\n  };\r\n\r\n  // Check whether \"document.fullscreenElement\" exists, including prefixes.\r\n  hasFullscreenElement = (): boolean => {\r\n    const doc: any = document;\r\n    if (doc.fullscreenElement) return true;\r\n    if (doc.webkitFullscreenElement) return true;\r\n    if (doc.mozFullscreenElement) return true;\r\n    if (doc.msFullscreenElement) return true;\r\n    return false;\r\n  };\r\n\r\n  // Calls exitFullscreen(), but with prefixes.\r\n  exitFullscreen = () => {\r\n    const doc: any = document;\r\n    if (typeof doc.exitFullscreen === \"function\") doc.exitFullscreen();\r\n    else if (typeof doc.webkitExitFullscreen === \"function\") doc.webkitExitFullscreen();\r\n    else if (typeof doc.mozExitFullscreen === \"function\") doc.mozExitFullscreen();\r\n    else if (typeof doc.msExitFullscreen === \"function\") doc.msExitFullscreen();\r\n  };\r\n\r\n  // Calls requestFullscreen(), but with prefixes.\r\n  requestFullscreen = (e: any) => {\r\n    if (typeof e.requestFullscreen === \"function\") e.requestFullscreen();\r\n    else if (typeof e.webkitRequestFullscreen === \"function\") e.webkitRequestFullscreen();\r\n    else if (typeof e.mozRequestFullscreen === \"function\") e.mozRequestFullscreen();\r\n    else if (typeof e.msRequestFullscreen === \"function\") e.msRequestFullscreen();\r\n  };\r\n\r\n  // Called when the \"Toggle Fullscreen\" button is clicked.\r\n  handleFullscreen = () => {\r\n    // Document must be typecast to \"any\" because the fullscreen properties\r\n    // used here aren't defined in the Flow Document type definition.\r\n    if (this.hasFullscreenElement() === true) {\r\n      this.exitFullscreen();\r\n    } else {\r\n      const liftingView = document.getElementById(\"liftingView\");\r\n      if (liftingView !== null) {\r\n        this.requestFullscreen(liftingView);\r\n      }\r\n    }\r\n  };\r\n\r\n  makeLifterOptions = () => {\r\n    const orderedEntries = this.props.orderedEntries;\r\n\r\n    if (orderedEntries.length === 0) {\r\n      return (\r\n        <option value={0} key={0}>\r\n          {getString(\"lifting.footer-no-lifters\", this.props.language)}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const lifterOptions = [];\r\n    for (let i = 0; i < orderedEntries.length; i++) {\r\n      const entry = orderedEntries[i];\r\n      lifterOptions.push(\r\n        <option value={entry.id} key={entry.id}>\r\n          {entry.name}\r\n        </option>\r\n      );\r\n    }\r\n    return lifterOptions;\r\n  };\r\n\r\n  render() {\r\n    const language = this.props.language;\r\n    const numPlatforms = this.props.platformsOnDays[this.props.lifting.day - 1];\r\n\r\n    const dayOptions = [];\r\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\r\n    for (let i = 1; i <= this.props.lengthDays; i++) {\r\n      dayOptions.push(\r\n        <option value={i} key={i}>\r\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const platformOptions = [];\r\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\r\n    for (let i = 1; i <= numPlatforms; i++) {\r\n      platformOptions.push(\r\n        <option value={i} key={i}>\r\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const liftOptions = [\r\n      <option key={\"S\"} value={\"S\"}>\r\n        {getString(\"lifting.footer-squat\", language)}\r\n      </option>,\r\n      <option key={\"B\"} value={\"B\"}>\r\n        {getString(\"lifting.footer-bench\", language)}\r\n      </option>,\r\n      <option key={\"D\"} value={\"D\"}>\r\n        {getString(\"lifting.footer-deadlift\", language)}\r\n      </option>,\r\n    ];\r\n\r\n    const flightOptions = [];\r\n    const flightTemplate = getString(\"lifting.footer-flight-template\", language);\r\n    for (let i = 0; i < this.props.flightsOnPlatform.length; i++) {\r\n      const flight = this.props.flightsOnPlatform[i];\r\n      const key = this.props.lifting.day + \"-\" + this.props.lifting.platform + \"-\" + i;\r\n      flightOptions.push(\r\n        <option value={flight} key={key}>\r\n          {flightTemplate.replace(\"{flight}\", localizeFlight(flight, language))}\r\n        </option>\r\n      );\r\n    }\r\n    if (flightOptions.length === 0) {\r\n      flightOptions.push(<option key=\"none\">{getString(\"lifting.footer-no-flights\", language)}</option>);\r\n    }\r\n\r\n    const attemptOptions = [];\r\n    const attemptTemplate = getString(\"lifting.footer-attempt-template\", language);\r\n    for (let i = 1; i <= 3; i++) {\r\n      attemptOptions.push(\r\n        <option key={i} value={i}>\r\n          {attemptTemplate.replace(\"{N}\", displayNumber(i, language))}\r\n        </option>\r\n      );\r\n    }\r\n    if (this.props.allow4thAttempts === true) {\r\n      attemptOptions.push(\r\n        <option key={4} value={4}>\r\n          {attemptTemplate.replace(\"{N}\", displayNumber(4, language))}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const currentEntryId = this.props.currentEntryId === null ? undefined : this.props.currentEntryId.toString();\r\n\r\n    return (\r\n      <div className={styles.footer}>\r\n        <div className={styles.leftControls}>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={this.props.lifting.day.toString()}\r\n            onChange={this.handleDayChange}\r\n            className={`custom-select ${styles.selector}`}\r\n          >\r\n            {dayOptions}\r\n          </Form.Control>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={this.props.lifting.platform.toString()}\r\n            onChange={this.handlePlatformChange}\r\n            className={`custom-select ${styles.selector}`}\r\n          >\r\n            {platformOptions}\r\n          </Form.Control>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={this.props.lifting.lift}\r\n            onChange={this.handleLiftChange}\r\n            className={`custom-select ${styles.selector}`}\r\n          >\r\n            {liftOptions}\r\n          </Form.Control>\r\n          <Form.Control\r\n            key={\"flight-\" + this.props.lifting.flight}\r\n            as=\"select\"\r\n            value={this.props.lifting.flight}\r\n            onChange={this.handleFlightChange}\r\n            className={`custom-select ${styles.selector}`}\r\n          >\r\n            {flightOptions}\r\n          </Form.Control>\r\n          <Form.Control\r\n            value={this.props.attemptOneIndexed.toString()}\r\n            as=\"select\"\r\n            onChange={this.handleAttemptChange}\r\n            className={`custom-select ${styles.selector}`}\r\n          >\r\n            {attemptOptions}\r\n          </Form.Control>\r\n          <Form.Control\r\n            value={currentEntryId}\r\n            as=\"select\"\r\n            onChange={this.handleLifterChange}\r\n            className={`custom-select ${styles.selector}`}\r\n          >\r\n            {this.makeLifterOptions()}\r\n          </Form.Control>\r\n        </div>\r\n\r\n        <div className={styles.rightControls}>\r\n          <ButtonGroup>\r\n            <Button variant=\"outline-primary\" onClick={this.props.toggleReplaceTableWithWeighins}>\r\n              <FormattedMessage id=\"lifting.button-toggle-weigh-ins\" defaultMessage=\"Toggle Weigh-ins\" />\r\n            </Button>\r\n            <Button variant=\"outline-secondary\" onClick={this.handleFullscreen} className={styles.fullscreen}>\r\n              <FormattedMessage id=\"lifting.button-toggle-fullscreen\" defaultMessage=\"Toggle Fullscreen\" />\r\n            </Button>\r\n          </ButtonGroup>\r\n          <button\r\n            type=\"button\"\r\n            onMouseEnter={this.handleOnMouseEnter}\r\n            onMouseDown={this.handleNoLift}\r\n            className={styles.noLift}\r\n          >\r\n            <FormattedMessage id=\"lifting.button-no-lift\" defaultMessage=\"No Lift\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onMouseEnter={this.handleOnMouseEnter}\r\n            onMouseDown={this.handleGoodLift}\r\n            className={styles.goodLift}\r\n          >\r\n            <FormattedMessage id=\"lifting.button-good-lift\" defaultMessage=\"Good Lift\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState) => {\r\n  return {\r\n    lengthDays: state.meet.lengthDays,\r\n    platformsOnDays: state.meet.platformsOnDays,\r\n    allow4thAttempts: state.meet.allow4thAttempts,\r\n    lifting: state.lifting,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    setLiftingGroup: (day: number, platform: number, flight: Flight, lift: Lift) =>\r\n      dispatch(setLiftingGroup(day, platform, flight, lift)),\r\n    overrideAttempt: (attempt: number) => dispatch(overrideAttempt(attempt)),\r\n    overrideEntryId: (entryId: number) => dispatch(overrideEntryId(entryId)),\r\n    markLift: (entryId: number, lift: Lift, attempt: number, success: boolean) =>\r\n      dispatch(markLift(entryId, lift, attempt, success)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LiftingFooter);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The top bar of the Lifting page, containing huge text about the current lifter.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LocalizedString from \"../translations/LocalizedString\";\r\nimport { localizeEquipment } from \"../../logic/strings\";\r\nimport { displayNumber } from \"../../logic/units\";\r\n\r\nimport { Entry, Language } from \"../../types/dataTypes\";\r\nimport { GlobalState, RegistrationState } from \"../../types/stateTypes\";\r\n\r\nimport styles from \"./LiftingHeader.module.scss\";\r\n\r\ninterface OwnProps {\r\n  attemptOneIndexed: number;\r\n  orderedEntries: Array<Entry>;\r\n  currentEntryId: number | null;\r\n}\r\n\r\ninterface StateProps {\r\n  registration: RegistrationState;\r\n  language: Language;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\nclass LiftingHeader extends React.Component<Props> {\r\n  render() {\r\n    // Defaults, in case of no lifter.\r\n    let lifterName = <LocalizedString id=\"lifting.flight-complete\" />;\r\n    let info = \"\";\r\n\r\n    // In the case of a lifter, set fields.\r\n    if (this.props.currentEntryId !== null && this.props.currentEntryId !== undefined) {\r\n      const idx = this.props.registration.lookup[this.props.currentEntryId];\r\n      const entry = this.props.registration.entries[idx];\r\n      lifterName = <span>{entry.name}</span>;\r\n\r\n      const infoBuilder: Array<string> = [];\r\n\r\n      if (typeof entry.instagram === \"string\" && entry.instagram !== \"\") {\r\n        infoBuilder.push(\"@\" + entry.instagram);\r\n      } else {\r\n        infoBuilder.push(\"\"); // Causes a separator dot to display.\r\n      }\r\n      if (entry.age > 0) {\r\n        infoBuilder.push(displayNumber(entry.age, this.props.language));\r\n      }\r\n      infoBuilder.push(localizeEquipment(entry.equipment, this.props.language));\r\n      if (entry.divisions.length > 0) {\r\n        infoBuilder.push(entry.divisions.join(\", \"));\r\n      }\r\n\r\n      info = infoBuilder.join(\" · \");\r\n    }\r\n\r\n    return (\r\n      <div className={styles.header}>\r\n        <div className={styles.lifterName}>{lifterName}</div>\r\n        <div className={styles.info}>{info}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    registration: state.registration,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LiftingHeader);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// This defines a widget for manually adjusting the width of a column\r\n// in the LiftingTable. The width information is stored in the LiftingState.\r\n//\r\n// The value is stored in the LiftingState in pixels, but is presented\r\n// here as (pixels / 9) to make it look nicer. 9 is used because most columns\r\n// are set to 72px, which is divisible by 9.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { setTableInfo } from \"../../actions/liftingActions\";\r\n\r\nimport { Validation } from \"../../types/dataTypes\";\r\nimport { GlobalState, LiftingState } from \"../../types/stateTypes\";\r\nimport { FormControlTypeHack, isString } from \"../../types/utils\";\r\nimport { Dispatch } from \"redux\";\r\nimport { isNumber } from \"util\";\r\n\r\ntype WidthFields = \"columnDivisionWidthPx\";\r\n\r\ninterface OwnProps {\r\n  label: string; // The label to display.\r\n  fieldName: WidthFields; // Field on the LiftingState to change.\r\n}\r\n\r\ninterface StateProps {\r\n  lifting: LiftingState;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setTableInfo: (changes: Partial<LiftingState>) => void;\r\n}\r\n\r\ntype Props = OwnProps & StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  value: number | string;\r\n}\r\n\r\n// To show smaller numbers, the actual pixel count is divided by this.\r\nconst MULTIPLE: number = 9;\r\n\r\nclass ColumnWidth extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.validate = this.validate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      value: Math.ceil(this.props.lifting[this.props.fieldName] / MULTIPLE),\r\n    };\r\n  }\r\n\r\n  validate = (): Validation => {\r\n    const { value } = this.state;\r\n    const asNumber = Number(value);\r\n\r\n    if (isNaN(asNumber) || asNumber < 0 || asNumber > 1000) {\r\n      return \"error\";\r\n    }\r\n    return \"success\";\r\n  };\r\n\r\n  handleChange = (event: React.FormEvent<FormControlTypeHack>) => {\r\n    const value = event.currentTarget.value;\r\n    if (!isNumber(value) && !isString(value)) {\r\n      throw new Error(`Expected either a number or a string, but got \"${value}\"`);\r\n    }\r\n\r\n    this.setState({ value: value }, () => {\r\n      // As callback, save successful value into Redux store.\r\n      if (this.validate() !== \"error\") {\r\n        // TODO: figure out how to type this nicely. For now, use any\r\n        const changes: any = {};\r\n        changes[this.props.fieldName] = Math.floor(Number(value) * MULTIPLE);\r\n        this.props.setTableInfo(changes);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const validation: Validation = this.validate();\r\n\r\n    return (\r\n      <Form.Group>\r\n        <Form.Label>{this.props.label}</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          pattern=\"[0-9]+\"\r\n          min=\"0\"\r\n          step=\"1\"\r\n          value={this.state.value.toString()}\r\n          onChange={this.handleChange}\r\n          isValid={validation === \"success\"}\r\n          isInvalid={validation === \"error\"}\r\n          className={validation === \"warning\" ? \"is-warning\" : undefined}\r\n        />\r\n      </Form.Group>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  lifting: state.lifting,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setTableInfo: (changes: Partial<LiftingState>) => dispatch(setTableInfo(changes)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnWidth);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The parent component of the Lifting page, contained by the LiftingContainer.\r\n//\r\n// The LiftingTable, LiftingFooter, etc. all share calculated state.\r\n// This class performs the state calculations and communicates that to its\r\n// sub-components via props.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport LeftCard from \"./LeftCard\";\r\nimport LiftingFooter from \"./LiftingFooter\";\r\nimport LiftingHeader from \"./LiftingHeader\";\r\nimport LiftingTable from \"./LiftingTable\";\r\nimport WeighinsView from \"../weighins/WeighinsView\";\r\n\r\nimport ColumnWidth from \"./ColumnWidth\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\n\r\nimport styles from \"./LiftingView.module.scss\";\r\n\r\nimport { getLiftingOrder } from \"../../logic/liftingOrder\";\r\n\r\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\r\nimport { GlobalState, MeetState, LiftingState } from \"../../types/stateTypes\";\r\n\r\ninterface StateProps {\r\n  meet: MeetState;\r\n  lifting: LiftingState;\r\n  flightsOnPlatform: Array<Flight>;\r\n  entriesInFlight: Array<Entry>;\r\n  language: Language;\r\n}\r\n\r\ntype Props = StateProps;\r\n\r\ninterface InternalState {\r\n  // If true, the LiftingTable is replaced with the Weighins page.\r\n  // This lets the score table change arbitrary rack height and attempt information\r\n  // without removing the current lifter or bar load displays.\r\n  replaceTableWithWeighins: boolean;\r\n}\r\n\r\nclass LiftingView extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.toggleReplaceTableWithWeighins = this.toggleReplaceTableWithWeighins.bind(this);\r\n    this.state = {\r\n      replaceTableWithWeighins: false,\r\n    };\r\n  }\r\n\r\n  toggleReplaceTableWithWeighins = (): void => {\r\n    this.setState({\r\n      replaceTableWithWeighins: !this.state.replaceTableWithWeighins,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const now = getLiftingOrder(this.props.entriesInFlight, this.props.lifting);\r\n\r\n    let rightElement = null;\r\n    if (this.state.replaceTableWithWeighins === false) {\r\n      rightElement = (\r\n        <LiftingTable\r\n          attemptOneIndexed={now.attemptOneIndexed}\r\n          orderedEntries={now.orderedEntries}\r\n          currentEntryId={now.currentEntryId}\r\n        />\r\n      );\r\n    } else {\r\n      rightElement = (\r\n        <WeighinsView day={this.props.lifting.day} platform={this.props.lifting.platform} inLiftingPage={true} />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Card style={{ margin: \"12px 20px\" }}>\r\n          <Card.Body>\r\n            <div style={{ width: \"160px\" }}>\r\n              <ColumnWidth\r\n                label={getString(\"lifting.division-column-width-label\", this.props.language)}\r\n                fieldName=\"columnDivisionWidthPx\"\r\n              />\r\n            </div>\r\n            <h3>\r\n              <FormattedMessage\r\n                id=\"lifting.garish-instructions\"\r\n                defaultMessage=\"To fit to the screen, zoom the browser in or out and then press Toggle Fullscreen.\"\r\n              />\r\n            </h3>\r\n          </Card.Body>\r\n        </Card>\r\n        <div id=\"liftingView\" className={styles.liftingView}>\r\n          <LiftingHeader\r\n            attemptOneIndexed={now.attemptOneIndexed}\r\n            orderedEntries={now.orderedEntries}\r\n            currentEntryId={now.currentEntryId}\r\n          />\r\n\r\n          <div className={styles.middleParentContainer}>\r\n            <div className={styles.leftCardContainer}>\r\n              <LeftCard\r\n                attemptOneIndexed={now.attemptOneIndexed}\r\n                orderedEntries={now.orderedEntries}\r\n                currentEntryId={now.currentEntryId}\r\n                nextEntryId={now.nextEntryId}\r\n                nextAttemptOneIndexed={now.nextAttemptOneIndexed}\r\n              />\r\n            </div>\r\n\r\n            <div className={styles.rightCardContainer}>{rightElement}</div>\r\n          </div>\r\n\r\n          <LiftingFooter\r\n            attemptOneIndexed={now.attemptOneIndexed}\r\n            orderedEntries={now.orderedEntries}\r\n            currentEntryId={now.currentEntryId}\r\n            flightsOnPlatform={this.props.flightsOnPlatform}\r\n            toggleReplaceTableWithWeighins={this.toggleReplaceTableWithWeighins}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  const day = state.lifting.day;\r\n  const platform = state.lifting.platform;\r\n  const flight = state.lifting.flight;\r\n\r\n  const entriesOnPlatform = state.registration.entries.filter(\r\n    (entry) => entry.day === day && entry.platform === platform\r\n  );\r\n\r\n  // Determine available flights from the entries themselves.\r\n  const flights: Array<Flight> = [];\r\n  for (let i = 0; i < entriesOnPlatform.length; i++) {\r\n    const entry = entriesOnPlatform[i];\r\n    if (flights.indexOf(entry.flight) === -1) {\r\n      flights.push(entry.flight);\r\n    }\r\n  }\r\n  flights.sort();\r\n\r\n  // Only receive entries that are in the currently-lifting group.\r\n  const entriesInFlight = entriesOnPlatform.filter((entry) => entry.flight === flight);\r\n\r\n  return {\r\n    meet: state.meet,\r\n    lifting: state.lifting,\r\n    flightsOnPlatform: flights,\r\n    entriesInFlight: entriesInFlight,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(LiftingView);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Container for the Lifting page.\r\n\r\nimport React from \"react\";\r\nimport LiftingView from \"../components/lifting/LiftingView\";\r\n\r\nclass LiftingContainer extends React.Component<{}> {\r\n  render() {\r\n    return <LiftingView />;\r\n  }\r\n}\r\n\r\nexport default LiftingContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Shows the first attempt ordering of lifters for a single flight.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport { liftToAttemptFieldName } from \"../../logic/entry\";\r\nimport { orderEntriesByAttempt } from \"../../logic/liftingOrder\";\r\nimport { getString, localizeFlight } from \"../../logic/strings\";\r\nimport { kg2lbs, displayNumber, displayWeight } from \"../../logic/units\";\r\n\r\nimport { Entry, Flight, Language, Lift } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nimport styles from \"./OneFlightOrder.module.scss\";\r\n\r\ntype Column =\r\n  | \"SquatName\"\r\n  | \"SquatKg\"\r\n  | \"SquatLbs\"\r\n  | \"BenchSeparator\"\r\n  | \"BenchName\"\r\n  | \"BenchKg\"\r\n  | \"BenchLbs\"\r\n  | \"DeadliftSeparator\"\r\n  | \"DeadliftName\"\r\n  | \"DeadliftKg\"\r\n  | \"DeadliftLbs\";\r\n\r\ninterface OwnProps {\r\n  flight: Flight;\r\n  entriesInFlight: Array<Entry>;\r\n}\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  showAlternateUnits: boolean;\r\n  language: Language;\r\n}\r\n\r\ntype Props = OwnProps & StateProps;\r\n\r\nclass OneFlightOrder extends React.Component<Props> {\r\n  getOrderBy = (lift: Lift): Array<Entry> => {\r\n    const fieldKg = liftToAttemptFieldName(lift);\r\n\r\n    // Only consider entries that registered a first attempt.\r\n    const entriesForLift = this.props.entriesInFlight.filter((e) => {\r\n      return e[fieldKg][0] !== 0;\r\n    });\r\n\r\n    // Sort them in-place on the basis of that first attempt.\r\n    return orderEntriesByAttempt(entriesForLift, fieldKg, 1);\r\n  };\r\n\r\n  getColumnHeader(column: Column, language: Language): string {\r\n    switch (column) {\r\n      case \"SquatName\":\r\n        return getString(\"flight-order.squat-column-header\", language);\r\n      case \"SquatKg\":\r\n        return getString(\"flight-order.kilograms-header\", language);\r\n      case \"SquatLbs\":\r\n        return getString(\"flight-order.pounds-header\", language);\r\n      case \"BenchSeparator\":\r\n        return \"\";\r\n      case \"BenchName\":\r\n        return getString(\"flight-order.bench-column-header\", language);\r\n      case \"BenchKg\":\r\n        return getString(\"flight-order.kilograms-header\", language);\r\n      case \"BenchLbs\":\r\n        return getString(\"flight-order.pounds-header\", language);\r\n      case \"DeadliftSeparator\":\r\n        return \"\";\r\n      case \"DeadliftName\":\r\n        return getString(\"flight-order.deadlift-column-header\", language);\r\n      case \"DeadliftKg\":\r\n        return getString(\"flight-order.kilograms-header\", language);\r\n      case \"DeadliftLbs\":\r\n        return getString(\"flight-order.pounds-header\", language);\r\n      default:\r\n        checkExhausted(column);\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const language = this.props.language;\r\n\r\n    const bySquat = this.getOrderBy(\"S\");\r\n    const byBench = this.getOrderBy(\"B\");\r\n    const byDeadlift = this.getOrderBy(\"D\");\r\n\r\n    const hasSquat = bySquat.length !== 0;\r\n    const hasBench = byBench.length !== 0;\r\n    const hasDeadlift = byDeadlift.length !== 0;\r\n\r\n    const maxRows = Math.max(bySquat.length, byBench.length, byDeadlift.length);\r\n\r\n    // Figure out what columns to render, and in which order.\r\n    const columns: Array<Column> = [];\r\n    if (hasSquat) {\r\n      columns.push(\"SquatName\");\r\n      columns.push(this.props.inKg ? \"SquatKg\" : \"SquatLbs\");\r\n      if (this.props.showAlternateUnits) {\r\n        columns.push(this.props.inKg ? \"SquatLbs\" : \"SquatKg\");\r\n      }\r\n    }\r\n    if (hasBench) {\r\n      if (hasSquat) {\r\n        columns.push(\"BenchSeparator\");\r\n      }\r\n      columns.push(\"BenchName\");\r\n      columns.push(this.props.inKg ? \"BenchKg\" : \"BenchLbs\");\r\n      if (this.props.showAlternateUnits) {\r\n        columns.push(this.props.inKg ? \"BenchLbs\" : \"BenchKg\");\r\n      }\r\n    }\r\n    if (hasDeadlift) {\r\n      if (hasSquat || hasBench) {\r\n        columns.push(\"DeadliftSeparator\");\r\n      }\r\n      columns.push(\"DeadliftName\");\r\n      columns.push(this.props.inKg ? \"DeadliftKg\" : \"DeadliftLbs\");\r\n      if (this.props.showAlternateUnits) {\r\n        columns.push(this.props.inKg ? \"DeadliftLbs\" : \"DeadliftKg\");\r\n      }\r\n    }\r\n\r\n    // Construct a table row-by-row.\r\n    const rows = [];\r\n    for (let i = 0; i < maxRows; ++i) {\r\n      const builder = [];\r\n\r\n      for (let j = 0; j < columns.length; ++j) {\r\n        const column = columns[j];\r\n        const key: string = column + String(i);\r\n\r\n        let content: string = \"\";\r\n        let className = undefined;\r\n\r\n        switch (column) {\r\n          case \"SquatName\": {\r\n            if (i < bySquat.length) {\r\n              const entry = bySquat[i];\r\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\r\n            }\r\n            break;\r\n          }\r\n          case \"SquatKg\": {\r\n            if (i < bySquat.length) {\r\n              const entry = bySquat[i];\r\n              content = displayWeight(entry.squatKg[0], language);\r\n            }\r\n            break;\r\n          }\r\n          case \"SquatLbs\": {\r\n            if (i < bySquat.length) {\r\n              const entry = bySquat[i];\r\n              content = displayWeight(kg2lbs(entry.squatKg[0]), language);\r\n            }\r\n            break;\r\n          }\r\n          case \"BenchSeparator\":\r\n            className = styles.leftDivider;\r\n            break;\r\n          case \"BenchName\": {\r\n            if (i < byBench.length) {\r\n              const entry = byBench[i];\r\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\r\n            }\r\n            break;\r\n          }\r\n          case \"BenchKg\": {\r\n            if (i < byBench.length) {\r\n              const entry = byBench[i];\r\n              content = displayWeight(entry.benchKg[0], language);\r\n            }\r\n            break;\r\n          }\r\n          case \"BenchLbs\": {\r\n            if (i < byBench.length) {\r\n              const entry = byBench[i];\r\n              content = displayWeight(kg2lbs(entry.benchKg[0]), language);\r\n            }\r\n            break;\r\n          }\r\n          case \"DeadliftSeparator\":\r\n            className = styles.leftDivider;\r\n            break;\r\n          case \"DeadliftName\": {\r\n            if (i < byDeadlift.length) {\r\n              const entry = byDeadlift[i];\r\n              content = displayNumber(i + 1, language) + \". \" + entry.name;\r\n            }\r\n            break;\r\n          }\r\n          case \"DeadliftKg\": {\r\n            if (i < byDeadlift.length) {\r\n              const entry = byDeadlift[i];\r\n              content = displayWeight(entry.deadliftKg[0], language);\r\n            }\r\n            break;\r\n          }\r\n          case \"DeadliftLbs\": {\r\n            if (i < byDeadlift.length) {\r\n              const entry = byDeadlift[i];\r\n              content = displayWeight(kg2lbs(entry.deadliftKg[0]), language);\r\n            }\r\n            break;\r\n          }\r\n        }\r\n\r\n        builder.push(\r\n          <td key={key} className={className}>\r\n            {content}\r\n          </td>\r\n        );\r\n      }\r\n\r\n      rows.push(<tr key={i}>{builder}</tr>);\r\n    }\r\n\r\n    // Construct the table header.\r\n    const header = [];\r\n    for (let i = 0; i < columns.length; ++i) {\r\n      const column = columns[i];\r\n      const title = this.getColumnHeader(column, this.props.language);\r\n      header.push(<th key={column}>{title}</th>);\r\n    }\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <FormattedMessage\r\n            id=\"flight-order.flight-card\"\r\n            defaultMessage=\"Flight {flight} Lifting Order\"\r\n            values={{ flight: localizeFlight(this.props.flight, this.props.language) }}\r\n          />\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Table striped hover size=\"sm\" style={{ margin: \"0px\" }}>\r\n            <thead>\r\n              <tr>{header}</tr>\r\n            </thead>\r\n            <tbody>{rows}</tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    inKg: state.meet.inKg,\r\n    showAlternateUnits: state.meet.showAlternateUnits,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OneFlightOrder);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The parent component of the FlightOrder page, contained by the FlightOrderContainer.\r\n\r\nimport React, { FormEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport OneFlightOrder from \"./OneFlightOrder\";\r\n\r\nimport { getString } from \"../../logic/strings\";\r\nimport { displayNumber } from \"../../logic/units\";\r\n\r\nimport { Entry, Flight, Language } from \"../../types/dataTypes\";\r\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\r\nimport { FormControlTypeHack } from \"../../types/utils\";\r\n\r\ninterface StateProps {\r\n  meet: MeetState;\r\n  entries: ReadonlyArray<Entry>;\r\n  language: Language;\r\n}\r\n\r\ntype Props = StateProps;\r\n\r\ninterface InternalState {\r\n  day: number;\r\n  platform: number;\r\n}\r\n\r\nclass FlightOrderView extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.updateDay = this.updateDay.bind(this);\r\n    this.updatePlatform = this.updatePlatform.bind(this);\r\n    this.handlePrint = this.handlePrint.bind(this);\r\n\r\n    this.state = {\r\n      day: 1,\r\n      platform: 1,\r\n    };\r\n  }\r\n\r\n  updateDay = (event: FormEvent<FormControlTypeHack>) => {\r\n    const day = Number(event.currentTarget.value);\r\n    if (this.state.day !== day) {\r\n      // If the currently-selected platform number becomes invalid, reset it.\r\n      if (this.state.platform > this.props.meet.platformsOnDays[day - 1]) {\r\n        this.setState({ day: day, platform: 1 });\r\n      } else {\r\n        this.setState({ day: day });\r\n      }\r\n    }\r\n  };\r\n\r\n  updatePlatform = (event: React.FormEvent<FormControlTypeHack>) => {\r\n    const platform = Number(event.currentTarget.value);\r\n    if (this.state.platform !== platform) {\r\n      this.setState({ platform: platform });\r\n    }\r\n  };\r\n\r\n  handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  render() {\r\n    const language = this.props.language;\r\n    const selectorStyle = { width: \"120px\", marginRight: \"15px\" };\r\n\r\n    // Make options for all of the days.\r\n    const dayOptions = [];\r\n    const dayTemplate = getString(\"lifting.footer-day-template\", language);\r\n    for (let i = 1; i <= this.props.meet.lengthDays; i++) {\r\n      dayOptions.push(\r\n        <option value={i} key={i}>\r\n          {dayTemplate.replace(\"{N}\", displayNumber(i, language))}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    // Make options for all of the available platforms on the current day.\r\n    const platformOptions = [];\r\n    const platformTemplate = getString(\"lifting.footer-platform-template\", language);\r\n    const numPlatforms = this.props.meet.platformsOnDays[this.state.day - 1];\r\n    for (let i = 1; i <= numPlatforms; i++) {\r\n      platformOptions.push(\r\n        <option value={i} key={i}>\r\n          {platformTemplate.replace(\"{N}\", displayNumber(i, language))}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    // Get all the entries under the current (day, platform) selection.\r\n    const shownEntries = this.props.entries.filter((e) => {\r\n      return e.day === this.state.day && e.platform === this.state.platform;\r\n    });\r\n\r\n    // Look through the entries to discover what flights exist.\r\n    const knownFlights: Flight[] = [];\r\n    for (let i = 0; i < shownEntries.length; i++) {\r\n      const entry = shownEntries[i];\r\n      if (knownFlights.indexOf(entry.flight) === -1) {\r\n        knownFlights.push(entry.flight);\r\n      }\r\n    }\r\n    knownFlights.sort();\r\n\r\n    // For each flight, see if there are any lifters, and build a OneFlightOrder.\r\n    const flightOrders = [];\r\n    for (let i = 0; i < knownFlights.length; i++) {\r\n      const flight = knownFlights[i];\r\n      const entriesInFlight = shownEntries.filter((e) => e.flight === flight);\r\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + flight;\r\n      flightOrders.push(<OneFlightOrder key={id} flight={flight} entriesInFlight={entriesInFlight} />);\r\n    }\r\n\r\n    // FIXME: Disable categories for the moment. They seem unhelpful.\r\n    // As far as I know, no one has paid them much attention.\r\n    /*\r\n    // Look through the entries to discover what divisions exist.\r\n    const categoryResults = getProjectedResults(\r\n      shownEntries,\r\n      this.props.meet.weightClassesKgMen,\r\n      this.props.meet.weightClassesKgWomen,\r\n      this.props.meet.weightClassesKgMx,\r\n      this.props.meet.combineSleevesAndWraps\r\n    );\r\n\r\n    let categories: Array<JSX.Element> = [];\r\n    for (let i = 0; i < categoryResults.length; i++) {\r\n      const id = \"\" + this.state.day + \"-\" + this.state.platform + \"-\" + i;\r\n      categories.push(<OneCategory key={id} platform={this.state.platform} categoryResults={categoryResults[i]} />);\r\n    }\r\n    */\r\n\r\n    return (\r\n      <div>\r\n        <Card style={{ marginBottom: \"17px\" }}>\r\n          <Card.Body style={{ display: \"flex\" }}>\r\n            <FormControl\r\n              value={this.state.day.toString()}\r\n              as=\"select\"\r\n              onChange={this.updateDay}\r\n              style={selectorStyle}\r\n              className=\"custom-select\"\r\n            >\r\n              {dayOptions}\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              value={this.state.platform.toString()}\r\n              as=\"select\"\r\n              onChange={this.updatePlatform}\r\n              style={selectorStyle}\r\n              className=\"custom-select\"\r\n            >\r\n              {platformOptions}\r\n            </FormControl>\r\n\r\n            <Button variant=\"info\" onClick={this.handlePrint}>\r\n              <FormattedMessage id=\"flight-order.print-button\" defaultMessage=\"Print Page\" />\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {flightOrders}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    meet: state.meet,\r\n    entries: state.registration.entries,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FlightOrderView);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Container for the FlightOrder page.\r\n\r\nimport React from \"react\";\r\n\r\nimport FlightOrderView from \"../components/flight-order/FlightOrderView\";\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\nclass FlightOrderContainer extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <div className={styles.contentArea}>\r\n        <FlightOrderView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlightOrderContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Displays the results by division.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport { getFinalResults } from \"../../logic/divisionPlace\";\r\nimport { getWeightClassStr, getWeightClassLbsStr, wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\r\nimport {\r\n  getBest5SquatKg,\r\n  getBest5BenchKg,\r\n  getBest5DeadliftKg,\r\n  getFinalEventTotalKg,\r\n  entryHasLifted,\r\n} from \"../../logic/entry\";\r\nimport { kg2lbs, displayWeight, displayPoints, displayPlaceOrdinal } from \"../../logic/units\";\r\n\r\nimport { getString, localizeEquipment, localizeEvent, localizeWeightClassStr } from \"../../logic/strings\";\r\nimport { getPoints } from \"../../logic/coefficients/coefficients\";\r\n\r\nimport { Category, CategoryResults } from \"../../logic/divisionPlace\";\r\nimport { Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  showAlternateUnits: boolean;\r\n  meetName: string;\r\n  formula: Formula;\r\n  combineSleevesAndWraps: boolean;\r\n  lengthDays: number;\r\n  weightClassesKgMen: ReadonlyArray<number>;\r\n  weightClassesKgWomen: ReadonlyArray<number>;\r\n  weightClassesKgMx: ReadonlyArray<number>;\r\n  language: Language;\r\n  entries: ReadonlyArray<Entry>;\r\n}\r\n\r\ninterface OwnProps {\r\n  day: string | number; // Really a number, 0 meaning \"all\".\r\n}\r\n\r\ntype Props = StateProps & OwnProps;\r\n\r\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\r\n  switch (sex) {\r\n    case \"M\":\r\n      return props.weightClassesKgMen;\r\n    case \"F\":\r\n      return props.weightClassesKgWomen;\r\n    case \"Mx\":\r\n      return props.weightClassesKgMx;\r\n    default:\r\n      checkExhausted(sex);\r\n      return props.weightClassesKgMen;\r\n  }\r\n};\r\n\r\nclass ByDivision extends React.Component<Props> {\r\n  renderEntryRow = (entry: Entry, category: Category, key: number): JSX.Element | null => {\r\n    // Skip no-show entries.\r\n    if (!entryHasLifted(entry)) return null;\r\n\r\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\r\n    // to the DQ'd lifter to have that projected.\r\n    const totalKg = getFinalEventTotalKg(entry, category.event);\r\n    if (totalKg === 0) return null;\r\n\r\n    const inKg = this.props.inKg;\r\n    const language = this.props.language;\r\n\r\n    // The place proceeds in order by key, except for guests\r\n    const place = entry.guest\r\n      ? getString(\"results.lifter-guest\", language)\r\n      : displayPlaceOrdinal(key + 1, entry, this.props.language);\r\n\r\n    const points: number = getPoints(this.props.formula, entry, category.event, totalKg, inKg);\r\n\r\n    let pointsStr = \"\";\r\n    if (totalKg !== 0 && points === 0) {\r\n      pointsStr = getString(\"results.value-not-applicable\", language);\r\n    } else if (totalKg !== 0 && points !== 0) {\r\n      pointsStr = displayPoints(points, language);\r\n    }\r\n\r\n    const classes = mapSexToClasses(entry.sex, this.props);\r\n    const wtcls = inKg\r\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\r\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\r\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\r\n\r\n    const squatKg = getBest5SquatKg(entry);\r\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\r\n\r\n    const benchKg = getBest5BenchKg(entry);\r\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\r\n\r\n    const deadliftKg = getBest5DeadliftKg(entry);\r\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\r\n\r\n    let weightTemplate = \"\";\r\n    if (inKg) {\r\n      if (this.props.showAlternateUnits === true) {\r\n        weightTemplate = getString(\"lifting.current-weight-kg-lbs\", language);\r\n      } else {\r\n        weightTemplate = getString(\"lifting.current-weight-kg\", language);\r\n      }\r\n    } else {\r\n      if (this.props.showAlternateUnits === true) {\r\n        weightTemplate = getString(\"lifting.current-weight-lbs-kg\", language);\r\n      } else {\r\n        weightTemplate = getString(\"lifting.current-weight-lbs\", language);\r\n      }\r\n    }\r\n\r\n    let weightString: null | string = null;\r\n    if (totalKg > 0) {\r\n      weightString = weightTemplate\r\n        .replace(\"{kg}\", displayWeight(totalKg, language))\r\n        .replace(\"{lbs}\", displayWeight(kg2lbs(totalKg), language));\r\n    }\r\n\r\n    return (\r\n      <tr key={key}>\r\n        <td>{place}</td>\r\n        <td>{entry.name}</td>\r\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\r\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\r\n        <td>{entry.age === 0 ? null : entry.age}</td>\r\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\r\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\r\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\r\n        <td>{weightString}</td>\r\n        <td>{pointsStr}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  mapSexToLabel = (sex: Sex, language: Language): string => {\r\n    switch (sex) {\r\n      case \"M\":\r\n        return getString(\"results.mens\", language);\r\n      case \"F\":\r\n        return getString(\"results.womens\", language);\r\n      case \"Mx\":\r\n        return getString(\"results.mxs\", language);\r\n      default:\r\n        checkExhausted(sex);\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  renderCategoryResults = (results: CategoryResults, key: number): JSX.Element | null => {\r\n    const { category, orderedEntries } = results;\r\n    const language = this.props.language;\r\n    const sex: string = this.mapSexToLabel(category.sex, language);\r\n\r\n    // Gather rows.\r\n    const rows = [];\r\n    for (let i = 0; i < orderedEntries.length; i++) {\r\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\r\n      if (row !== null) {\r\n        rows.push(row);\r\n      }\r\n    }\r\n\r\n    // If all entries were no-show, don't show this panel.\r\n    if (rows.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let eqpstr: string = localizeEquipment(category.equipment, language);\r\n    if (this.props.combineSleevesAndWraps && (category.equipment === \"Sleeves\" || category.equipment === \"Wraps\")) {\r\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\r\n    }\r\n\r\n    const units = this.props.inKg\r\n      ? getString(\"results.spoken-unit-kilo\", language)\r\n      : getString(\"results.spoken-unit-pound\", language);\r\n\r\n    // Convert the category.weightClassStr to pounds.\r\n    let wtcls = localizeWeightClassStr(category.weightClassStr, language);\r\n    if (category.weightClassStr !== \"\" && !this.props.inKg) {\r\n      wtcls = wtclsStrKg2Lbs(category.weightClassStr);\r\n    }\r\n\r\n    const template = getString(\"results.division-template\", language);\r\n    const division = template\r\n      .replace(\"{sex}\", sex)\r\n      .replace(\"{weightClass}\", wtcls)\r\n      .replace(\"{spokenUnits}\", category.weightClassStr !== \"\" ? units : \"\")\r\n      .replace(\"{equipment}\", eqpstr)\r\n      .replace(\"{division}\", category.division)\r\n      .replace(\"{event}\", localizeEvent(category.event, language));\r\n\r\n    return (\r\n      <Card key={key} style={{ marginTop: \"17px\" }}>\r\n        <Card.Header>{division}</Card.Header>\r\n        <Card.Body>\r\n          <Table hover size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>{getString(\"lifting.column-place\", language)}</th>\r\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\r\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\r\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\r\n                <th>{getString(\"lifting.column-age\", language)}</th>\r\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\r\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\r\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\r\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\r\n                <th>{getString(\"lifting.column-finalpoints\", language)}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{rows}</tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const results = getFinalResults(\r\n      this.props.entries,\r\n      this.props.weightClassesKgMen,\r\n      this.props.weightClassesKgWomen,\r\n      this.props.weightClassesKgMx,\r\n      this.props.combineSleevesAndWraps\r\n    );\r\n\r\n    const categoryCards = [];\r\n    for (let i = 0; i < results.length; i++) {\r\n      const panel = this.renderCategoryResults(results[i], i);\r\n      if (panel !== null) {\r\n        categoryCards.push(panel);\r\n      }\r\n    }\r\n\r\n    return <div>{categoryCards}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\r\n  const day = Number(ownProps.day);\r\n  let entries = state.registration.entries;\r\n  if (day > 0) {\r\n    entries = entries.filter((e) => e.day === day);\r\n  }\r\n\r\n  return {\r\n    inKg: state.meet.inKg,\r\n    showAlternateUnits: state.meet.showAlternateUnits,\r\n    meetName: state.meet.name,\r\n    formula: state.meet.formula,\r\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\r\n    lengthDays: state.meet.lengthDays,\r\n    weightClassesKgMen: state.meet.weightClassesKgMen,\r\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\r\n    weightClassesKgMx: state.meet.weightClassesKgMx,\r\n    language: state.language,\r\n    entries: entries,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ByDivision);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the logic for calculating the division Place of a lifter, shared between\r\n// the Lifting page, the Rankings page, and data export code.\r\n//\r\n// The algorithm used is particularly bad -- the foremost goal was to make an interface\r\n// that allowed for maximum code reuse between the Rankings and Lifting pages,\r\n// which have slightly different needs.\r\n\r\nimport { getFinalEventTotalKg } from \"./entry\";\r\n\r\n// Import points formulas.\r\nimport { getAgeAdjustedPoints } from \"./coefficients/coefficients\";\r\n\r\n// Import age coefficients.\r\nimport { checkExhausted } from \"../types/utils\";\r\nimport { AgeCoefficients, Sex, Event, Equipment, Entry, Formula } from \"../types/dataTypes\";\r\n\r\n// Specifies a points category under which entries can be ranked together.\r\nexport type PointsCategory = {\r\n  sex: Sex;\r\n  event: Event;\r\n  equipment: Equipment;\r\n};\r\n\r\n// Wraps up all the entries in a category with the category's descriptors.\r\nexport type PointsCategoryResults = {\r\n  category: PointsCategory;\r\n  orderedEntries: Array<Entry>;\r\n};\r\n\r\n// Generates a unique String out of a Category, for purposes of using as a Map key.\r\nconst categoryToKey = (category: PointsCategory): string => {\r\n  return JSON.stringify(category);\r\n};\r\nconst keyToCategory = (key: string): PointsCategory => {\r\n  return JSON.parse(key);\r\n};\r\n\r\n// Returns a copy of the entries array sorted by Formula Place (Rank).\r\n// All entries are assumed to be part of the same category.\r\nconst sortByFormulaPlaceInCategory = (\r\n  entries: Array<Entry>,\r\n  category: PointsCategory,\r\n  formula: Formula,\r\n  ageCoefficients: AgeCoefficients,\r\n  inKg: boolean,\r\n  meetDate: string\r\n): Array<Entry> => {\r\n  // Make a map from Entry to initial index.\r\n  const indexMap = new Map();\r\n  for (let i = 0; i < entries.length; i++) {\r\n    indexMap.set(entries[i], i);\r\n  }\r\n\r\n  // Pre-calculate all the points into an array to avoid computing them multiple\r\n  // times in the sort.\r\n  const memoizedPoints = new Array(entries.length);\r\n  for (let i = 0; i < entries.length; i++) {\r\n    const entry = entries[i];\r\n    const totalKg = getFinalEventTotalKg(entry, category.event);\r\n\r\n    memoizedPoints[i] = getAgeAdjustedPoints(ageCoefficients, meetDate, formula, entry, category.event, totalKg, inKg);\r\n  }\r\n\r\n  // Clone the entries array to avoid modifying the original.\r\n  const clonedEntries = entries.slice();\r\n\r\n  // Sort in the given category, first place having the lowest index.\r\n  clonedEntries.sort((a, b) => {\r\n    const aIndex = indexMap.get(a);\r\n    const bIndex = indexMap.get(b);\r\n\r\n    // Appease the type checker even though this can't happen.\r\n    if (aIndex === undefined || bIndex === undefined) return 0;\r\n\r\n    // Guests always sort higher than non-guests.\r\n    // This is phrased a little strangely to also handle undefined.\r\n    if (a.guest !== b.guest) {\r\n      if (a.guest) return 1;\r\n      if (b.guest) return -1;\r\n    }\r\n\r\n    // First sort by points, higher sorting lower.\r\n    const aPoints = memoizedPoints[aIndex];\r\n    const bPoints = memoizedPoints[bIndex];\r\n    if (aPoints !== bPoints) return bPoints - aPoints;\r\n\r\n    // If points are equal, sort by Bodyweight, lower sorting lower.\r\n    if (a.bodyweightKg !== b.bodyweightKg) return a.bodyweightKg - b.bodyweightKg;\r\n\r\n    // Otherwise, they're equal.\r\n    return 0;\r\n  });\r\n\r\n  return clonedEntries;\r\n};\r\n\r\n// Determines the sort order by Event.\r\nconst getEventSortOrder = (ev: Event): number => {\r\n  return [\"SBD\", \"BD\", \"SB\", \"SD\", \"S\", \"B\", \"D\"].indexOf(ev);\r\n};\r\n\r\n// Determines the sort order by Equipment.\r\nconst getEquipmentSortOrder = (eq: Equipment): number => {\r\n  // Combine classic and equipped lifting.\r\n  return [\"Bare\", \"Sleeves\", \"Wraps\", \"Single-ply\", \"Multi-ply\", \"Unlimited\"].indexOf(eq);\r\n};\r\n\r\n// Determines the sort order by Sex.\r\nconst getSexSortOrder = (sex: Sex): number => {\r\n  switch (sex) {\r\n    case \"F\":\r\n      return 0;\r\n    case \"M\":\r\n      return 1;\r\n    case \"Mx\":\r\n      return 2;\r\n    default:\r\n      checkExhausted(sex);\r\n      return 3;\r\n  }\r\n};\r\n\r\n// Determines the sort (and therefore presentation) order for the Category Results.\r\n// The input array is sorted in-place; nothing is returned.\r\nexport const sortPointsCategoryResults = (results: Array<PointsCategoryResults>): void => {\r\n  results.sort((a, b) => {\r\n    const catA = a.category;\r\n    const catB = b.category;\r\n\r\n    // First, sort by Sex.\r\n    const aSex = getSexSortOrder(catA.sex);\r\n    const bSex = getSexSortOrder(catB.sex);\r\n    if (aSex !== bSex) return aSex - bSex;\r\n\r\n    // Next, sort by Event.\r\n    const aEvent = getEventSortOrder(catA.event);\r\n    const bEvent = getEventSortOrder(catB.event);\r\n    if (aEvent !== bEvent) return aEvent - bEvent;\r\n\r\n    // Finally, sort by Equipment.\r\n    const aEquipment = getEquipmentSortOrder(catA.equipment);\r\n    const bEquipment = getEquipmentSortOrder(catB.equipment);\r\n    if (aEquipment !== bEquipment) return aEquipment - bEquipment;\r\n\r\n    return 0;\r\n  });\r\n};\r\n\r\n// Generates objects representing the various ByPoints categories.\r\n// The returned objects are sorted in intended order of presentation.\r\nexport const getAllRankings = (\r\n  entries: ReadonlyArray<Entry>,\r\n  formula: Formula,\r\n  ageCoefficients: AgeCoefficients,\r\n  combineSleevesAndWraps: boolean,\r\n  inKg: boolean,\r\n  meetDate: string\r\n): Array<PointsCategoryResults> => {\r\n  // Generate a map from category to the entries within that category.\r\n  // The map is populated by iterating over each entry and having the entry\r\n  // append itself to per-category lists.\r\n  const categoryMap = new Map();\r\n  for (let i = 0; i < entries.length; i++) {\r\n    const e = entries[i];\r\n\r\n    // Remember consistent properties.\r\n    const sex = e.sex;\r\n    let equipment: Equipment = e.equipment;\r\n\r\n    // If the results combine Sleeves and Wraps, promote Sleeves to Wraps.\r\n    if (combineSleevesAndWraps && equipment === \"Sleeves\") {\r\n      equipment = \"Wraps\";\r\n    }\r\n\r\n    // Iterate over each event, adding to the map.\r\n    for (let evidx = 0; evidx < e.events.length; evidx++) {\r\n      const event = e.events[evidx];\r\n      const category = { sex, event, equipment };\r\n      const key = categoryToKey(category);\r\n\r\n      const catEntries = categoryMap.get(key);\r\n      catEntries === undefined ? categoryMap.set(key, [e]) : catEntries.push(e);\r\n    }\r\n  }\r\n\r\n  // Iterate over each category and assign a Place to the entries therein.\r\n  const results = [];\r\n  for (const [key, catEntries] of categoryMap) {\r\n    const category = keyToCategory(key);\r\n    const orderedEntries = sortByFormulaPlaceInCategory(catEntries, category, formula, ageCoefficients, inKg, meetDate);\r\n    results.push({ category, orderedEntries });\r\n  }\r\n\r\n  sortPointsCategoryResults(results);\r\n  return results;\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Displays the results by points.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport { getAllRankings } from \"../../logic/pointsPlace\";\r\nimport { getWeightClassStr, getWeightClassLbsStr } from \"../../reducers/meetReducer\";\r\nimport {\r\n  getBest5SquatKg,\r\n  getBest5BenchKg,\r\n  getBest5DeadliftKg,\r\n  getFinalEventTotalKg,\r\n  entryHasLifted,\r\n} from \"../../logic/entry\";\r\nimport { getString, localizeEquipment, localizeEvent, localizeSex } from \"../../logic/strings\";\r\nimport { kg2lbs, displayNumber, displayPoints, displayWeight, displayPlaceOrdinal } from \"../../logic/units\";\r\n\r\nimport { getAgeAdjustedPoints } from \"../../logic/coefficients/coefficients\";\r\n\r\nimport { PointsCategory, PointsCategoryResults } from \"../../logic/pointsPlace\";\r\nimport { AgeCoefficients, Entry, Formula, Language, Sex } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\nimport { fosterMcCulloch } from \"../../logic/coefficients/foster-mcculloch\";\r\n\r\ninterface StateProps {\r\n  inKg: boolean;\r\n  meetName: string;\r\n  meetDate: string;\r\n  formula: Formula;\r\n  combineSleevesAndWraps: boolean;\r\n  lengthDays: number;\r\n  weightClassesKgMen: ReadonlyArray<number>;\r\n  weightClassesKgWomen: ReadonlyArray<number>;\r\n  weightClassesKgMx: ReadonlyArray<number>;\r\n  language: Language;\r\n  entries: ReadonlyArray<Entry>;\r\n}\r\n\r\n// Overloads this component so it can render different types of \"Best Lifter\" categories.\r\nexport type AgePointsCategory = \"BestLifter\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\r\n\r\ninterface OwnProps {\r\n  day: string | number; // Really a number, 0 meaning \"all\".\r\n  ageCoefficients: AgeCoefficients; // In OwnProps so that caller can disable it.\r\n  agePointsCategory: AgePointsCategory;\r\n}\r\n\r\ntype Props = StateProps & OwnProps;\r\n\r\nconst mapSexToClasses = (sex: Sex, props: Props): ReadonlyArray<number> => {\r\n  switch (sex) {\r\n    case \"M\":\r\n      return props.weightClassesKgMen;\r\n    case \"F\":\r\n      return props.weightClassesKgWomen;\r\n    case \"Mx\":\r\n      return props.weightClassesKgMx;\r\n    default:\r\n      checkExhausted(sex);\r\n      return props.weightClassesKgMen;\r\n  }\r\n};\r\n\r\nclass ByPoints extends React.Component<Props> {\r\n  renderEntryRow = (entry: Entry, category: PointsCategory, key: number): JSX.Element | null => {\r\n    // Skip no-show lifters.\r\n    if (!entryHasLifted(entry)) return null;\r\n\r\n    // Skip DQ'd lifters. Meet directors have reported that it's embarrassing\r\n    // to the DQ'd lifter to have that projected.\r\n    const totalKg = getFinalEventTotalKg(entry, category.event);\r\n    if (totalKg === 0) return null;\r\n\r\n    const inKg = this.props.inKg;\r\n    const language = this.props.language;\r\n\r\n    // The place proceeds in order by key, except for guests\r\n    const rank = entry.guest\r\n      ? getString(\"results.lifter-guest\", language)\r\n      : displayPlaceOrdinal(key + 1, entry, language);\r\n\r\n    const points: number = getAgeAdjustedPoints(\r\n      this.props.ageCoefficients,\r\n      this.props.meetDate,\r\n      this.props.formula,\r\n      entry,\r\n      category.event,\r\n      totalKg,\r\n      inKg\r\n    );\r\n\r\n    let pointsStr = \"\";\r\n    if (totalKg !== 0 && points === 0) {\r\n      pointsStr = getString(\"results.value-not-applicable\", language);\r\n    } else if (totalKg !== 0 && points !== 0) {\r\n      pointsStr = displayPoints(points, language);\r\n    }\r\n\r\n    const firstDivision = entry.divisions.length > 0 ? entry.divisions[0] : \"\";\r\n    const numDivisions = entry.divisions.length;\r\n\r\n    const classes = mapSexToClasses(entry.sex, this.props);\r\n    const wtcls = inKg\r\n      ? getWeightClassStr(classes, entry.bodyweightKg, language)\r\n      : getWeightClassLbsStr(classes, entry.bodyweightKg);\r\n    const bw = inKg ? entry.bodyweightKg : kg2lbs(entry.bodyweightKg);\r\n\r\n    const squatKg = getBest5SquatKg(entry);\r\n    const squat = inKg ? squatKg : kg2lbs(squatKg);\r\n\r\n    const benchKg = getBest5BenchKg(entry);\r\n    const bench = inKg ? benchKg : kg2lbs(benchKg);\r\n\r\n    const deadliftKg = getBest5DeadliftKg(entry);\r\n    const deadlift = inKg ? deadliftKg : kg2lbs(deadliftKg);\r\n\r\n    const total = inKg ? totalKg : kg2lbs(totalKg);\r\n\r\n    return (\r\n      <tr key={key}>\r\n        <td>{rank}</td>\r\n        <td>{entry.name}</td>\r\n        <td>{localizeSex(entry.sex, language)}</td>\r\n        <td>\r\n          {firstDivision} {numDivisions > 1 ? \"(+\" + (numDivisions - 1) + \")\" : \"\"}\r\n        </td>\r\n        <td>{localizeEquipment(entry.equipment, language)}</td>\r\n        <td>{entry.bodyweightKg === 0 ? null : wtcls}</td>\r\n        <td>{entry.bodyweightKg === 0 ? null : displayWeight(bw, language)}</td>\r\n        <td>{entry.age === 0 ? null : displayNumber(entry.age, language)}</td>\r\n        <td>{squatKg === 0 ? \"\" : displayWeight(squat, language)}</td>\r\n        <td>{benchKg === 0 ? \"\" : displayWeight(bench, language)}</td>\r\n        <td>{deadliftKg === 0 ? \"\" : displayWeight(deadlift, language)}</td>\r\n        <td>{totalKg === 0 ? \"\" : displayWeight(total, language)}</td>\r\n        <td>{pointsStr}</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  mapSexToLabel = (sex: Sex, language: Language): string => {\r\n    switch (sex) {\r\n      case \"M\":\r\n        return getString(\"results.mens\", language);\r\n      case \"F\":\r\n        return getString(\"results.womens\", language);\r\n      case \"Mx\":\r\n        return getString(\"results.mxs\", language);\r\n      default:\r\n        checkExhausted(sex);\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  renderCategoryResults = (results: PointsCategoryResults, key: number): JSX.Element | null => {\r\n    const { category, orderedEntries } = results;\r\n    const language = this.props.language;\r\n    const sex: string = this.mapSexToLabel(category.sex, language);\r\n\r\n    // Gather rows.\r\n    const rows = [];\r\n    for (let i = 0; i < orderedEntries.length; i++) {\r\n      const row = this.renderEntryRow(orderedEntries[i], category, i);\r\n      if (row !== null) {\r\n        rows.push(row);\r\n      }\r\n    }\r\n\r\n    // If all lifters were No-Show, skip displaying this category.\r\n    if (rows.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let eqpstr: string = localizeEquipment(category.equipment, language);\r\n    if (this.props.combineSleevesAndWraps && (category.equipment === \"Sleeves\" || category.equipment === \"Wraps\")) {\r\n      eqpstr = getString(\"results.combined-sleeves-wraps\", language);\r\n    }\r\n\r\n    const template = getString(\"results.category-template\", language);\r\n    const categoryString = template\r\n      .replace(\"{sex}\", sex)\r\n      .replace(\"{equipment}\", eqpstr)\r\n      .replace(\"{event}\", localizeEvent(category.event, language));\r\n\r\n    return (\r\n      <Card key={key} style={{ marginTop: \"17px\" }}>\r\n        <Card.Header>{categoryString}</Card.Header>\r\n        <Card.Body>\r\n          <Table striped hover size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>{getString(\"results.column-rank\", language)}</th>\r\n                <th>{getString(\"lifting.column-lifter\", language)}</th>\r\n                <th>{getString(\"results.column-sex\", language)}</th>\r\n                <th>{getString(\"lifting.column-division\", language)}</th>\r\n                <th>{getString(\"results.column-equipment\", language)}</th>\r\n                <th>{getString(\"lifting.column-weightclass\", language)}</th>\r\n                <th>{getString(\"lifting.column-bodyweight\", language)}</th>\r\n                <th>{getString(\"lifting.column-age\", language)}</th>\r\n                <th>{getString(\"flight-order.squat-column-header\", language)}</th>\r\n                <th>{getString(\"flight-order.bench-column-header\", language)}</th>\r\n                <th>{getString(\"flight-order.deadlift-column-header\", language)}</th>\r\n                <th>{getString(\"lifting.column-finaltotal\", language)}</th>\r\n                <th>\r\n                  {this.props.ageCoefficients === \"None\"\r\n                    ? getString(\"lifting.column-finalpoints\", language)\r\n                    : getString(\"results.column-age-points\", language)}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{rows}</tbody>\r\n          </Table>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let entries = this.props.entries;\r\n\r\n    // If this is for Best Masters lifter, just include non-standard-aged lifters.\r\n    if (this.props.agePointsCategory !== \"BestLifter\") {\r\n      entries = entries.filter((e) => {\r\n        // Filter out based on age.\r\n        switch (this.props.agePointsCategory) {\r\n          case \"BestLifter\":\r\n            break;\r\n          case \"BestMastersLifter\":\r\n            // The coefficients logic below will handle older lifters\r\n            // according to the chosen age coefficient system.\r\n            if (e.age <= 27) {\r\n              return false;\r\n            }\r\n            break;\r\n          case \"BestJuniorsLifter\":\r\n            // The coefficients logic below will handle older lifters\r\n            // according to the chosen age coefficient system.\r\n            if (e.age >= 27) {\r\n              return false;\r\n            }\r\n            break;\r\n          default:\r\n            checkExhausted(this.props.agePointsCategory);\r\n            break;\r\n        }\r\n\r\n        // Only include lifters who get an age bump.\r\n        switch (this.props.ageCoefficients) {\r\n          case \"None\":\r\n            return true;\r\n          case \"FosterMcCulloch\":\r\n            return fosterMcCulloch(e.age) !== 1.0;\r\n          default:\r\n            checkExhausted(this.props.ageCoefficients);\r\n            return true;\r\n        }\r\n      });\r\n    }\r\n\r\n    const results = getAllRankings(\r\n      entries,\r\n      this.props.formula,\r\n      this.props.ageCoefficients,\r\n      this.props.combineSleevesAndWraps,\r\n      this.props.inKg,\r\n      this.props.meetDate\r\n    );\r\n\r\n    const categoryCards = [];\r\n    for (let i = 0; i < results.length; i++) {\r\n      const panel = this.renderCategoryResults(results[i], i);\r\n      if (panel !== null) {\r\n        categoryCards.push(panel);\r\n      }\r\n    }\r\n\r\n    return <div>{categoryCards}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: OwnProps): StateProps => {\r\n  const day = Number(ownProps.day);\r\n  let entries = state.registration.entries;\r\n  if (day > 0) {\r\n    entries = entries.filter((e) => e.day === day);\r\n  }\r\n\r\n  return {\r\n    inKg: state.meet.inKg,\r\n    meetName: state.meet.name,\r\n    meetDate: state.meet.date,\r\n    formula: state.meet.formula,\r\n    combineSleevesAndWraps: state.meet.combineSleevesAndWraps,\r\n    lengthDays: state.meet.lengthDays,\r\n    weightClassesKgMen: state.meet.weightClassesKgMen,\r\n    weightClassesKgWomen: state.meet.weightClassesKgWomen,\r\n    weightClassesKgMx: state.meet.weightClassesKgMx,\r\n    language: state.language,\r\n    entries: entries,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ByPoints);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Exports data to a CSV format easily importable by OpenPowerlifting.\r\n\r\nimport { csvDate, csvString, Csv } from \"./csv\";\r\nimport { getFinalResults } from \"../divisionPlace\";\r\nimport { getPoints } from \"../coefficients/coefficients\";\r\nimport { wtclsStrKg2Lbs } from \"../../reducers/meetReducer\";\r\nimport {\r\n  getAge,\r\n  getBest3SquatKg,\r\n  getBest3BenchKg,\r\n  getBest3DeadliftKg,\r\n  getFinalEventTotalKg,\r\n  entryHasLifted,\r\n  MAX_ATTEMPTS,\r\n} from \"../entry\";\r\nimport { displayPoints, displayWeight, kg2lbs } from \"../units\";\r\n\r\nimport { Category, CategoryResults } from \"../divisionPlace\";\r\nimport { Entry, Equipment, Formula } from \"../../types/dataTypes\";\r\nimport { GlobalState, MeetState } from \"../../types/stateTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\nconst makeMeetCsv = (meet: MeetState): Csv => {\r\n  const csv = new Csv();\r\n  csv.fieldnames = [\"Federation\", \"Date\", \"MeetCountry\", \"MeetState\", \"MeetTown\", \"MeetName\", \"Formula\"];\r\n\r\n  const row: Array<string> = [\r\n    csvString(meet.federation),\r\n    csvDate(meet.date),\r\n    csvString(meet.country),\r\n    csvString(meet.state),\r\n    csvString(meet.city),\r\n    csvString(meet.name),\r\n    csvString(meet.formula),\r\n  ];\r\n  csv.rows = [row];\r\n\r\n  // An optional RuleSet column may be provided.\r\n  if (meet.combineSleevesAndWraps === true) {\r\n    csv.fieldnames.push(\"RuleSet\");\r\n    csv.rows[0].push(\"CombineRawAndWraps\");\r\n  }\r\n\r\n  return csv;\r\n};\r\n\r\nconst standardizeEquipment = (eq: Equipment): string => {\r\n  switch (eq) {\r\n    case \"Bare\":\r\n      return \"Raw\";\r\n    case \"Sleeves\":\r\n      return \"Raw\";\r\n    case \"Wraps\":\r\n      return \"Wraps\";\r\n    case \"Single-ply\":\r\n      return \"Single-ply\";\r\n    case \"Multi-ply\":\r\n      return \"Multi-ply\";\r\n    case \"Unlimited\":\r\n      return \"Unlimited\";\r\n    default:\r\n      checkExhausted(eq);\r\n      return \"Raw\";\r\n  }\r\n};\r\n\r\nconst addEntriesRow = (\r\n  csv: Csv,\r\n  category: Category,\r\n  inKg: boolean,\r\n  meetDate: string,\r\n  formula: Formula,\r\n  entry: Entry,\r\n  index: number\r\n) => {\r\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\r\n  const finalEventTotalKg = getFinalEventTotalKg(entry, category.event);\r\n\r\n  // Helper functions to keep things one-liners below. Handles Kg/Lbs conversion.\r\n  const weight = (kg: number): string => {\r\n    return displayWeight(inKg ? kg : kg2lbs(kg));\r\n  };\r\n  const wtcls = (cls: string): string => {\r\n    return inKg ? cls : wtclsStrKg2Lbs(cls);\r\n  };\r\n\r\n  // Initialize an empty row with all columns available.\r\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\r\n\r\n  if (!entryHasLifted(entry)) {\r\n    row[csv.index(\"Place\")] = \"NS\"; // No-Show.\r\n  } else if (entry.guest) {\r\n    row[csv.index(\"Place\")] = \"G\"; // Guest\r\n  } else {\r\n    row[csv.index(\"Place\")] = finalEventTotalKg === 0 ? \"DQ\" : csvString(index + 1);\r\n  }\r\n\r\n  row[csv.index(\"Name\")] = csvString(entry.name);\r\n  row[csv.index(\"Instagram\")] = csvString(entry.instagram);\r\n  row[csv.index(\"Sex\")] = csvString(entry.sex);\r\n  row[csv.index(\"BirthDate\")] = csvDate(entry.birthDate);\r\n  row[csv.index(\"Age\")] = csvString(getAge(entry, meetDate));\r\n  row[csv.index(\"Country\")] = csvString(entry.country);\r\n  row[csv.index(\"State\")] = csvString(entry.state);\r\n  row[csv.index(\"Equipment\")] = csvString(standardizeEquipment(entry.equipment));\r\n  row[csv.index(\"Division\")] = csvString(category.division);\r\n  row[csv.index(\"Bodyweight\" + unit)] = csvString(weight(entry.bodyweightKg));\r\n  row[csv.index(\"WeightClass\" + unit)] = csvString(wtcls(category.weightClassStr));\r\n  row[csv.index(\"Total\" + unit)] = csvString(weight(finalEventTotalKg));\r\n  row[csv.index(\"Event\")] = csvString(category.event);\r\n  row[csv.index(\"Team\")] = csvString(entry.team);\r\n\r\n  // Squat.\r\n  if (category.event.includes(\"S\")) {\r\n    row[csv.index(\"Best3Squat\" + unit)] = csvString(weight(getBest3SquatKg(entry)));\r\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n      const field = \"Squat\" + (i + 1) + unit;\r\n      row[csv.index(field)] = csvString(weight(entry.squatKg[i] * entry.squatStatus[i]));\r\n    }\r\n  }\r\n\r\n  // Bench.\r\n  if (category.event.includes(\"B\")) {\r\n    row[csv.index(\"Best3Bench\" + unit)] = csvString(weight(getBest3BenchKg(entry)));\r\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n      const field = \"Bench\" + (i + 1) + unit;\r\n      row[csv.index(field)] = csvString(weight(entry.benchKg[i] * entry.benchStatus[i]));\r\n    }\r\n  }\r\n\r\n  // Deadlift.\r\n  if (category.event.includes(\"D\")) {\r\n    row[csv.index(\"Best3Deadlift\" + unit)] = csvString(weight(getBest3DeadliftKg(entry)));\r\n    for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n      const field = \"Deadlift\" + (i + 1) + unit;\r\n      row[csv.index(field)] = csvString(weight(entry.deadliftKg[i] * entry.deadliftStatus[i]));\r\n    }\r\n  }\r\n\r\n  // Points. OpenPowerlifting does not use this column, but people have asked for it.\r\n  const points = getPoints(formula, entry, category.event, finalEventTotalKg, inKg);\r\n  row[csv.index(\"Points\")] = csvString(points === 0 ? \"\" : displayPoints(points, \"en\"));\r\n\r\n  csv.rows.push(row);\r\n};\r\n\r\nconst makeEntriesCsv = (state: GlobalState): Csv => {\r\n  const inKg: boolean = state.meet.inKg;\r\n  const unit: string = inKg ? \"Kg\" : \"LBS\";\r\n\r\n  const csv = new Csv();\r\n\r\n  const squatFieldnames = [];\r\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n    squatFieldnames.push(\"Squat\" + (i + 1) + unit);\r\n  }\r\n  squatFieldnames.push(\"Best3Squat\" + unit);\r\n\r\n  const benchFieldnames = [];\r\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n    benchFieldnames.push(\"Bench\" + (i + 1) + unit);\r\n  }\r\n  benchFieldnames.push(\"Best3Bench\" + unit);\r\n\r\n  const deadliftFieldnames = [];\r\n  for (let i = 0; i < MAX_ATTEMPTS; i++) {\r\n    deadliftFieldnames.push(\"Deadlift\" + (i + 1) + unit);\r\n  }\r\n  deadliftFieldnames.push(\"Best3Deadlift\" + unit);\r\n\r\n  csv.fieldnames = Array.prototype.concat(\r\n    [\"Place\", \"Name\", \"Instagram\", \"Sex\", \"BirthDate\", \"Age\", \"Country\", \"State\"],\r\n    [\"Equipment\", \"Division\", \"Bodyweight\" + unit, \"WeightClass\" + unit],\r\n    squatFieldnames,\r\n    benchFieldnames,\r\n    deadliftFieldnames,\r\n    [\"Total\" + unit, \"Points\", \"Event\", \"Team\"]\r\n  );\r\n\r\n  const results: Array<CategoryResults> = getFinalResults(\r\n    state.registration.entries,\r\n    state.meet.weightClassesKgMen,\r\n    state.meet.weightClassesKgWomen,\r\n    state.meet.weightClassesKgMx,\r\n    state.meet.combineSleevesAndWraps\r\n  );\r\n\r\n  const meet_date = state.meet.date;\r\n  const formula: Formula = state.meet.formula;\r\n\r\n  for (let i = 0; i < results.length; i++) {\r\n    const { category, orderedEntries } = results[i];\r\n\r\n    for (let j = 0; j < orderedEntries.length; j++) {\r\n      addEntriesRow(csv, category, inKg, meet_date, formula, orderedEntries[j], j);\r\n    }\r\n  }\r\n\r\n  return csv;\r\n};\r\n\r\nexport const exportAsOplCsv = (state: GlobalState): string => {\r\n  const meetCsv: Csv = makeMeetCsv(state.meet);\r\n\r\n  const entriesCsv: Csv = makeEntriesCsv(state);\r\n  entriesCsv.removeEmptyColumns();\r\n\r\n  const versionStr = \"OPL Format v1,Submit by email:,issues@openpowerlifting.org\";\r\n\r\n  return versionStr + \"\\n\\n\" + meetCsv.toString() + \"\\n\" + entriesCsv.toString();\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Exports data to a spreadsheet format used by the USAPL.\r\n\r\nimport { csvString, Csv } from \"./csv\";\r\nimport { getFinalResults } from \"../divisionPlace\";\r\nimport { displayWeight } from \"../units\";\r\n\r\nimport { Category, CategoryResults } from \"../divisionPlace\";\r\nimport { Entry, Event } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { checkExhausted } from \"../../types/utils\";\r\n\r\n// Translates the event from our format to the NextLifter format.\r\nconst translateEvent = (ev: Event): string => {\r\n  switch (ev) {\r\n    // Variants present in the NextLifter software.\r\n    case \"SBD\":\r\n      return \"PL\";\r\n    case \"BD\":\r\n      return \"PP\";\r\n    case \"S\":\r\n      return \"SQ\";\r\n    case \"B\":\r\n      return \"BP\";\r\n    case \"D\":\r\n      return \"DL\";\r\n\r\n    // These variants aren't selectable in NextLifter, so the USAPL doesn't use them.\r\n    case \"SB\":\r\n      return \"SB\";\r\n    case \"SD\":\r\n      return \"SD\";\r\n    default:\r\n      checkExhausted(ev);\r\n      return ev;\r\n  }\r\n};\r\n\r\n// Converts the ISO8601 entry.birthDate to USAPL MM/DD/YYYY format.\r\nconst makeBirthDate = (entry: Entry): string => {\r\n  if (entry.birthDate === undefined || entry.birthDate === \"\") {\r\n    return \"\";\r\n  }\r\n  const [year, month, day]: Array<string> = entry.birthDate.split(\"-\");\r\n  return month + \"/\" + day + \"/\" + year;\r\n};\r\n\r\n// Given an Entry and its index in the CategoryResults.orderedEntries,\r\n// render all that information as a one-liner CSV string.\r\nconst addDataRow = (csv: Csv, category: Category, entry: Entry): void => {\r\n  const hasSquat: boolean = category.event.includes(\"S\");\r\n  const hasBench: boolean = category.event.includes(\"B\");\r\n  const hasDL: boolean = category.event.includes(\"D\");\r\n\r\n  // Initialize an empty row with all columns available.\r\n  const row: Array<string> = Array(csv.fieldnames.length).fill(\"\");\r\n\r\n  row[csv.index(\"Name\")] = csvString(entry.name);\r\n  row[csv.index(\"Team\")] = csvString(entry.team);\r\n  row[csv.index(\"Div\")] = csvString(category.division);\r\n  row[csv.index(\"Bwt - kg\")] = csvString(displayWeight(entry.bodyweightKg));\r\n  row[csv.index(\"IPF Wt Cls\")] = csvString(category.weightClassStr);\r\n  row[csv.index(\"DOB\")] = csvString(makeBirthDate(entry));\r\n  row[csv.index(\"Squat 1\")] = csvString(displayWeight(hasSquat ? entry.squatKg[0] * entry.squatStatus[0] : 0));\r\n  row[csv.index(\"Squat 2\")] = csvString(displayWeight(hasSquat ? entry.squatKg[1] * entry.squatStatus[1] : 0));\r\n  row[csv.index(\"Squat 3\")] = csvString(displayWeight(hasSquat ? entry.squatKg[2] * entry.squatStatus[2] : 0));\r\n  row[csv.index(\"Bench 1\")] = csvString(displayWeight(hasBench ? entry.benchKg[0] * entry.benchStatus[0] : 0));\r\n  row[csv.index(\"Bench 2\")] = csvString(displayWeight(hasBench ? entry.benchKg[1] * entry.benchStatus[1] : 0));\r\n  row[csv.index(\"Bench 3\")] = csvString(displayWeight(hasBench ? entry.benchKg[2] * entry.benchStatus[2] : 0));\r\n  row[csv.index(\"Deadlift 1\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[0] * entry.deadliftStatus[0] : 0));\r\n  row[csv.index(\"Deadlift 2\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[1] * entry.deadliftStatus[1] : 0));\r\n  row[csv.index(\"Deadlift 3\")] = csvString(displayWeight(hasDL ? entry.deadliftKg[2] * entry.deadliftStatus[2] : 0));\r\n  row[csv.index(\"Event\")] = csvString(translateEvent(category.event));\r\n  row[csv.index(\"State\")] = csvString(entry.state);\r\n  row[csv.index(\"MemberID\")] = csvString(entry.memberId);\r\n  // TODO: Drug Test.\r\n\r\n  csv.rows.push(row);\r\n};\r\n\r\nexport const exportAsUSAPLCsv = (state: GlobalState): string => {\r\n  const csv = new Csv();\r\n  csv.fieldnames = [\r\n    \"Name\",\r\n    \"Team\",\r\n    \"Div\", // Division.\r\n    \"Bwt - kg\", // Bodyweight, kg.\r\n    \"IPF Wt Cls\", // IPF Weight Class (SHW as \"120+\", same format).\r\n    \"DOB\", // Date of Birth, in MM/DD/YYYY format.\r\n    \"Squat 1\", // Units unspecified, but seem to be kg.\r\n    \"Squat 2\",\r\n    \"Squat 3\",\r\n    \"Bench 1\",\r\n    \"Bench 2\",\r\n    \"Bench 3\",\r\n    \"Deadlift 1\",\r\n    \"Deadlift 2\",\r\n    \"Deadlift 3\",\r\n    \"Event\", // In NextLifter format (PL, BO, etc.).\r\n    \"State\", // USA state of residence of the lifter, as abbreviation.\r\n    \"MemberID\",\r\n    \"Drug Test\", // \"Y\" if a test was performed, blank otherwise.\r\n  ];\r\n\r\n  const results: Array<CategoryResults> = getFinalResults(\r\n    state.registration.entries,\r\n    state.meet.weightClassesKgMen,\r\n    state.meet.weightClassesKgWomen,\r\n    state.meet.weightClassesKgMx,\r\n    state.meet.combineSleevesAndWraps\r\n  );\r\n\r\n  for (let i = 0; i < results.length; i++) {\r\n    const { category, orderedEntries } = results[i];\r\n\r\n    for (let j = 0; j < orderedEntries.length; j++) {\r\n      addDataRow(csv, category, orderedEntries[j]);\r\n    }\r\n  }\r\n\r\n  return csv.toString();\r\n};\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The parent component of the Results page, contained by the ResultsContainer.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\nimport { saveAs } from \"file-saver\";\r\n\r\nimport ByDivision from \"./ByDivision\";\r\nimport ByPoints from \"./ByPoints\";\r\nimport ErrorModal from \"../ErrorModal\";\r\n\r\nimport { mergePlatform } from \"../../actions/registrationActions\";\r\n\r\nimport { liftingPresentOnPlatform, getWhetherPlatformsHaveLifted } from \"../../logic/entry\";\r\nimport { getString } from \"../../logic/strings\";\r\nimport { exportAsOplCsv } from \"../../logic/export/oplcsv\";\r\nimport { exportAsUSAPLCsv } from \"../../logic/export/usapl\";\r\n\r\nimport { Entry, Language } from \"../../types/dataTypes\";\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\nimport styles from \"./ResultsView.module.scss\";\r\nimport { FormControlTypeHack, checkExhausted, assertString } from \"../../types/utils\";\r\nimport { Dispatch } from \"redux\";\r\n\r\ntype ResultsBy = \"Division\" | \"Points\" | \"BestMastersLifter\" | \"BestJuniorsLifter\";\r\n\r\nconst assertValidResultsBy = (value: string): value is ResultsBy => {\r\n  const resultsBy = value as ResultsBy;\r\n  switch (resultsBy) {\r\n    case \"BestJuniorsLifter\":\r\n    case \"BestMastersLifter\":\r\n    case \"Division\":\r\n    case \"Points\":\r\n      return true;\r\n    default:\r\n      checkExhausted(resultsBy);\r\n      throw new Error(`Expected a valid value for ResultsBy. Got \"${value}\"`);\r\n  }\r\n};\r\n\r\ninterface StateProps {\r\n  global: GlobalState;\r\n  language: Language;\r\n}\r\n\r\ninterface DispatchProps {\r\n  mergePlatform: (day: number, platform: number, platformEntries: Array<Entry>) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\ninterface InternalState {\r\n  day: number;\r\n  by: ResultsBy;\r\n  // Controls the ErrorModal popup. Shown when error !== \"\".\r\n  error: string;\r\n}\r\n\r\n// FIXME: Unfortunate use of globals :/ I don't have a better idea.\r\n// This is to pass information from the merge button click handler to the\r\n// file loader click handler.\r\nlet globalMergeDay: number = 0;\r\nlet globalMergePlatform: number = 0;\r\n\r\nclass ResultsView extends React.Component<Props, InternalState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.handleDayChange = this.handleDayChange.bind(this);\r\n    this.handleByChange = this.handleByChange.bind(this);\r\n    this.handleExportAsOplCsvClick = this.handleExportAsOplCsvClick.bind(this);\r\n    this.handleExportAsUSAPLCsvClick = this.handleExportAsUSAPLCsvClick.bind(this);\r\n    this.handleExportPlatformClick = this.handleExportPlatformClick.bind(this);\r\n    this.handleMergePlatformClick = this.handleMergePlatformClick.bind(this);\r\n    this.handleLoadFileInput = this.handleLoadFileInput.bind(this);\r\n    this.closeErrorModal = this.closeErrorModal.bind(this);\r\n    this.makePlatformMergeButtons = this.makePlatformMergeButtons.bind(this);\r\n\r\n    this.state = {\r\n      day: 0, // Meaning \"all\". Flow complained about mixing numbers and strings.\r\n      by: \"Division\",\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  makeDayOptions = () => {\r\n    const language = this.props.language;\r\n    const options = [\r\n      <option key={\"all\"} value={0}>\r\n        {getString(\"results.all-days-together\", language)}\r\n      </option>,\r\n    ];\r\n\r\n    const justDayTemplate = getString(\"results.just-day-n\", language);\r\n    for (let day = 1; day <= this.props.global.meet.lengthDays; day++) {\r\n      options.push(\r\n        <option key={day} value={day}>\r\n          {justDayTemplate.replace(\"{N}\", String(day))}\r\n        </option>\r\n      );\r\n    }\r\n    return options;\r\n  };\r\n\r\n  handleDayChange = (event: React.FormEvent<FormControlTypeHack>) => {\r\n    const day = Number(event.currentTarget.value);\r\n    if (this.state.day !== day) {\r\n      this.setState({ day: day });\r\n    }\r\n  };\r\n\r\n  handleByChange = (event: React.FormEvent<FormControlTypeHack>) => {\r\n    const by = event.currentTarget.value;\r\n    if (this.state.by !== by && assertString(by) && assertValidResultsBy(by)) {\r\n      this.setState({ by: by });\r\n    }\r\n  };\r\n\r\n  handleExportAsOplCsvClick = () => {\r\n    // TODO: Share this logic with HomeContainer.\r\n    let meetname = this.props.global.meet.name;\r\n    if (meetname === \"\") {\r\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\r\n    }\r\n    meetname = meetname.replace(/ /g, \"-\");\r\n\r\n    const csv: string = exportAsOplCsv(this.props.global);\r\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\r\n    saveAs(blob, meetname + \".opl.csv\");\r\n  };\r\n\r\n  handleExportAsUSAPLCsvClick = () => {\r\n    // TODO: Share this logic with handleExportAsOplCsvClick.\r\n    let meetname = this.props.global.meet.name;\r\n    if (meetname === \"\") {\r\n      meetname = getString(\"common.unnamed-filename\", this.props.language);\r\n    }\r\n    meetname = meetname.replace(/ /g, \"-\");\r\n\r\n    const csv: string = exportAsUSAPLCsv(this.props.global);\r\n    const blob = new Blob([csv], { type: \"text/csv;charset=utf-8\" });\r\n    saveAs(blob, meetname + \".USAPL.csv\");\r\n  };\r\n\r\n  handleExportPlatformClick = (day: number, platform: number) => {\r\n    // TODO: Share this logic with handleExportAsOplCsvClick.\r\n    const language = this.props.language;\r\n    let meetname = this.props.global.meet.name;\r\n    if (meetname === \"\") {\r\n      meetname = getString(\"common.unnamed-filename\", language);\r\n    }\r\n    meetname = meetname.replace(/ /g, \"-\");\r\n\r\n    const template = getString(\"results.platform-export-filename\", language);\r\n    const exportname = template\r\n      .replace(\"{day}\", String(day))\r\n      .replace(\"{platform}\", String(platform))\r\n      .replace(\"{meetName}\", meetname);\r\n\r\n    const state = JSON.stringify(this.props.global);\r\n    const blob = new Blob([state], { type: \"application/json;charset=utf-8\" });\r\n    saveAs(blob, exportname + \".export.openlifter\");\r\n  };\r\n\r\n  // The file input is hidden, and we want to use a button to activate it.\r\n  // This event handler makes a proxy call to the *real* event handler.\r\n  handleMergePlatformClick = (day: number, platform: number) => {\r\n    const loadHelper = document.getElementById(\"loadhelper\");\r\n    if (loadHelper !== null) {\r\n      globalMergeDay = day;\r\n      globalMergePlatform = platform;\r\n      loadHelper.click();\r\n    }\r\n  };\r\n\r\n  // Called when a file is selected for merging platform data.\r\n  handleLoadFileInput = () => {\r\n    const loadHelper = document.getElementById(\"loadhelper\");\r\n    if (loadHelper === null || !(loadHelper instanceof HTMLInputElement) || loadHelper.files === null) {\r\n      return;\r\n    }\r\n\r\n    // Get the (day, platform) from global state.\r\n    const day: number = globalMergeDay;\r\n    const platform: number = globalMergePlatform;\r\n\r\n    // Remember the props in the onload() closure.\r\n    const props = this.props;\r\n    const language = props.language;\r\n\r\n    const rememberThis = this;\r\n    const selectedFile = loadHelper.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      let error: string | null = null;\r\n\r\n      // If this occurs, we've introduced a bug when initiating the file reader, or the read failed.\r\n      // Add this check as a guard so the typing is narrowed\r\n      if (typeof reader.result !== \"string\") {\r\n        window.alert(getString(\"error.internal-error\", language));\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const obj: GlobalState = JSON.parse(reader.result);\r\n\r\n        // stateVersion must match.\r\n        if (obj.versions.stateVersion !== props.global.versions.stateVersion) {\r\n          const e = getString(\"error.version-mismatch\", language);\r\n          error = e\r\n            .replace(\"{thisVersion}\", props.global.versions.stateVersion)\r\n            .replace(\"{otherVersion}\", obj.versions.stateVersion);\r\n        } else if (obj.meet.name !== props.global.meet.name) {\r\n          // The meet name must match, for sanity checking.\r\n          const e = getString(\"error.meetname-mismatch\", language);\r\n          error = e.replace(\"{thisName}\", props.global.meet.name).replace(\"{otherName}\", obj.meet.name);\r\n        } else if (!liftingPresentOnPlatform(obj.registration.entries, day, platform)) {\r\n          // The meet must actually contain data from the given (day, platform).\r\n          const e = getString(\"error.no-platform-data\", language);\r\n          error = e.replace(\"{day}\", String(day)).replace(\"{platform}\", String(platform));\r\n        } else {\r\n          // Sanity checks passed: fire off a mergePlatform action!\r\n          const platformEntries = obj.registration.entries.filter((e) => {\r\n            return e.day === day && e.platform === platform;\r\n          });\r\n          props.mergePlatform(day, platform, platformEntries);\r\n        }\r\n      } catch (err) {\r\n        error = getString(\"error.not-json\", language);\r\n      }\r\n\r\n      if (typeof error === \"string\") {\r\n        rememberThis.setState({ error: error });\r\n      }\r\n    };\r\n    reader.readAsText(selectedFile);\r\n  };\r\n\r\n  closeErrorModal = () => {\r\n    this.setState({ error: \"\" });\r\n  };\r\n\r\n  makePlatformMergeButtons = () => {\r\n    // Array accessed by platformsHaveLifted[day-1][platform-1].\r\n    const platformsHaveLifted: Array<Array<boolean>> = getWhetherPlatformsHaveLifted(\r\n      this.props.global.meet.platformsOnDays,\r\n      this.props.global.registration.entries\r\n    );\r\n\r\n    const language = this.props.language;\r\n    const combineTemplate = getString(\"results.combine-platforms-header\", language);\r\n    const mergeTemplate = getString(\"results.merge-platform\", language);\r\n    const exportTemplate = getString(\"results.export-platform\", language);\r\n\r\n    const forms = [];\r\n    const numDays = Math.min(this.props.global.meet.lengthDays, platformsHaveLifted.length);\r\n\r\n    for (let i = 0; i < numDays; i++) {\r\n      const liftedOnDay = platformsHaveLifted[i];\r\n\r\n      const buttons = [];\r\n      for (let j = 0; j < liftedOnDay.length; j++) {\r\n        const lifted = liftedOnDay[j];\r\n        const variant = lifted === true ? \"success\" : \"warning\";\r\n        const marginStyle = j > 0 ? { marginLeft: \"14px\" } : undefined;\r\n\r\n        const actionTemplate = lifted === true ? exportTemplate : mergeTemplate;\r\n        buttons.push(\r\n          <Button\r\n            key={i + \"-\" + j}\r\n            variant={variant}\r\n            style={marginStyle}\r\n            onClick={() => {\r\n              lifted === true\r\n                ? this.handleExportPlatformClick(i + 1, j + 1)\r\n                : this.handleMergePlatformClick(i + 1, j + 1);\r\n            }}\r\n          >\r\n            {actionTemplate.replace(\"{day}\", String(i + 1)).replace(\"{platform}\", String(j + 1))}\r\n          </Button>\r\n        );\r\n      }\r\n\r\n      forms.push(\r\n        <div key={i}>\r\n          <div>{combineTemplate.replace(\"{N}\", String(i + 1))}</div>\r\n          <div>{buttons}</div>\r\n          {i < platformsHaveLifted.length - 1 ? <br /> : null}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return forms;\r\n  };\r\n\r\n  render() {\r\n    const language = this.props.language;\r\n    let results = null;\r\n    switch (this.state.by) {\r\n      case \"Division\":\r\n        results = <ByDivision key={this.state.day} day={this.state.day} />;\r\n        break;\r\n      case \"Points\":\r\n        results = (\r\n          <ByPoints key={this.state.day} day={this.state.day} ageCoefficients=\"None\" agePointsCategory=\"BestLifter\" />\r\n        );\r\n        break;\r\n      case \"BestMastersLifter\":\r\n        results = (\r\n          <ByPoints\r\n            key={this.state.day}\r\n            day={this.state.day}\r\n            ageCoefficients={this.props.global.meet.ageCoefficients}\r\n            agePointsCategory=\"BestMastersLifter\"\r\n          />\r\n        );\r\n        break;\r\n      case \"BestJuniorsLifter\":\r\n        results = (\r\n          <ByPoints\r\n            key={this.state.day}\r\n            day={this.state.day}\r\n            ageCoefficients={this.props.global.meet.ageCoefficients}\r\n            agePointsCategory=\"BestJuniorsLifter\"\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    let daySelector = null;\r\n    if (this.props.global.meet.lengthDays > 1) {\r\n      daySelector = (\r\n        <FormControl\r\n          value={this.state.day.toString()}\r\n          as=\"select\"\r\n          onChange={this.handleDayChange}\r\n          className={`custom-select ${styles.dropdown}`}\r\n          style={{ marginRight: \"15px\" }}\r\n        >\r\n          {this.makeDayOptions()}\r\n        </FormControl>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ErrorModal\r\n          error={this.state.error}\r\n          title={getString(\"results.merge-error-title\", language)}\r\n          show={this.state.error !== \"\"}\r\n          close={this.closeErrorModal}\r\n        />\r\n\r\n        <CardDeck>\r\n          <Card style={{ marginBottom: \"17px\" }}>\r\n            <Card.Header>\r\n              <FormattedMessage id=\"results.merge-platforms-card-header\" defaultMessage=\"Merge Platforms\" />\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div style={{ fontWeight: \"bold\" }}>\r\n                <FormattedMessage\r\n                  id=\"results.merge-platforms-warning\"\r\n                  defaultMessage=\"Merging platforms will overwrite data. Please save before merging.\"\r\n                />\r\n              </div>\r\n              <br />\r\n              {this.makePlatformMergeButtons()}\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card style={{ marginBottom: \"17px\" }}>\r\n            <Card.Header>\r\n              <FormattedMessage id=\"results.export-results-card-header\" defaultMessage=\"Export Official Results\" />\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Button onClick={this.handleExportAsOplCsvClick}>\r\n                <FormattedMessage\r\n                  id=\"results.export-openpowerlifting-button\"\r\n                  defaultMessage=\"Export for OpenPowerlifting\"\r\n                />\r\n              </Button>\r\n\r\n              <Button onClick={this.handleExportAsUSAPLCsvClick} style={{ marginLeft: \"14px\" }}>\r\n                <FormattedMessage id=\"results.export-usapl-button\" defaultMessage=\"Export for USAPL\" />\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </CardDeck>\r\n\r\n        <Card>\r\n          <Card.Header>\r\n            <FormattedMessage id=\"results.results-card-header\" defaultMessage=\"Results For...\" />\r\n          </Card.Header>\r\n          <Card.Body className={styles.controlCard}>\r\n            {daySelector}\r\n\r\n            <FormControl\r\n              value={this.state.by}\r\n              as=\"select\"\r\n              onChange={this.handleByChange}\r\n              className={`custom-select ${styles.dropdown}`}\r\n            >\r\n              <option value=\"Division\">{getString(\"results.by-division\", language)}</option>\r\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\r\n                <option value=\"BestJuniorsLifter\">{getString(\"results.best-juniors-lifter\", language)}</option>\r\n              ) : null}\r\n              {this.props.global.meet.ageCoefficients !== \"None\" ? (\r\n                <option value=\"BestMastersLifter\">{getString(\"results.best-masters-lifter\", language)}</option>\r\n              ) : null}\r\n              <option value=\"Points\">{getString(\"results.best-lifter\", language)}</option>\r\n            </FormControl>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        {results}\r\n\r\n        <input\r\n          id=\"loadhelper\"\r\n          type=\"file\"\r\n          accept=\".openlifter,.openlifter.txt\"\r\n          style={{ display: \"none\" }}\r\n          onChange={this.handleLoadFileInput}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => {\r\n  return {\r\n    global: state,\r\n    language: state.language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    mergePlatform: (day, platform, platformEntries) => dispatch(mergePlatform(day, platform, platformEntries)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsView);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Container for the Results page.\r\n\r\nimport React from \"react\";\r\n\r\nimport ResultsView from \"../components/results/ResultsView\";\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\nclass ResultsContainer extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <div className={styles.contentArea}>\r\n        <ResultsView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultsContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Randomizes the Meet Setup state, for debugging.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport LocalizedString from \"../translations/LocalizedString\";\r\n\r\nimport { randomString, randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\r\n\r\nimport {\r\n  setDivisions,\r\n  setFederation,\r\n  setLengthDays,\r\n  setMeetName,\r\n  setPlatformsOnDays,\r\n  setWeightClasses,\r\n} from \"../../actions/meetSetupActions\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Sex } from \"../../types/dataTypes\";\r\n\r\ninterface DispatchProps {\r\n  setDivisions: (divisions: Array<string>) => void;\r\n  setFederation: (federation: string) => void;\r\n  setLengthDays: (length: number) => void;\r\n  setMeetName: (name: string) => void;\r\n  setPlatformsOnDays: (day: number, count: number) => void;\r\n  setWeightClasses: (sex: Sex, classesKg: number[]) => void;\r\n}\r\n\r\ntype Props = GlobalState & DispatchProps;\r\n\r\nconst NonsenseFederations = [\r\n  \"CTHULHU\",\r\n  \"USPLAWH\",\r\n  \"FIREFOX\",\r\n  \"PIZZAHUT\",\r\n  \"50% RAW\",\r\n  \"TODDLERS\",\r\n  \"COFFEE\",\r\n  \"THEBORG\",\r\n  \"LETITSNOW\",\r\n];\r\n\r\nconst NonsenseDivisions = [\"Masters\", \"Juniors\", \"Lawyers\", \"Infants\", \"Turtles\", \"Rabbits\"];\r\n\r\nclass RandomizeMeetSetupButton extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.randomizeMeetSetup = this.randomizeMeetSetup.bind(this);\r\n  }\r\n\r\n  randomizeMeetSetup() {\r\n    // Set a gibberish MeetName.\r\n    // ==========================================\r\n    this.props.setMeetName(randomString() + randomString());\r\n\r\n    // Generate a nonsense federation.\r\n    // ==========================================\r\n    const fed = NonsenseFederations[randomInt(0, NonsenseFederations.length - 1)];\r\n    this.props.setFederation(fed);\r\n\r\n    // Generate nonsense weight classes.\r\n    // ==========================================\r\n    const numClassesMen = randomInt(5, 12);\r\n    const numClassesWomen = randomInt(4, 8);\r\n\r\n    let classesMen = [];\r\n    for (let i = 0; i < numClassesMen; i++) {\r\n      classesMen.push(randomFixedPoint(40, 145, 1));\r\n    }\r\n    classesMen = classesMen.sort((a, b) => Number(a) - Number(b));\r\n\r\n    let classesWomen = [];\r\n    for (let i = 0; i < numClassesWomen; i++) {\r\n      classesWomen.push(randomFixedPoint(35, 110, 1));\r\n    }\r\n    classesWomen = classesWomen.sort((a, b) => Number(a) - Number(b));\r\n\r\n    let classesMx = [];\r\n    for (let i = 0; i < numClassesWomen; i++) {\r\n      classesMx.push(randomFixedPoint(40, 120, 1));\r\n    }\r\n    classesMx = classesMx.sort((a, b) => Number(a) - Number(b));\r\n\r\n    this.props.setWeightClasses(\"M\", classesMen);\r\n    this.props.setWeightClasses(\"F\", classesWomen);\r\n    this.props.setWeightClasses(\"Mx\", classesMx);\r\n\r\n    // Generate nonsense days and platforms.\r\n    // ==========================================\r\n    const numDays = randomInt(1, 4);\r\n    this.props.setLengthDays(numDays);\r\n\r\n    for (let i = 0; i < numDays; i++) {\r\n      const day = i + 1;\r\n      const numPlatforms = randomInt(1, 2);\r\n      this.props.setPlatformsOnDays(day, numPlatforms);\r\n    }\r\n\r\n    // Generate nonsense divisions.\r\n    // ==========================================\r\n    const numDivisions = randomInt(1, 20);\r\n    const divisions = [];\r\n    for (let i = 0; i < numDivisions; i++) {\r\n      let div = NonsenseDivisions[randomInt(0, NonsenseDivisions.length - 1)];\r\n      if (Math.random() > 0.5) {\r\n        const age_lower = randomInt(1, 40);\r\n        const age_upper = randomInt(age_lower + 1, 99);\r\n        div = div + \" \" + String(age_lower) + \"-\" + String(age_upper);\r\n      }\r\n\r\n      // Disallow repeat divisions.\r\n      if (divisions.indexOf(div) === -1) {\r\n        divisions.push(div);\r\n      }\r\n    }\r\n    this.props.setDivisions(divisions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button onClick={this.randomizeMeetSetup}>\r\n        <LocalizedString id=\"nav.meet-setup\" />\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\r\n  ...state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    setDivisions: (divisions: Array<string>) => dispatch(setDivisions(divisions)),\r\n    setFederation: (federation: string) => dispatch(setFederation(federation)),\r\n    setLengthDays: (length: number) => dispatch(setLengthDays(length)),\r\n    setMeetName: (name: string) => dispatch(setMeetName(name)),\r\n    setPlatformsOnDays: (day: number, count: number) => dispatch(setPlatformsOnDays(day, count)),\r\n    setWeightClasses: (sex: Sex, classesKg: number[]) => dispatch(setWeightClasses(sex, classesKg)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeMeetSetupButton);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Randomizes the Registration page, for debugging.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport LocalizedString from \"../translations/LocalizedString\";\r\n\r\nimport { randomInt } from \"./RandomizeHelpers\";\r\nimport { newRegistration, deleteRegistration } from \"../../actions/registrationActions\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\nimport { Event, Entry, Sex, Equipment, Flight } from \"../../types/dataTypes\";\r\n\r\nconst NonsenseFirstNames = [\r\n  \"Aragorn\",\r\n  \"Arwen\",\r\n  \"Aule\",\r\n  \"Balin\",\r\n  \"Beorn\",\r\n  \"Beregond\",\r\n  \"Bert\",\r\n  \"Bifur\",\r\n  \"Bilbo\",\r\n  \"Bofur\",\r\n  \"Bolg\",\r\n  \"Bombur\",\r\n  \"Boromir\",\r\n  \"Bregalad\",\r\n  \"Bullroarer\",\r\n  \"Bungo\",\r\n  \"Carc\",\r\n  \"Celeborn\",\r\n  \"Dain\",\r\n  \"Denethor\",\r\n  \"Dori\",\r\n  \"Dwalin\",\r\n  \"Elrohir\",\r\n  \"Elrond\",\r\n  \"Eomer\",\r\n  \"Eowyn\",\r\n  \"Este\",\r\n  \"Faramir\",\r\n  \"Fili\",\r\n  \"Fredegar\",\r\n  \"Frodo\",\r\n  \"Galadriel\",\r\n  \"Galion\",\r\n  \"Gandalf\",\r\n  \"Gimli\",\r\n  \"Gloin\",\r\n  \"Glorfindel\",\r\n  \"Golfimbul\",\r\n  \"Gollum\",\r\n  \"Gothmog\",\r\n  \"Grima\",\r\n  \"Imrahil\",\r\n  \"Kili\",\r\n  \"Legolas\",\r\n  \"Lorien\",\r\n  \"Mandos\",\r\n  \"Manwe\",\r\n  \"Melkor\",\r\n  \"Meriadoc\",\r\n  \"Nessa\",\r\n  \"Nienna\",\r\n  \"Nori\",\r\n  \"Oin\",\r\n  \"Ori\",\r\n  \"Orome\",\r\n  \"Peregrin\",\r\n  \"Pippin\",\r\n  \"Radagast\",\r\n  \"Roac\",\r\n  \"Samwise\",\r\n  \"Saruman\",\r\n  \"Sauron\",\r\n  \"Shelob\",\r\n  \"Smaug\",\r\n  \"Theoden\",\r\n  \"Thorin\",\r\n  \"Thranduil\",\r\n  \"Tom\",\r\n  \"Treebeard\",\r\n  \"Tulkas\",\r\n  \"Ulmo\",\r\n  \"Vaire\",\r\n  \"Vana\",\r\n  \"Varda\",\r\n  \"William\",\r\n  \"Yavanna\",\r\n];\r\n\r\nconst NonsenseLastNames = [\r\n  \"Black\",\r\n  \"Burbage\",\r\n  \"Carrow\",\r\n  \"Cattermole\",\r\n  \"Chang\",\r\n  \"Clearwater\",\r\n  \"Crabbe\",\r\n  \"Creevey\",\r\n  \"Crouch\",\r\n  \"Delacour\",\r\n  \"Diggory\",\r\n  \"Dumbledore\",\r\n  \"Dursley\",\r\n  \"Edgecombe\",\r\n  \"Filch\",\r\n  \"Flitwick\",\r\n  \"Fudge\",\r\n  \"Goyle\",\r\n  \"Granger\",\r\n  \"Grindelwald\",\r\n  \"Hagrid\",\r\n  \"Hufflepuff\",\r\n  \"Kettleburn\",\r\n  \"Lockhart\",\r\n  \"Longbottom\",\r\n  \"Lovegood\",\r\n  \"Lupin\",\r\n  \"Malfoy\",\r\n  \"Marchbanks\",\r\n  \"McGonagall\",\r\n  \"McLaggen\",\r\n  \"Moody\",\r\n  \"Nott\",\r\n  \"Ogden\",\r\n  \"Ollivander\",\r\n  \"Parkinson\",\r\n  \"Pettigrew\",\r\n  \"Peverell\",\r\n  \"Pince\",\r\n  \"Podmore\",\r\n  \"Pomfrey\",\r\n  \"Potter\",\r\n  \"Quirrell\",\r\n  \"Riddle\",\r\n  \"Rookwood\",\r\n  \"Rowle\",\r\n  \"Runcorn\",\r\n  \"Scrimgeour\",\r\n  \"Shacklebolt\",\r\n  \"Shunpike\",\r\n  \"Sinistra\",\r\n  \"Slughorn\",\r\n  \"Slytherin\",\r\n  \"Snape\",\r\n  \"Spinnet\",\r\n  \"Sprout\",\r\n  \"Thicknesse\",\r\n  \"Tonks\",\r\n  \"Trelawney\",\r\n  \"Twycross\",\r\n  \"Umbridge\",\r\n  \"Vance\",\r\n  \"Voldemort\",\r\n  \"Weasley\",\r\n  \"Wood\",\r\n  \"Yaxley\",\r\n  \"Zabini\",\r\n];\r\n\r\ninterface DispatchProps {\r\n  newRegistration: (obj: Partial<Entry>) => void;\r\n  deleteRegistration: (entryId: number) => void;\r\n}\r\n\r\ntype Props = GlobalState & DispatchProps;\r\n\r\nclass RandomizeRegistrationButton extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.deleteExistingRegistrations = this.deleteExistingRegistrations.bind(this);\r\n    this.generateEntries = this.generateEntries.bind(this);\r\n    this.randomizeRegistration = this.randomizeRegistration.bind(this);\r\n  }\r\n\r\n  deleteExistingRegistrations() {\r\n    const entryIds = this.props.registration.entries.map((e) => e.id);\r\n    for (let i = 0; i < entryIds.length; i++) {\r\n      this.props.deleteRegistration(entryIds[i]);\r\n    }\r\n  }\r\n\r\n  // Generate entries in a flight together, in case we want to give them\r\n  // similar properties.\r\n  generateEntries(day: number, platform: number, flight: Flight) {\r\n    const numLifters = randomInt(6, 18);\r\n\r\n    for (let i = 0; i < numLifters; i++) {\r\n      // Set a nonsense Name.\r\n      // ==========================================\r\n      const firstName = NonsenseFirstNames[randomInt(0, NonsenseFirstNames.length - 1)];\r\n      const lastName = NonsenseLastNames[randomInt(0, NonsenseLastNames.length - 1)];\r\n      const name = firstName + \" \" + lastName;\r\n\r\n      // Set a random Sex.\r\n      // ==========================================\r\n      const sexes: Sex[] = [\"M\", \"F\", \"Mx\"];\r\n      const sex: Sex = sexes[randomInt(0, sexes.length - 1)];\r\n\r\n      // 10% chance they're a guest.\r\n      // ==========================================\r\n      const isGuest: boolean = randomInt(1, 10) === 1;\r\n\r\n      // Assign a random Team.\r\n      // ==========================================\r\n      const teams: string[] = [\"Team Red\", \"Team Green\", \"Team Blue\"];\r\n      const team: string = teams[randomInt(0, teams.length - 1)];\r\n\r\n      // Generate random events, making most lifters SBD.\r\n      // ==========================================\r\n      const events: Event[] = [];\r\n      if (Math.random() < 0.5) {\r\n        events.push(\"SBD\");\r\n      }\r\n      if (Math.random() < 0.1) {\r\n        events.push(\"BD\");\r\n      }\r\n      if (Math.random() < 0.1) {\r\n        events.push(\"S\");\r\n      }\r\n      if (Math.random() < 0.1) {\r\n        events.push(\"B\");\r\n      }\r\n      if (Math.random() < 0.1) {\r\n        events.push(\"D\");\r\n      }\r\n      if (events.length === 0) {\r\n        events.push(\"SBD\");\r\n      }\r\n\r\n      // Generate random equipment, making most lifters SBD,\r\n      // being careful that it matches their events.\r\n      // ==========================================\r\n      let hasSquat = false;\r\n      for (let i = 0; i < events.length; i++) {\r\n        if (events[i].includes(\"S\")) {\r\n          hasSquat = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      const equipmentSelect = Math.random();\r\n      let equipment: Equipment = \"Sleeves\";\r\n      if (equipmentSelect < 0.7) {\r\n        // Nothing, sleeves default case.\r\n      } else if (equipmentSelect < 0.9) {\r\n        if (hasSquat) {\r\n          equipment = \"Wraps\";\r\n        }\r\n      } else if (equipmentSelect < 0.95) {\r\n        equipment = \"Single-ply\";\r\n      } else if (equipmentSelect < 0.98) {\r\n        equipment = \"Multi-ply\";\r\n      } else {\r\n        equipment = \"Unlimited\";\r\n      }\r\n\r\n      // File into random divisions.\r\n      // ==========================================\r\n      const divisions = [];\r\n      if (this.props.meet.divisions.length > 0) {\r\n        const divisionsUpperBound = Math.max(1, this.props.meet.divisions.length - 1);\r\n        const numDivisions = randomInt(1, divisionsUpperBound);\r\n\r\n        // List of remaining available divisions.\r\n        const divchooser = this.props.meet.divisions.slice();\r\n\r\n        for (let i = 0; i < numDivisions; i++) {\r\n          const choice = randomInt(0, divchooser.length - 1);\r\n          divisions.push(divchooser[choice]);\r\n\r\n          // Delete the choice from the list of available divisions.\r\n          divchooser.splice(choice, 1);\r\n        }\r\n      }\r\n\r\n      this.props.newRegistration({\r\n        day: day,\r\n        platform: platform,\r\n        flight: flight,\r\n        name: name,\r\n        sex: sex,\r\n        team: team,\r\n        events: events,\r\n        equipment: equipment,\r\n        divisions: divisions,\r\n        guest: isGuest,\r\n      });\r\n    }\r\n  }\r\n\r\n  randomizeRegistration() {\r\n    const FLIGHTCHARS: Flight[] = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\"];\r\n\r\n    this.deleteExistingRegistrations();\r\n    for (let day = 1; day <= this.props.meet.lengthDays; day++) {\r\n      const numPlatforms = this.props.meet.platformsOnDays[day - 1];\r\n      for (let platform = 1; platform <= numPlatforms; platform++) {\r\n        const numFlights = randomInt(1, 3);\r\n        for (let flight = 0; flight < numFlights; flight++) {\r\n          this.generateEntries(day, platform, FLIGHTCHARS[flight]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Button onClick={this.randomizeRegistration}>\r\n        <LocalizedString id=\"nav.registration\" />\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\r\n  ...state,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => {\r\n  return {\r\n    newRegistration: (obj: Partial<Entry>) => dispatch(newRegistration(obj)),\r\n    deleteRegistration: (entryId: number) => dispatch(deleteRegistration(entryId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeRegistrationButton);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Randomizes the Registration page, for debugging.\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport LocalizedString from \"../translations/LocalizedString\";\r\n\r\nimport { randomInt, randomFixedPoint } from \"./RandomizeHelpers\";\r\nimport { lbs2kg } from \"../../logic/units\";\r\n\r\nimport { updateRegistration } from \"../../actions/registrationActions\";\r\nimport { enterAttempt } from \"../../actions/liftingActions\";\r\n\r\nimport { GlobalState, MeetState, RegistrationState } from \"../../types/stateTypes\";\r\nimport { Entry, Lift } from \"../../types/dataTypes\";\r\n\r\ninterface StateProps {\r\n  meet: MeetState;\r\n  registration: RegistrationState;\r\n}\r\n\r\ninterface DispatchProps {\r\n  updateRegistration: (entryId: number, obj: Partial<Entry>) => void;\r\n  enterAttempt: (entryId: number, lift: Lift, attemptOneIndexed: number, weightKg: number) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nclass RandomizeWeighinsButton extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.randomizeWeighins = this.randomizeWeighins.bind(this);\r\n  }\r\n\r\n  randomAttempt = () => {\r\n    const multiple = 2.5;\r\n    if (this.props.meet.inKg) {\r\n      return Math.floor(randomFixedPoint(25, 360, 1) / multiple) * multiple;\r\n    } else {\r\n      return lbs2kg(Math.floor(randomFixedPoint(55, 800, 1) / multiple) * multiple);\r\n    }\r\n  };\r\n\r\n  randomizeWeighins = () => {\r\n    const entries = this.props.registration.entries;\r\n    const inKg: boolean = this.props.meet.inKg;\r\n\r\n    for (let i = 0; i < entries.length; i++) {\r\n      const entry = entries[i];\r\n\r\n      // Get a random bodyweight.\r\n      // ==========================================\r\n      const bodyweightKg = inKg ? randomFixedPoint(20, 150, 1) : lbs2kg(randomFixedPoint(40, 320, 1));\r\n      this.props.updateRegistration(entry.id, {\r\n        bodyweightKg: bodyweightKg,\r\n      });\r\n\r\n      // Get a random age.\r\n      const age = randomInt(5, 79);\r\n      this.props.updateRegistration(entry.id, {\r\n        age: age,\r\n      });\r\n\r\n      // Figure out which events we're generating information for.\r\n      // ==========================================\r\n      let hasSquat = false;\r\n      let hasBench = false;\r\n      let hasDeadlift = false;\r\n      for (let j = 0; j < entry.events.length; j++) {\r\n        const e = entry.events[j];\r\n        if (e.includes(\"S\")) {\r\n          hasSquat = true;\r\n        }\r\n        if (e.includes(\"B\")) {\r\n          hasBench = true;\r\n        }\r\n        if (e.includes(\"D\")) {\r\n          hasDeadlift = true;\r\n        }\r\n      }\r\n\r\n      // Set attempts.\r\n      // ==========================================\r\n      if (hasSquat) {\r\n        this.props.enterAttempt(entry.id, \"S\", 1, this.randomAttempt());\r\n      }\r\n      if (hasBench) {\r\n        this.props.enterAttempt(entry.id, \"B\", 1, this.randomAttempt());\r\n      }\r\n      if (hasDeadlift) {\r\n        this.props.enterAttempt(entry.id, \"D\", 1, this.randomAttempt());\r\n      }\r\n\r\n      // Set rack info.\r\n      // ==========================================\r\n      if (hasSquat) {\r\n        const height = String(randomInt(2, 18));\r\n        const pos = Math.random() < 0.9 ? \"out\" : \"in\";\r\n        this.props.updateRegistration(entry.id, {\r\n          squatRackInfo: height + pos,\r\n        });\r\n      }\r\n\r\n      if (hasBench) {\r\n        const height = String(randomInt(0, 12));\r\n        const safety = String(randomInt(0, 4));\r\n        this.props.updateRegistration(entry.id, {\r\n          benchRackInfo: height + \"/\" + safety,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Button onClick={this.randomizeWeighins}>\r\n        <LocalizedString id=\"nav.weigh-ins\" />\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): StateProps => ({\r\n  meet: state.meet,\r\n  registration: state.registration,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\r\n  updateRegistration: (entryId, obj) => dispatch(updateRegistration(entryId, obj)),\r\n  enterAttempt: (entryId, lift, attemptOneIndexed, weightKg) =>\r\n    dispatch(enterAttempt(entryId, lift, attemptOneIndexed, weightKg)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeWeighinsButton);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Tools for manipulating state information to aid debugging.\r\n\r\nimport React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport RandomizeMeetSetupButton from \"./RandomizeMeetSetup\";\r\nimport RandomizeRegistrationButton from \"./RandomizeRegistration\";\r\nimport RandomizeWeighinsButton from \"./RandomizeWeighins\";\r\n\r\nimport { GlobalState } from \"../../types/stateTypes\";\r\n\r\nclass StateTools extends React.Component<GlobalState> {\r\n  // The simplest possible way to implement a Reset button.\r\n  reInitializeRedux = () => {\r\n    localStorage.clear();\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card style={{ marginBottom: \"17px\" }}>\r\n          <Card.Header>\r\n            <FormattedMessage id=\"debug.generator-card-header\" defaultMessage=\"Generate Random Valid Data\" />\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Button style={{ marginRight: \"15px\" }} variant=\"danger\" onClick={this.reInitializeRedux}>\r\n              <FormattedMessage id=\"debug.button-reset\" defaultMessage=\"Reset\" />\r\n            </Button>\r\n            <ButtonGroup>\r\n              <RandomizeMeetSetupButton />\r\n              <RandomizeRegistrationButton />\r\n              <RandomizeWeighinsButton />\r\n            </ButtonGroup>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card>\r\n          <Card.Header>\r\n            <FormattedMessage id=\"debug.state-card-header\" defaultMessage=\"Redux State\" />\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <pre>{JSON.stringify(this.props, null, 2)}</pre>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState): GlobalState => ({\r\n  ...state,\r\n});\r\n\r\nexport default connect(mapStateToProps)(StateTools);\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// A page dedicated to debugging tools.\r\n\r\nimport React from \"react\";\r\n\r\nimport StateTools from \"../components/debug/StateTools\";\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\nconst DebugContainer = () => {\r\n  return (\r\n    <div className={styles.contentArea}>\r\n      <StateTools />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DebugContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2020 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport styles from \"../components/common/ContentArea.module.scss\";\r\n\r\n// Extracted out so that <pre> renders linebreaks properly.\r\nconst licenseText =\r\n  \"This program is free software: you can redistribute it and/or modify\\n\" +\r\n  \"it under the terms of the GNU Affero General Public License as\\n\" +\r\n  \"published by the Free Software Foundation, either version 3 of the\\n\" +\r\n  \"License, or (at your option) any later version.\\n\" +\r\n  \"\\n\" +\r\n  \"This program is distributed in the hope that it will be useful,\\n\" +\r\n  \"but WITHOUT ANY WARRANTY; without even the implied warranty of\\n\" +\r\n  \"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n\" +\r\n  \"GNU Affero General Public License for more details.\";\r\n\r\nclass AboutContainer extends React.Component<{}> {\r\n  render() {\r\n    return (\r\n      <Container className={styles.contentArea}>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Card>\r\n              <Card.Header>\r\n                <FormattedMessage id=\"about.credits-header\" defaultMessage=\"Credits\" />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <p>\r\n                  <FormattedMessage\r\n                    id=\"about.made-by\"\r\n                    defaultMessage=\"OpenLifter is made by the OpenPowerlifting project.\"\r\n                  />\r\n                </p>\r\n                <p>\r\n                  <a href=\"https://www.openpowerlifting.org\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                    OpenPowerlifting.org\r\n                  </a>\r\n                </p>\r\n                <p>\r\n                  <FormattedMessage id=\"about.credits-intro\" defaultMessage=\"Thanks to:\" />\r\n                  <ul>\r\n                    <li>Irene Aguilar &mdash; Spanish localization</li>\r\n                    <li>Baptiste Appel &mdash; French localization</li>\r\n                    <li>Baptiste Marchais &mdash; French localization</li>\r\n                    <li>Romina Basting &mdash; German localization</li>\r\n                    <li>Mike Beelen &mdash; Dutch localization</li>\r\n                    <li>Sean Berlin &mdash; Patron</li>\r\n                    <li>Jerônimo Cavalcante &mdash; Portuguese localization</li>\r\n                    <li>Arman Danielyan &mdash; Russian localization</li>\r\n                    <li>Tommy DeFea &mdash; Graphic design</li>\r\n                    <li>Alper Dokucu &mdash; Turkish localization</li>\r\n                    <li>David Jasiulewicz &mdash; Patron</li>\r\n                    <li>Jared Klopper &mdash; Programming</li>\r\n                    <li>Andreas Kolettis &mdash; Greek localization</li>\r\n                    <li>Boris Lerner &mdash; Russian localization</li>\r\n                    <li>Kai Ma &mdash; Simplified Chinese localization</li>\r\n                    <li>Rodney Marsh &mdash; Programming</li>\r\n                    <li>Giulio Maschi &mdash; Italian localization</li>\r\n                    <li>Trystan Oakley &mdash; Testing</li>\r\n                    <li>Matt Pearce &mdash; Coefficient calculations</li>\r\n                    <li>David Sacras &mdash; Portuguese localization</li>\r\n                    <li>Alan Sambol &mdash; Croatian localization</li>\r\n                    <li>Milena Schaefer &mdash; German localization</li>\r\n                    <li>Vitaliy Shvarz &mdash; Ukrainian localization</li>\r\n                    <li>Sean Stangl &mdash; Programming and maintenance</li>\r\n                    <li>Michael Vessia &mdash; Programming and maintenance</li>\r\n                    <li>Andrius Virbičianskas &mdash; Lithuanian localization</li>\r\n                    <li>Sarah Wellberg &mdash; UX design and testing</li>\r\n                    <li>Jo Whiteley &mdash; Testing</li>\r\n                  </ul>\r\n                </p>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <Card>\r\n              <Card.Header>\r\n                <FormattedMessage id=\"about.license-header\" defaultMessage=\"License\" />\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <p>\r\n                  <FormattedMessage\r\n                    id=\"about.copyright\"\r\n                    defaultMessage=\"OpenLifter is Copyright (C) 2018-2020 The OpenPowerlifting Project.\"\r\n                  />\r\n                </p>\r\n                <p>\r\n                  <FormattedMessage\r\n                    id=\"about.freedom-intro\"\r\n                    defaultMessage=\"OpenLifter is Free Software. Free Software grants you the following freedoms:\"\r\n                  />\r\n                </p>\r\n                <ol>\r\n                  <li>\r\n                    <FormattedMessage\r\n                      id=\"about.freedom-0\"\r\n                      defaultMessage=\"The freedom to run the program as you wish, for any purpose.\"\r\n                    />\r\n                  </li>\r\n                  <li>\r\n                    <FormattedMessage\r\n                      id=\"about.freedom-1\"\r\n                      defaultMessage=\"The freedom to study how the program works, and change it as you wish.\"\r\n                    />\r\n                  </li>\r\n                  <li>\r\n                    <FormattedMessage\r\n                      id=\"about.freedom-2\"\r\n                      defaultMessage=\"The freedom to redistribute copies so you can help others.\"\r\n                    />\r\n                  </li>\r\n                  <li>\r\n                    <FormattedMessage\r\n                      id=\"about.freedom-3\"\r\n                      defaultMessage=\"The freedom to distribute copies of your modified versions to others.\"\r\n                    />\r\n                  </li>\r\n                </ol>\r\n                <p>\r\n                  <FormattedMessage\r\n                    id=\"about.freedom-quick-summary\"\r\n                    defaultMessage=\"The AGPLv3+ license we use means that if you distribute this software or host it on a server, you must give your users the same rights we give you, including full source code. In addition, AGPLv3+ code must remain free/libre, and cannot be included in proprietary software or in free/libre software with a weaker or incompatible license.\"\r\n                  />\r\n                </p>\r\n                <p>\r\n                  <FormattedMessage\r\n                    id=\"about.agpl-short-english-intro\"\r\n                    defaultMessage=\"Here is the short English license blurb:\"\r\n                  />\r\n                </p>\r\n                <pre>{licenseText}</pre>\r\n                <a href=\"https://www.gnu.org/licenses/agpl-3.0.en.html\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <FormattedMessage\r\n                    id=\"about.link-full-agpl-license\"\r\n                    defaultMessage=\"Full Text of the GNU Affero General Public License, Version 3\"\r\n                  />\r\n                </a>\r\n                <br />\r\n                <a href=\"https://www.gnu.org/licenses/gpl-faq.html\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <FormattedMessage id=\"about.link-gnu-faq\" defaultMessage=\"FAQ about GNU Licenses\" />\r\n                </a>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// The RootContainer manually implements route parsing from GET parameters.\r\n//\r\n// The issue is that because OpenLifter is statically hosted, only the base\r\n// \"/\" route actually contains the index.html of the application. The other\r\n// routes (such as \"/lifting\") have index.html files that redirect to \"/\".\r\n//\r\n// We've changed things so that \"/lifting/index.html\" redirects to \"/?lifting\".\r\n// But React Router isn't able to route based on GET parameters.\r\n//\r\n// Therefore it's set up so that \"/\" routes to this RootContainer,\r\n// and the RootContainer inspects the GET parameters and renders the\r\n// appropriate container.\r\n\r\nimport React from \"react\";\r\n\r\nimport HomeContainer from \"./HomeContainer\";\r\nimport MeetSetupContainer from \"./MeetSetupContainer\";\r\nimport RegistrationContainer from \"./RegistrationContainer\";\r\nimport WeighinsContainer from \"./WeighinsContainer\";\r\nimport LiftingContainer from \"./LiftingContainer\";\r\nimport FlightOrderContainer from \"./FlightOrderContainer\";\r\nimport ResultsContainer from \"./ResultsContainer\";\r\nimport DebugContainer from \"./DebugContainer\";\r\nimport AboutContainer from \"./AboutContainer\";\r\n\r\nclass RootContainer extends React.Component {\r\n  render() {\r\n    if (typeof window.location.search !== \"string\") {\r\n      return <HomeContainer />;\r\n    }\r\n\r\n    switch (window.location.search) {\r\n      case \"?meet-setup\":\r\n        return <MeetSetupContainer />;\r\n      case \"?registration\":\r\n        return <RegistrationContainer />;\r\n      case \"?weigh-ins\":\r\n        return <WeighinsContainer />;\r\n      case \"?flight-order\":\r\n        return <FlightOrderContainer />;\r\n      case \"?lifting\":\r\n        return <LiftingContainer />;\r\n      case \"?results\":\r\n        return <ResultsContainer />;\r\n      case \"?debug\":\r\n        return <DebugContainer />;\r\n      case \"?about\":\r\n        return <AboutContainer />;\r\n      default:\r\n        return <HomeContainer />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RootContainer;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n// Defines the Navigation component for navigating between pages using react-router.\r\n\r\nimport React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\n// The LinkContainer is used to wrap Components that change the URL,\r\n// hooking them up with the Router.\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Navbar sticky=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand>\r\n        <img alt=\"OpenLifter\" src=\"openlifter-white.svg\" height=\"20\" />\r\n      </Navbar.Brand>\r\n\r\n      {/* Navbar uses Toggle and Collapse to automatically create a hamburger menu\r\n          in case of overflow on small screens.*/}\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav>\r\n          <LinkContainer exact to=\"/\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.home\" defaultMessage=\"Home\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/meet-setup\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.meet-setup\" defaultMessage=\"Meet Setup\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/registration\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.registration\" defaultMessage=\"Registration\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/weigh-ins\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.weigh-ins\" defaultMessage=\"Weigh-ins\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/flight-order\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.flight-order\" defaultMessage=\"Flight Order\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/lifting\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.lifting\" defaultMessage=\"Lifting\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/results\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.results\" defaultMessage=\"Results\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/debug\">\r\n            <Nav.Link>\r\n              <FormattedMessage id=\"nav.debug\" defaultMessage=\"Debug\" />\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nimport { GlobalState } from \"./types/stateTypes\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default function configureStore(initialState: Partial<GlobalState> = {}) {\r\n  const store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\r\n  const persistor = persistStore(store as any);\r\n  return { store, persistor };\r\n}\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport OpenLifterIntlProvider from \"./components/translations/OpenLifterIntlProvider\";\r\n\r\nimport RootContainer from \"./containers/RootContainer\";\r\nimport MeetSetupContainer from \"./containers/MeetSetupContainer\";\r\nimport RegistrationContainer from \"./containers/RegistrationContainer\";\r\nimport WeighinsContainer from \"./containers/WeighinsContainer\";\r\nimport LiftingContainer from \"./containers/LiftingContainer\";\r\nimport FlightOrderContainer from \"./containers/FlightOrderContainer\";\r\nimport ResultsContainer from \"./containers/ResultsContainer\";\r\nimport DebugContainer from \"./containers/DebugContainer\";\r\nimport AboutContainer from \"./containers/AboutContainer\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nimport configureStore from \"./store\";\r\n\r\nimport { getDefaultLanguage } from \"./logic/strings\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const { store, persistor } = configureStore({ language: getDefaultLanguage() });\r\n\r\n    return (\r\n      // Provider is a React component from the react-redux library.\r\n      // Its purpose is to \"provide\" the given store to its child components.\r\n      // Because the Provider wraps the whole App here, the store is global state.\r\n      //\r\n      // Switch iterates over its children (Routes) and renders the first one that matches the current path name\r\n      //\r\n      // Route takes a path and a component, and renders the given component if the current path matches the specified path.\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <OpenLifterIntlProvider>\r\n            <Router basename={process.env.REACT_APP_ROUTER_BASENAME}>\r\n              <div>\r\n                <Navigation />\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={RootContainer} />\r\n                  <Route path=\"/meet-setup\" component={MeetSetupContainer} />\r\n                  <Route path=\"/registration\" component={RegistrationContainer} />\r\n                  <Route path=\"/weigh-ins\" component={WeighinsContainer} />\r\n                  <Route path=\"/flight-order\" component={FlightOrderContainer} />\r\n                  <Route path=\"/lifting\" component={LiftingContainer} />\r\n                  <Route path=\"/results\" component={ResultsContainer} />\r\n                  <Route path=\"/debug\" component={DebugContainer} />\r\n                  <Route path=\"/about\" component={AboutContainer} />\r\n                </Switch>\r\n              </div>\r\n            </Router>\r\n          </OpenLifterIntlProvider>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// vim: set ts=2 sts=2 sw=2 et:\r\n//\r\n// This file is part of OpenLifter, simple Powerlifting meet software.\r\n// Copyright (C) 2019 The OpenPowerlifting Project.\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU Affero General Public License as\r\n// published by the Free Software Foundation, either version 3 of the\r\n// License, or (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU Affero General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU Affero General Public License\r\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\n\r\nimport \"./bootstrap-custom/bootstrap.scss\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nif (rootElement !== null) {\r\n  ReactDOM.render(<App />, rootElement);\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LeftCard_container__224ZR\",\"activeCard\":\"LeftCard_activeCard__7ptaO\",\"loadingBar\":\"LeftCard_loadingBar__2dMev\",\"attemptText\":\"LeftCard_attemptText__2zg7T\",\"barArea\":\"LeftCard_barArea__tctCO\",\"nextText\":\"LeftCard_nextText__8bAuP\"};"],"sourceRoot":""}